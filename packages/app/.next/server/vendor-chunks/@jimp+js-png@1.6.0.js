"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@jimp+js-png@1.6.0";
exports.ids = ["vendor-chunks/@jimp+js-png@1.6.0"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/@jimp+js-png@1.6.0/node_modules/@jimp/js-png/dist/commonjs/constants.js":
/*!********************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@jimp+js-png@1.6.0/node_modules/@jimp/js-png/dist/commonjs/constants.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PNGColorType = exports.PNGFilterType = void 0;\n/**\n * Filter method is a single-byte integer that indicates the preprocessing method applied to the image data before compression.\n */\nvar PNGFilterType;\n(function (PNGFilterType) {\n    PNGFilterType[PNGFilterType[\"AUTO\"] = -1] = \"AUTO\";\n    /** scanline is transmitted unmodified */\n    PNGFilterType[PNGFilterType[\"NONE\"] = 0] = \"NONE\";\n    /** filter transmits the difference between each byte and the value of the corresponding byte of the prior pixel */\n    PNGFilterType[PNGFilterType[\"SUB\"] = 1] = \"SUB\";\n    /** The Up() filter is just like the Sub() filter except that the pixel immediately above the current pixel, rather than just to its left, is used as the predictor. */\n    PNGFilterType[PNGFilterType[\"UP\"] = 2] = \"UP\";\n    /** uses the average of the two neighboring pixels (left and above) to predict the value of a pixel */\n    PNGFilterType[PNGFilterType[\"AVERAGE\"] = 3] = \"AVERAGE\";\n    /** computes a simple linear function of the three neighboring pixels (left, above, upper left), then chooses as predictor the neighboring pixel closest to the computed value. */\n    PNGFilterType[PNGFilterType[\"PATH\"] = 4] = \"PATH\";\n})(PNGFilterType || (exports.PNGFilterType = PNGFilterType = {}));\n/**\n * Color type is a single-byte integer that describes the interpretation of the image data.\n * Color type codes represent sums of the following values:\n *\n * 1 (palette used), 2 (color used), and 4 (alpha channel used).\n */\nvar PNGColorType;\n(function (PNGColorType) {\n    PNGColorType[PNGColorType[\"GRAYSCALE\"] = 0] = \"GRAYSCALE\";\n    PNGColorType[PNGColorType[\"COLOR\"] = 2] = \"COLOR\";\n    PNGColorType[PNGColorType[\"GRAYSCALE_ALPHA\"] = 4] = \"GRAYSCALE_ALPHA\";\n    PNGColorType[PNGColorType[\"COLOR_ALPHA\"] = 6] = \"COLOR_ALPHA\";\n})(PNGColorType || (exports.PNGColorType = PNGColorType = {}));\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BqaW1wK2pzLXBuZ0AxLjYuMC9ub2RlX21vZHVsZXMvQGppbXAvanMtcG5nL2Rpc3QvY29tbW9uanMvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQixHQUFHLHFCQUFxQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0JBQW9CLHFCQUFxQixxQkFBcUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxtQkFBbUIsb0JBQW9CLG9CQUFvQjtBQUM1RCIsInNvdXJjZXMiOlsiL1VzZXJzL21pa2V3ZXN0aGFkL0Rlc2t0b3AvUmVwb3Mvc3BvcmFkaWMtbGFicy10aWxlLWV4dHJ1ZGVyL25vZGVfbW9kdWxlcy8ucG5wbS9AamltcCtqcy1wbmdAMS42LjAvbm9kZV9tb2R1bGVzL0BqaW1wL2pzLXBuZy9kaXN0L2NvbW1vbmpzL2NvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUE5HQ29sb3JUeXBlID0gZXhwb3J0cy5QTkdGaWx0ZXJUeXBlID0gdm9pZCAwO1xuLyoqXG4gKiBGaWx0ZXIgbWV0aG9kIGlzIGEgc2luZ2xlLWJ5dGUgaW50ZWdlciB0aGF0IGluZGljYXRlcyB0aGUgcHJlcHJvY2Vzc2luZyBtZXRob2QgYXBwbGllZCB0byB0aGUgaW1hZ2UgZGF0YSBiZWZvcmUgY29tcHJlc3Npb24uXG4gKi9cbnZhciBQTkdGaWx0ZXJUeXBlO1xuKGZ1bmN0aW9uIChQTkdGaWx0ZXJUeXBlKSB7XG4gICAgUE5HRmlsdGVyVHlwZVtQTkdGaWx0ZXJUeXBlW1wiQVVUT1wiXSA9IC0xXSA9IFwiQVVUT1wiO1xuICAgIC8qKiBzY2FubGluZSBpcyB0cmFuc21pdHRlZCB1bm1vZGlmaWVkICovXG4gICAgUE5HRmlsdGVyVHlwZVtQTkdGaWx0ZXJUeXBlW1wiTk9ORVwiXSA9IDBdID0gXCJOT05FXCI7XG4gICAgLyoqIGZpbHRlciB0cmFuc21pdHMgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBlYWNoIGJ5dGUgYW5kIHRoZSB2YWx1ZSBvZiB0aGUgY29ycmVzcG9uZGluZyBieXRlIG9mIHRoZSBwcmlvciBwaXhlbCAqL1xuICAgIFBOR0ZpbHRlclR5cGVbUE5HRmlsdGVyVHlwZVtcIlNVQlwiXSA9IDFdID0gXCJTVUJcIjtcbiAgICAvKiogVGhlIFVwKCkgZmlsdGVyIGlzIGp1c3QgbGlrZSB0aGUgU3ViKCkgZmlsdGVyIGV4Y2VwdCB0aGF0IHRoZSBwaXhlbCBpbW1lZGlhdGVseSBhYm92ZSB0aGUgY3VycmVudCBwaXhlbCwgcmF0aGVyIHRoYW4ganVzdCB0byBpdHMgbGVmdCwgaXMgdXNlZCBhcyB0aGUgcHJlZGljdG9yLiAqL1xuICAgIFBOR0ZpbHRlclR5cGVbUE5HRmlsdGVyVHlwZVtcIlVQXCJdID0gMl0gPSBcIlVQXCI7XG4gICAgLyoqIHVzZXMgdGhlIGF2ZXJhZ2Ugb2YgdGhlIHR3byBuZWlnaGJvcmluZyBwaXhlbHMgKGxlZnQgYW5kIGFib3ZlKSB0byBwcmVkaWN0IHRoZSB2YWx1ZSBvZiBhIHBpeGVsICovXG4gICAgUE5HRmlsdGVyVHlwZVtQTkdGaWx0ZXJUeXBlW1wiQVZFUkFHRVwiXSA9IDNdID0gXCJBVkVSQUdFXCI7XG4gICAgLyoqIGNvbXB1dGVzIGEgc2ltcGxlIGxpbmVhciBmdW5jdGlvbiBvZiB0aGUgdGhyZWUgbmVpZ2hib3JpbmcgcGl4ZWxzIChsZWZ0LCBhYm92ZSwgdXBwZXIgbGVmdCksIHRoZW4gY2hvb3NlcyBhcyBwcmVkaWN0b3IgdGhlIG5laWdoYm9yaW5nIHBpeGVsIGNsb3Nlc3QgdG8gdGhlIGNvbXB1dGVkIHZhbHVlLiAqL1xuICAgIFBOR0ZpbHRlclR5cGVbUE5HRmlsdGVyVHlwZVtcIlBBVEhcIl0gPSA0XSA9IFwiUEFUSFwiO1xufSkoUE5HRmlsdGVyVHlwZSB8fCAoZXhwb3J0cy5QTkdGaWx0ZXJUeXBlID0gUE5HRmlsdGVyVHlwZSA9IHt9KSk7XG4vKipcbiAqIENvbG9yIHR5cGUgaXMgYSBzaW5nbGUtYnl0ZSBpbnRlZ2VyIHRoYXQgZGVzY3JpYmVzIHRoZSBpbnRlcnByZXRhdGlvbiBvZiB0aGUgaW1hZ2UgZGF0YS5cbiAqIENvbG9yIHR5cGUgY29kZXMgcmVwcmVzZW50IHN1bXMgb2YgdGhlIGZvbGxvd2luZyB2YWx1ZXM6XG4gKlxuICogMSAocGFsZXR0ZSB1c2VkKSwgMiAoY29sb3IgdXNlZCksIGFuZCA0IChhbHBoYSBjaGFubmVsIHVzZWQpLlxuICovXG52YXIgUE5HQ29sb3JUeXBlO1xuKGZ1bmN0aW9uIChQTkdDb2xvclR5cGUpIHtcbiAgICBQTkdDb2xvclR5cGVbUE5HQ29sb3JUeXBlW1wiR1JBWVNDQUxFXCJdID0gMF0gPSBcIkdSQVlTQ0FMRVwiO1xuICAgIFBOR0NvbG9yVHlwZVtQTkdDb2xvclR5cGVbXCJDT0xPUlwiXSA9IDJdID0gXCJDT0xPUlwiO1xuICAgIFBOR0NvbG9yVHlwZVtQTkdDb2xvclR5cGVbXCJHUkFZU0NBTEVfQUxQSEFcIl0gPSA0XSA9IFwiR1JBWVNDQUxFX0FMUEhBXCI7XG4gICAgUE5HQ29sb3JUeXBlW1BOR0NvbG9yVHlwZVtcIkNPTE9SX0FMUEhBXCJdID0gNl0gPSBcIkNPTE9SX0FMUEhBXCI7XG59KShQTkdDb2xvclR5cGUgfHwgKGV4cG9ydHMuUE5HQ29sb3JUeXBlID0gUE5HQ29sb3JUeXBlID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@jimp+js-png@1.6.0/node_modules/@jimp/js-png/dist/commonjs/constants.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@jimp+js-png@1.6.0/node_modules/@jimp/js-png/dist/commonjs/index.js":
/*!****************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@jimp+js-png@1.6.0/node_modules/@jimp/js-png/dist/commonjs/index.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports[\"default\"] = png;\nconst pngjs_1 = __webpack_require__(/*! pngjs */ \"(ssr)/../../node_modules/.pnpm/pngjs@7.0.0/node_modules/pngjs/lib/png.js\");\nconst constants_js_1 = __webpack_require__(/*! ./constants.js */ \"(ssr)/../../node_modules/.pnpm/@jimp+js-png@1.6.0/node_modules/@jimp/js-png/dist/commonjs/constants.js\");\n__exportStar(__webpack_require__(/*! ./constants.js */ \"(ssr)/../../node_modules/.pnpm/@jimp+js-png@1.6.0/node_modules/@jimp/js-png/dist/commonjs/constants.js\"), exports);\nfunction png() {\n    return {\n        mime: \"image/png\",\n        hasAlpha: true,\n        encode: (bitmap, { deflateLevel = 9, deflateStrategy = 3, filterType = constants_js_1.PNGFilterType.AUTO, colorType, inputHasAlpha = true, ...options } = {}) => {\n            const png = new pngjs_1.PNG({\n                width: bitmap.width,\n                height: bitmap.height,\n            });\n            png.data = bitmap.data;\n            return pngjs_1.PNG.sync.write(png, {\n                ...options,\n                deflateLevel,\n                deflateStrategy,\n                filterType,\n                colorType: typeof colorType !== \"undefined\"\n                    ? colorType\n                    : inputHasAlpha\n                        ? constants_js_1.PNGColorType.COLOR_ALPHA\n                        : constants_js_1.PNGColorType.COLOR,\n                inputHasAlpha,\n            });\n        },\n        decode: (data, options) => {\n            const result = pngjs_1.PNG.sync.read(data, options);\n            return {\n                data: result.data,\n                width: result.width,\n                height: result.height,\n            };\n        },\n    };\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BqaW1wK2pzLXBuZ0AxLjYuMC9ub2RlX21vZHVsZXMvQGppbXAvanMtcG5nL2Rpc3QvY29tbW9uanMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWU7QUFDZixnQkFBZ0IsbUJBQU8sQ0FBQyx1RkFBTztBQUMvQix1QkFBdUIsbUJBQU8sQ0FBQyw4SEFBZ0I7QUFDL0MsYUFBYSxtQkFBTyxDQUFDLDhIQUFnQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixxSUFBcUksSUFBSTtBQUNwSztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9taWtld2VzdGhhZC9EZXNrdG9wL1JlcG9zL3Nwb3JhZGljLWxhYnMtdGlsZS1leHRydWRlci9ub2RlX21vZHVsZXMvLnBucG0vQGppbXAranMtcG5nQDEuNi4wL25vZGVfbW9kdWxlcy9AamltcC9qcy1wbmcvZGlzdC9jb21tb25qcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcG5nO1xuY29uc3QgcG5nanNfMSA9IHJlcXVpcmUoXCJwbmdqc1wiKTtcbmNvbnN0IGNvbnN0YW50c19qc18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzLmpzXCIpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnN0YW50cy5qc1wiKSwgZXhwb3J0cyk7XG5mdW5jdGlvbiBwbmcoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbWltZTogXCJpbWFnZS9wbmdcIixcbiAgICAgICAgaGFzQWxwaGE6IHRydWUsXG4gICAgICAgIGVuY29kZTogKGJpdG1hcCwgeyBkZWZsYXRlTGV2ZWwgPSA5LCBkZWZsYXRlU3RyYXRlZ3kgPSAzLCBmaWx0ZXJUeXBlID0gY29uc3RhbnRzX2pzXzEuUE5HRmlsdGVyVHlwZS5BVVRPLCBjb2xvclR5cGUsIGlucHV0SGFzQWxwaGEgPSB0cnVlLCAuLi5vcHRpb25zIH0gPSB7fSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcG5nID0gbmV3IHBuZ2pzXzEuUE5HKHtcbiAgICAgICAgICAgICAgICB3aWR0aDogYml0bWFwLndpZHRoLFxuICAgICAgICAgICAgICAgIGhlaWdodDogYml0bWFwLmhlaWdodCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcG5nLmRhdGEgPSBiaXRtYXAuZGF0YTtcbiAgICAgICAgICAgIHJldHVybiBwbmdqc18xLlBORy5zeW5jLndyaXRlKHBuZywge1xuICAgICAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICAgICAgZGVmbGF0ZUxldmVsLFxuICAgICAgICAgICAgICAgIGRlZmxhdGVTdHJhdGVneSxcbiAgICAgICAgICAgICAgICBmaWx0ZXJUeXBlLFxuICAgICAgICAgICAgICAgIGNvbG9yVHlwZTogdHlwZW9mIGNvbG9yVHlwZSAhPT0gXCJ1bmRlZmluZWRcIlxuICAgICAgICAgICAgICAgICAgICA/IGNvbG9yVHlwZVxuICAgICAgICAgICAgICAgICAgICA6IGlucHV0SGFzQWxwaGFcbiAgICAgICAgICAgICAgICAgICAgICAgID8gY29uc3RhbnRzX2pzXzEuUE5HQ29sb3JUeXBlLkNPTE9SX0FMUEhBXG4gICAgICAgICAgICAgICAgICAgICAgICA6IGNvbnN0YW50c19qc18xLlBOR0NvbG9yVHlwZS5DT0xPUixcbiAgICAgICAgICAgICAgICBpbnB1dEhhc0FscGhhLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGRlY29kZTogKGRhdGEsIG9wdGlvbnMpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHBuZ2pzXzEuUE5HLnN5bmMucmVhZChkYXRhLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgZGF0YTogcmVzdWx0LmRhdGEsXG4gICAgICAgICAgICAgICAgd2lkdGg6IHJlc3VsdC53aWR0aCxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IHJlc3VsdC5oZWlnaHQsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@jimp+js-png@1.6.0/node_modules/@jimp/js-png/dist/commonjs/index.js\n");

/***/ })

};
;