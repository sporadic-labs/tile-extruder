"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@jimp+diff@1.6.0";
exports.ids = ["vendor-chunks/@jimp+diff@1.6.0"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/@jimp+diff@1.6.0/node_modules/@jimp/diff/dist/commonjs/index.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@jimp+diff@1.6.0/node_modules/@jimp/diff/dist/commonjs/index.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.diff = diff;\nconst plugin_resize_1 = __webpack_require__(/*! @jimp/plugin-resize */ \"(ssr)/../../node_modules/.pnpm/@jimp+plugin-resize@1.6.0/node_modules/@jimp/plugin-resize/dist/commonjs/index.js\");\nconst utils_1 = __webpack_require__(/*! @jimp/utils */ \"(ssr)/../../node_modules/.pnpm/@jimp+utils@1.6.0/node_modules/@jimp/utils/dist/commonjs/index.js\");\nconst pixelmatch_1 = __importDefault(__webpack_require__(/*! pixelmatch */ \"(ssr)/../../node_modules/.pnpm/pixelmatch@5.3.0/node_modules/pixelmatch/index.js\"));\n/**\n * Diffs two images and returns\n * @param img1 A Jimp image to compare\n * @param img2 A Jimp image to compare\n * @param threshold A number, 0 to 1, the smaller the value the more sensitive the comparison (default: 0.1)\n * @returns An object with the following properties:\n * - percent: The proportion of different pixels (0-1), where 0 means the two images are pixel identical\n * - image: A Jimp image showing differences\n * @example\n * ```ts\n * import { Jimp, diff } from \"jimp\";\n *\n * const image1 = await Jimp.read(\"test/image.png\");\n * const image2 = await Jimp.read(\"test/image.png\");\n *\n * const diff = diff(image1, image2);\n *\n * diff.percent; // 0.5\n * diff.image; // a Jimp image showing differences\n * ```\n */\nfunction diff(img1, img2, threshold = 0.1) {\n    let bmp1 = img1.bitmap;\n    let bmp2 = img2.bitmap;\n    if (bmp1.width !== bmp2.width || bmp1.height !== bmp2.height) {\n        if (bmp1.width * bmp1.height > bmp2.width * bmp2.height) {\n            // img1 is bigger\n            bmp1 = plugin_resize_1.methods.resize((0, utils_1.clone)(img1), {\n                w: bmp2.width,\n                h: bmp2.height,\n            }).bitmap;\n        }\n        else {\n            // img2 is bigger (or they are the same in area)\n            bmp2 = plugin_resize_1.methods.resize((0, utils_1.clone)(img2), {\n                w: bmp1.width,\n                h: bmp1.height,\n            }).bitmap;\n        }\n    }\n    if (typeof threshold !== \"number\" || threshold < 0 || threshold > 1) {\n        throw new Error(\"threshold must be a number between 0 and 1\");\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const diff = new img1.constructor({\n        width: bmp1.width,\n        height: bmp1.height,\n        color: 0xffffffff,\n    });\n    const numDiffPixels = (0, pixelmatch_1.default)(bmp1.data, bmp2.data, diff.bitmap.data, diff.bitmap.width, diff.bitmap.height, { threshold });\n    return {\n        percent: numDiffPixels / (diff.bitmap.width * diff.bitmap.height),\n        image: diff,\n    };\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BqaW1wK2RpZmZAMS42LjAvbm9kZV9tb2R1bGVzL0BqaW1wL2RpZmYvZGlzdC9jb21tb25qcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVk7QUFDWix3QkFBd0IsbUJBQU8sQ0FBQyw2SUFBcUI7QUFDckQsZ0JBQWdCLG1CQUFPLENBQUMscUhBQWE7QUFDckMscUNBQXFDLG1CQUFPLENBQUMsb0dBQVk7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGFBQWE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxxSUFBcUksV0FBVztBQUNoSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9taWtld2VzdGhhZC9EZXNrdG9wL1JlcG9zL3Nwb3JhZGljLWxhYnMtdGlsZS1leHRydWRlci9ub2RlX21vZHVsZXMvLnBucG0vQGppbXArZGlmZkAxLjYuMC9ub2RlX21vZHVsZXMvQGppbXAvZGlmZi9kaXN0L2NvbW1vbmpzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kaWZmID0gZGlmZjtcbmNvbnN0IHBsdWdpbl9yZXNpemVfMSA9IHJlcXVpcmUoXCJAamltcC9wbHVnaW4tcmVzaXplXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAamltcC91dGlsc1wiKTtcbmNvbnN0IHBpeGVsbWF0Y2hfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwicGl4ZWxtYXRjaFwiKSk7XG4vKipcbiAqIERpZmZzIHR3byBpbWFnZXMgYW5kIHJldHVybnNcbiAqIEBwYXJhbSBpbWcxIEEgSmltcCBpbWFnZSB0byBjb21wYXJlXG4gKiBAcGFyYW0gaW1nMiBBIEppbXAgaW1hZ2UgdG8gY29tcGFyZVxuICogQHBhcmFtIHRocmVzaG9sZCBBIG51bWJlciwgMCB0byAxLCB0aGUgc21hbGxlciB0aGUgdmFsdWUgdGhlIG1vcmUgc2Vuc2l0aXZlIHRoZSBjb21wYXJpc29uIChkZWZhdWx0OiAwLjEpXG4gKiBAcmV0dXJucyBBbiBvYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6XG4gKiAtIHBlcmNlbnQ6IFRoZSBwcm9wb3J0aW9uIG9mIGRpZmZlcmVudCBwaXhlbHMgKDAtMSksIHdoZXJlIDAgbWVhbnMgdGhlIHR3byBpbWFnZXMgYXJlIHBpeGVsIGlkZW50aWNhbFxuICogLSBpbWFnZTogQSBKaW1wIGltYWdlIHNob3dpbmcgZGlmZmVyZW5jZXNcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgSmltcCwgZGlmZiB9IGZyb20gXCJqaW1wXCI7XG4gKlxuICogY29uc3QgaW1hZ2UxID0gYXdhaXQgSmltcC5yZWFkKFwidGVzdC9pbWFnZS5wbmdcIik7XG4gKiBjb25zdCBpbWFnZTIgPSBhd2FpdCBKaW1wLnJlYWQoXCJ0ZXN0L2ltYWdlLnBuZ1wiKTtcbiAqXG4gKiBjb25zdCBkaWZmID0gZGlmZihpbWFnZTEsIGltYWdlMik7XG4gKlxuICogZGlmZi5wZXJjZW50OyAvLyAwLjVcbiAqIGRpZmYuaW1hZ2U7IC8vIGEgSmltcCBpbWFnZSBzaG93aW5nIGRpZmZlcmVuY2VzXG4gKiBgYGBcbiAqL1xuZnVuY3Rpb24gZGlmZihpbWcxLCBpbWcyLCB0aHJlc2hvbGQgPSAwLjEpIHtcbiAgICBsZXQgYm1wMSA9IGltZzEuYml0bWFwO1xuICAgIGxldCBibXAyID0gaW1nMi5iaXRtYXA7XG4gICAgaWYgKGJtcDEud2lkdGggIT09IGJtcDIud2lkdGggfHwgYm1wMS5oZWlnaHQgIT09IGJtcDIuaGVpZ2h0KSB7XG4gICAgICAgIGlmIChibXAxLndpZHRoICogYm1wMS5oZWlnaHQgPiBibXAyLndpZHRoICogYm1wMi5oZWlnaHQpIHtcbiAgICAgICAgICAgIC8vIGltZzEgaXMgYmlnZ2VyXG4gICAgICAgICAgICBibXAxID0gcGx1Z2luX3Jlc2l6ZV8xLm1ldGhvZHMucmVzaXplKCgwLCB1dGlsc18xLmNsb25lKShpbWcxKSwge1xuICAgICAgICAgICAgICAgIHc6IGJtcDIud2lkdGgsXG4gICAgICAgICAgICAgICAgaDogYm1wMi5oZWlnaHQsXG4gICAgICAgICAgICB9KS5iaXRtYXA7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBpbWcyIGlzIGJpZ2dlciAob3IgdGhleSBhcmUgdGhlIHNhbWUgaW4gYXJlYSlcbiAgICAgICAgICAgIGJtcDIgPSBwbHVnaW5fcmVzaXplXzEubWV0aG9kcy5yZXNpemUoKDAsIHV0aWxzXzEuY2xvbmUpKGltZzIpLCB7XG4gICAgICAgICAgICAgICAgdzogYm1wMS53aWR0aCxcbiAgICAgICAgICAgICAgICBoOiBibXAxLmhlaWdodCxcbiAgICAgICAgICAgIH0pLmJpdG1hcDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAodHlwZW9mIHRocmVzaG9sZCAhPT0gXCJudW1iZXJcIiB8fCB0aHJlc2hvbGQgPCAwIHx8IHRocmVzaG9sZCA+IDEpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidGhyZXNob2xkIG11c3QgYmUgYSBudW1iZXIgYmV0d2VlbiAwIGFuZCAxXCIpO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIGNvbnN0IGRpZmYgPSBuZXcgaW1nMS5jb25zdHJ1Y3Rvcih7XG4gICAgICAgIHdpZHRoOiBibXAxLndpZHRoLFxuICAgICAgICBoZWlnaHQ6IGJtcDEuaGVpZ2h0LFxuICAgICAgICBjb2xvcjogMHhmZmZmZmZmZixcbiAgICB9KTtcbiAgICBjb25zdCBudW1EaWZmUGl4ZWxzID0gKDAsIHBpeGVsbWF0Y2hfMS5kZWZhdWx0KShibXAxLmRhdGEsIGJtcDIuZGF0YSwgZGlmZi5iaXRtYXAuZGF0YSwgZGlmZi5iaXRtYXAud2lkdGgsIGRpZmYuYml0bWFwLmhlaWdodCwgeyB0aHJlc2hvbGQgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGVyY2VudDogbnVtRGlmZlBpeGVscyAvIChkaWZmLmJpdG1hcC53aWR0aCAqIGRpZmYuYml0bWFwLmhlaWdodCksXG4gICAgICAgIGltYWdlOiBkaWZmLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@jimp+diff@1.6.0/node_modules/@jimp/diff/dist/commonjs/index.js\n");

/***/ })

};
;