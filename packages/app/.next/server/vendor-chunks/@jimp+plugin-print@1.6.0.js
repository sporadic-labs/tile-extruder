"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@jimp+plugin-print@1.6.0";
exports.ids = ["vendor-chunks/@jimp+plugin-print@1.6.0"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/index.js":
/*!****************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/index.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.methods = exports.measureTextHeight = exports.measureText = void 0;\nconst core_1 = __webpack_require__(/*! @jimp/core */ \"(ssr)/../../node_modules/.pnpm/@jimp+core@1.6.0/node_modules/@jimp/core/dist/commonjs/index.js\");\nconst plugin_blit_1 = __webpack_require__(/*! @jimp/plugin-blit */ \"(ssr)/../../node_modules/.pnpm/@jimp+plugin-blit@1.6.0/node_modules/@jimp/plugin-blit/dist/commonjs/index.js\");\nconst zod_1 = __webpack_require__(/*! zod */ \"(ssr)/../../node_modules/.pnpm/zod@3.24.1/node_modules/zod/lib/index.js\");\nconst measure_text_js_1 = __webpack_require__(/*! ./measure-text.js */ \"(ssr)/../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/measure-text.js\");\nvar measure_text_js_2 = __webpack_require__(/*! ./measure-text.js */ \"(ssr)/../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/measure-text.js\");\nObject.defineProperty(exports, \"measureText\", ({ enumerable: true, get: function () { return measure_text_js_2.measureText; } }));\nObject.defineProperty(exports, \"measureTextHeight\", ({ enumerable: true, get: function () { return measure_text_js_2.measureTextHeight; } }));\n__exportStar(__webpack_require__(/*! ./types.js */ \"(ssr)/../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/types.js\"), exports);\nconst PrintOptionsSchema = zod_1.z.object({\n    /** the x position to draw the image */\n    x: zod_1.z.number(),\n    /** the y position to draw the image */\n    y: zod_1.z.number(),\n    /** the text to print */\n    text: zod_1.z.union([\n        zod_1.z.union([zod_1.z.string(), zod_1.z.number()]),\n        zod_1.z.object({\n            text: zod_1.z.union([zod_1.z.string(), zod_1.z.number()]),\n            alignmentX: zod_1.z.nativeEnum(core_1.HorizontalAlign).optional(),\n            alignmentY: zod_1.z.nativeEnum(core_1.VerticalAlign).optional(),\n        }),\n    ]),\n    /** the boundary width to draw in */\n    maxWidth: zod_1.z.number().optional(),\n    /** the boundary height to draw in */\n    maxHeight: zod_1.z.number().optional(),\n    /** a callback for when complete that ahs the end co-ordinates of the text */\n    cb: zod_1.z\n        .function(zod_1.z.tuple([zod_1.z.object({ x: zod_1.z.number(), y: zod_1.z.number() })]))\n        .optional(),\n});\nfunction xOffsetBasedOnAlignment(font, line, maxWidth, alignment) {\n    if (alignment === core_1.HorizontalAlign.LEFT) {\n        return 0;\n    }\n    if (alignment === core_1.HorizontalAlign.CENTER) {\n        return (maxWidth - (0, measure_text_js_1.measureText)(font, line)) / 2;\n    }\n    return maxWidth - (0, measure_text_js_1.measureText)(font, line);\n}\nfunction drawCharacter(image, font, x, y, char) {\n    if (char.width > 0 && char.height > 0) {\n        const characterPage = font.pages[char.page];\n        if (characterPage) {\n            image = plugin_blit_1.methods.blit(image, {\n                src: characterPage,\n                x: x + char.xoffset,\n                y: y + char.yoffset,\n                srcX: char.x,\n                srcY: char.y,\n                srcW: char.width,\n                srcH: char.height,\n            });\n        }\n    }\n    return image;\n}\nfunction printText(image, font, x, y, text, defaultCharWidth) {\n    for (let i = 0; i < text.length; i++) {\n        const stringChar = text[i];\n        let char;\n        if (font.chars[stringChar]) {\n            char = stringChar;\n        }\n        else if (/\\s/.test(stringChar)) {\n            char = \"\";\n        }\n        else {\n            char = \"?\";\n        }\n        const fontChar = font.chars[char] || { xadvance: undefined };\n        const fontKerning = font.kernings[char];\n        if (fontChar) {\n            drawCharacter(image, font, x, y, fontChar);\n        }\n        const nextChar = text[i + 1];\n        const kerning = fontKerning && nextChar && fontKerning[nextChar]\n            ? fontKerning[nextChar] || 0\n            : 0;\n        x += kerning + (fontChar.xadvance || defaultCharWidth);\n    }\n}\nexports.methods = {\n    /**\n     * Draws a text on a image on a given boundary\n     * @param font a bitmap font loaded from `Jimp.loadFont` command\n     * @param x the x position to start drawing the text\n     * @param y the y position to start drawing the text\n     * @param text the text to draw (string or object with `text`, `alignmentX`, and/or `alignmentY`)\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     *\n     * const image = await Jimp.read(\"test/image.png\");\n     * const font = await Jimp.loadFont(Jimp.FONT_SANS_32_BLACK);\n     *\n     * image.print({ font, x: 10, y: 10, text: \"Hello world!\" });\n     * ```\n     */\n    print(image, { font, ...options }) {\n        let { \n        // eslint-disable-next-line prefer-const\n        x, y, text, \n        // eslint-disable-next-line prefer-const\n        maxWidth = Infinity, \n        // eslint-disable-next-line prefer-const\n        maxHeight = Infinity, \n        // eslint-disable-next-line prefer-const\n        cb = () => { }, } = PrintOptionsSchema.parse(options);\n        let alignmentX;\n        let alignmentY;\n        if (typeof text === \"object\" &&\n            text.text !== null &&\n            text.text !== undefined) {\n            alignmentX = text.alignmentX || core_1.HorizontalAlign.LEFT;\n            alignmentY = text.alignmentY || core_1.VerticalAlign.TOP;\n            ({ text } = text);\n        }\n        else {\n            alignmentX = core_1.HorizontalAlign.LEFT;\n            alignmentY = core_1.VerticalAlign.TOP;\n            text = text.toString();\n        }\n        if (typeof text === \"number\") {\n            text = text.toString();\n        }\n        if (maxHeight !== Infinity && alignmentY === core_1.VerticalAlign.BOTTOM) {\n            y += maxHeight - (0, measure_text_js_1.measureTextHeight)(font, text, maxWidth);\n        }\n        else if (maxHeight !== Infinity && alignmentY === core_1.VerticalAlign.MIDDLE) {\n            y += maxHeight / 2 - (0, measure_text_js_1.measureTextHeight)(font, text, maxWidth) / 2;\n        }\n        const defaultCharWidth = Object.entries(font.chars).find((c) => c[1].xadvance)?.[1].xadvance;\n        if (typeof defaultCharWidth !== \"number\") {\n            throw new Error(\"Could not find default character width\");\n        }\n        const { lines, longestLine } = (0, measure_text_js_1.splitLines)(font, text, maxWidth);\n        lines.forEach((line) => {\n            const lineString = line.join(\" \");\n            const alignmentWidth = xOffsetBasedOnAlignment(font, lineString, maxWidth, alignmentX);\n            printText(image, font, x + alignmentWidth, y, lineString, defaultCharWidth);\n            y += font.common.lineHeight;\n        });\n        cb.bind(image)({ x: x + longestLine, y });\n        return image;\n    },\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/load-bitmap-font.js":
/*!***************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/load-bitmap-font.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isWebWorker = void 0;\nexports.loadBitmapFontData = loadBitmapFontData;\nexports.processBitmapFont = processBitmapFont;\nconst parse_bmfont_ascii_1 = __importDefault(__webpack_require__(/*! parse-bmfont-ascii */ \"(ssr)/../../node_modules/.pnpm/parse-bmfont-ascii@1.0.6/node_modules/parse-bmfont-ascii/index.js\"));\nconst parse_bmfont_xml_1 = __importDefault(__webpack_require__(/*! parse-bmfont-xml */ \"(ssr)/../../node_modules/.pnpm/parse-bmfont-xml@1.1.6/node_modules/parse-bmfont-xml/lib/index.js\"));\nconst parse_bmfont_binary_1 = __importDefault(__webpack_require__(/*! parse-bmfont-binary */ \"(ssr)/../../node_modules/.pnpm/parse-bmfont-binary@1.0.6/node_modules/parse-bmfont-binary/index.js\"));\nconst js_png_1 = __importDefault(__webpack_require__(/*! @jimp/js-png */ \"(ssr)/../../node_modules/.pnpm/@jimp+js-png@1.6.0/node_modules/@jimp/js-png/dist/commonjs/index.js\"));\nconst core_1 = __webpack_require__(/*! @jimp/core */ \"(ssr)/../../node_modules/.pnpm/@jimp+core@1.6.0/node_modules/@jimp/core/dist/commonjs/index.js\");\nconst path_1 = __importDefault(__webpack_require__(/*! path */ \"path\"));\nconst simple_xml_to_json_1 = __importDefault(__webpack_require__(/*! simple-xml-to-json */ \"(ssr)/../../node_modules/.pnpm/simple-xml-to-json@1.2.3/node_modules/simple-xml-to-json/lib/simpleXmlToJson.min.js\"));\nconst { convertXML } = simple_xml_to_json_1.default;\nexports.isWebWorker = typeof self !== \"undefined\" && self.document === undefined;\nconst CharacterJimp = (0, core_1.createJimp)({ formats: [js_png_1.default] });\nconst HEADER = Buffer.from([66, 77, 70, 3]);\nfunction isBinary(buf) {\n    if (typeof buf === \"string\") {\n        return buf.substring(0, 3) === \"BMF\";\n    }\n    const startOfHeader = buf.slice(0, 4);\n    return (buf.length > 4 &&\n        startOfHeader[0] === HEADER[0] &&\n        startOfHeader[1] === HEADER[1] &&\n        startOfHeader[2] === HEADER[2]);\n}\nfunction parseFont(file, data) {\n    if (isBinary(data)) {\n        if (typeof data === \"string\") {\n            data = Buffer.from(data, \"binary\");\n        }\n        return (0, parse_bmfont_binary_1.default)(data);\n    }\n    data = data.toString().trim();\n    if (/.json$/.test(file) || data.charAt(0) === \"{\") {\n        return JSON.parse(data);\n    }\n    if (/.xml$/.test(file) || data.charAt(0) === \"<\") {\n        return (0, parse_bmfont_xml_1.default)(data);\n    }\n    return (0, parse_bmfont_ascii_1.default)(data);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction parseNumbersInObject(obj) {\n    for (const key in obj) {\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            obj[key] = parseInt(obj[key], 10);\n        }\n        catch {\n            // do nothing\n        }\n        if (typeof obj[key] === \"object\") {\n            parseNumbersInObject(obj[key]);\n        }\n    }\n    return obj;\n}\n/**\n *\n * @param bufferOrUrl A URL to a file or a buffer\n * @returns\n */\nasync function loadBitmapFontData(bufferOrUrl) {\n    if (exports.isWebWorker && typeof bufferOrUrl === \"string\") {\n        const res = await fetch(bufferOrUrl);\n        const text = await res.text();\n        const json = convertXML(text);\n        const font = json.font.children.reduce(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (acc, i) => ({ ...acc, ...i }), {});\n        const pages = [];\n        const chars = [];\n        const kernings = [];\n        for (let i = 0; i < font.pages.children.length; i++) {\n            const p = font.pages.children[i].page;\n            const id = parseInt(p.id, 10);\n            pages[id] = parseNumbersInObject(p.file);\n        }\n        for (let i = 0; i < font.chars.children.length; i++) {\n            chars.push(parseNumbersInObject(font.chars.children[i].char));\n        }\n        for (let i = 0; i < font.kernings.children.length; i++) {\n            kernings.push(parseNumbersInObject(font.kernings.children[i].kerning));\n        }\n        return {\n            info: font.info,\n            common: font.common,\n            pages,\n            chars,\n            kernings,\n        };\n    }\n    else if (typeof bufferOrUrl === \"string\") {\n        const res = await fetch(bufferOrUrl);\n        const text = await res.text();\n        return parseFont(bufferOrUrl, text);\n    }\n    else {\n        return parseFont(\"\", bufferOrUrl);\n    }\n}\nasync function processBitmapFont(file, font) {\n    const chars = {};\n    const kernings = {};\n    for (let i = 0; i < font.chars.length; i++) {\n        const char = font.chars[i];\n        chars[String.fromCharCode(char.id)] = char;\n    }\n    for (let i = 0; i < font.kernings.length; i++) {\n        const firstString = String.fromCharCode(font.kernings[i].first);\n        kernings[firstString] = kernings[firstString] || {};\n        kernings[firstString][String.fromCharCode(font.kernings[i].second)] =\n            font.kernings[i].amount;\n    }\n    return {\n        ...font,\n        chars,\n        kernings,\n        pages: await Promise.all(font.pages.map(async (page) => CharacterJimp.read(path_1.default.join(path_1.default.dirname(file), page)))),\n    };\n}\n//# sourceMappingURL=load-bitmap-font.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BqaW1wK3BsdWdpbi1wcmludEAxLjYuMC9ub2RlX21vZHVsZXMvQGppbXAvcGx1Z2luLXByaW50L2Rpc3QvY29tbW9uanMvbG9hZC1iaXRtYXAtZm9udC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQiwwQkFBMEI7QUFDMUIseUJBQXlCO0FBQ3pCLDZDQUE2QyxtQkFBTyxDQUFDLDRIQUFvQjtBQUN6RSwyQ0FBMkMsbUJBQU8sQ0FBQywwSEFBa0I7QUFDckUsOENBQThDLG1CQUFPLENBQUMsK0hBQXFCO0FBQzNFLGlDQUFpQyxtQkFBTyxDQUFDLHdIQUFjO0FBQ3ZELGVBQWUsbUJBQU8sQ0FBQyxrSEFBWTtBQUNuQywrQkFBK0IsbUJBQU8sQ0FBQyxrQkFBTTtBQUM3Qyw2Q0FBNkMsbUJBQU8sQ0FBQyw4SUFBb0I7QUFDekUsUUFBUSxhQUFhO0FBQ3JCLG1CQUFtQjtBQUNuQiwrQ0FBK0MsNkJBQTZCO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9EO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsY0FBYyxLQUFLO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnQ0FBZ0M7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0NBQWdDO0FBQ3hEO0FBQ0E7QUFDQSx3QkFBd0IsbUNBQW1DO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVCQUF1QjtBQUMzQztBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsMEJBQTBCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvbWlrZXdlc3RoYWQvRGVza3RvcC9SZXBvcy9zcG9yYWRpYy1sYWJzLXRpbGUtZXh0cnVkZXIvbm9kZV9tb2R1bGVzLy5wbnBtL0BqaW1wK3BsdWdpbi1wcmludEAxLjYuMC9ub2RlX21vZHVsZXMvQGppbXAvcGx1Z2luLXByaW50L2Rpc3QvY29tbW9uanMvbG9hZC1iaXRtYXAtZm9udC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNXZWJXb3JrZXIgPSB2b2lkIDA7XG5leHBvcnRzLmxvYWRCaXRtYXBGb250RGF0YSA9IGxvYWRCaXRtYXBGb250RGF0YTtcbmV4cG9ydHMucHJvY2Vzc0JpdG1hcEZvbnQgPSBwcm9jZXNzQml0bWFwRm9udDtcbmNvbnN0IHBhcnNlX2JtZm9udF9hc2NpaV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJwYXJzZS1ibWZvbnQtYXNjaWlcIikpO1xuY29uc3QgcGFyc2VfYm1mb250X3htbF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJwYXJzZS1ibWZvbnQteG1sXCIpKTtcbmNvbnN0IHBhcnNlX2JtZm9udF9iaW5hcnlfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwicGFyc2UtYm1mb250LWJpbmFyeVwiKSk7XG5jb25zdCBqc19wbmdfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiQGppbXAvanMtcG5nXCIpKTtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAamltcC9jb3JlXCIpO1xuY29uc3QgcGF0aF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJwYXRoXCIpKTtcbmNvbnN0IHNpbXBsZV94bWxfdG9fanNvbl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJzaW1wbGUteG1sLXRvLWpzb25cIikpO1xuY29uc3QgeyBjb252ZXJ0WE1MIH0gPSBzaW1wbGVfeG1sX3RvX2pzb25fMS5kZWZhdWx0O1xuZXhwb3J0cy5pc1dlYldvcmtlciA9IHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuZG9jdW1lbnQgPT09IHVuZGVmaW5lZDtcbmNvbnN0IENoYXJhY3RlckppbXAgPSAoMCwgY29yZV8xLmNyZWF0ZUppbXApKHsgZm9ybWF0czogW2pzX3BuZ18xLmRlZmF1bHRdIH0pO1xuY29uc3QgSEVBREVSID0gQnVmZmVyLmZyb20oWzY2LCA3NywgNzAsIDNdKTtcbmZ1bmN0aW9uIGlzQmluYXJ5KGJ1Zikge1xuICAgIGlmICh0eXBlb2YgYnVmID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHJldHVybiBidWYuc3Vic3RyaW5nKDAsIDMpID09PSBcIkJNRlwiO1xuICAgIH1cbiAgICBjb25zdCBzdGFydE9mSGVhZGVyID0gYnVmLnNsaWNlKDAsIDQpO1xuICAgIHJldHVybiAoYnVmLmxlbmd0aCA+IDQgJiZcbiAgICAgICAgc3RhcnRPZkhlYWRlclswXSA9PT0gSEVBREVSWzBdICYmXG4gICAgICAgIHN0YXJ0T2ZIZWFkZXJbMV0gPT09IEhFQURFUlsxXSAmJlxuICAgICAgICBzdGFydE9mSGVhZGVyWzJdID09PSBIRUFERVJbMl0pO1xufVxuZnVuY3Rpb24gcGFyc2VGb250KGZpbGUsIGRhdGEpIHtcbiAgICBpZiAoaXNCaW5hcnkoZGF0YSkpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICBkYXRhID0gQnVmZmVyLmZyb20oZGF0YSwgXCJiaW5hcnlcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICgwLCBwYXJzZV9ibWZvbnRfYmluYXJ5XzEuZGVmYXVsdCkoZGF0YSk7XG4gICAgfVxuICAgIGRhdGEgPSBkYXRhLnRvU3RyaW5nKCkudHJpbSgpO1xuICAgIGlmICgvLmpzb24kLy50ZXN0KGZpbGUpIHx8IGRhdGEuY2hhckF0KDApID09PSBcIntcIikge1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShkYXRhKTtcbiAgICB9XG4gICAgaWYgKC8ueG1sJC8udGVzdChmaWxlKSB8fCBkYXRhLmNoYXJBdCgwKSA9PT0gXCI8XCIpIHtcbiAgICAgICAgcmV0dXJuICgwLCBwYXJzZV9ibWZvbnRfeG1sXzEuZGVmYXVsdCkoZGF0YSk7XG4gICAgfVxuICAgIHJldHVybiAoMCwgcGFyc2VfYm1mb250X2FzY2lpXzEuZGVmYXVsdCkoZGF0YSk7XG59XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuZnVuY3Rpb24gcGFyc2VOdW1iZXJzSW5PYmplY3Qob2JqKSB7XG4gICAgZm9yIChjb25zdCBrZXkgaW4gb2JqKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgICAgICAgb2JqW2tleV0gPSBwYXJzZUludChvYmpba2V5XSwgMTApO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgIC8vIGRvIG5vdGhpbmdcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIG9ialtrZXldID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICBwYXJzZU51bWJlcnNJbk9iamVjdChvYmpba2V5XSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG9iajtcbn1cbi8qKlxuICpcbiAqIEBwYXJhbSBidWZmZXJPclVybCBBIFVSTCB0byBhIGZpbGUgb3IgYSBidWZmZXJcbiAqIEByZXR1cm5zXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGxvYWRCaXRtYXBGb250RGF0YShidWZmZXJPclVybCkge1xuICAgIGlmIChleHBvcnRzLmlzV2ViV29ya2VyICYmIHR5cGVvZiBidWZmZXJPclVybCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChidWZmZXJPclVybCk7XG4gICAgICAgIGNvbnN0IHRleHQgPSBhd2FpdCByZXMudGV4dCgpO1xuICAgICAgICBjb25zdCBqc29uID0gY29udmVydFhNTCh0ZXh0KTtcbiAgICAgICAgY29uc3QgZm9udCA9IGpzb24uZm9udC5jaGlsZHJlbi5yZWR1Y2UoXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgICAgIChhY2MsIGkpID0+ICh7IC4uLmFjYywgLi4uaSB9KSwge30pO1xuICAgICAgICBjb25zdCBwYWdlcyA9IFtdO1xuICAgICAgICBjb25zdCBjaGFycyA9IFtdO1xuICAgICAgICBjb25zdCBrZXJuaW5ncyA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZvbnQucGFnZXMuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHAgPSBmb250LnBhZ2VzLmNoaWxkcmVuW2ldLnBhZ2U7XG4gICAgICAgICAgICBjb25zdCBpZCA9IHBhcnNlSW50KHAuaWQsIDEwKTtcbiAgICAgICAgICAgIHBhZ2VzW2lkXSA9IHBhcnNlTnVtYmVyc0luT2JqZWN0KHAuZmlsZSk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBmb250LmNoYXJzLmNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjaGFycy5wdXNoKHBhcnNlTnVtYmVyc0luT2JqZWN0KGZvbnQuY2hhcnMuY2hpbGRyZW5baV0uY2hhcikpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZm9udC5rZXJuaW5ncy5jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAga2VybmluZ3MucHVzaChwYXJzZU51bWJlcnNJbk9iamVjdChmb250Lmtlcm5pbmdzLmNoaWxkcmVuW2ldLmtlcm5pbmcpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaW5mbzogZm9udC5pbmZvLFxuICAgICAgICAgICAgY29tbW9uOiBmb250LmNvbW1vbixcbiAgICAgICAgICAgIHBhZ2VzLFxuICAgICAgICAgICAgY2hhcnMsXG4gICAgICAgICAgICBrZXJuaW5ncyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGJ1ZmZlck9yVXJsID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGJ1ZmZlck9yVXJsKTtcbiAgICAgICAgY29uc3QgdGV4dCA9IGF3YWl0IHJlcy50ZXh0KCk7XG4gICAgICAgIHJldHVybiBwYXJzZUZvbnQoYnVmZmVyT3JVcmwsIHRleHQpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlRm9udChcIlwiLCBidWZmZXJPclVybCk7XG4gICAgfVxufVxuYXN5bmMgZnVuY3Rpb24gcHJvY2Vzc0JpdG1hcEZvbnQoZmlsZSwgZm9udCkge1xuICAgIGNvbnN0IGNoYXJzID0ge307XG4gICAgY29uc3Qga2VybmluZ3MgPSB7fTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZvbnQuY2hhcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgY2hhciA9IGZvbnQuY2hhcnNbaV07XG4gICAgICAgIGNoYXJzW1N0cmluZy5mcm9tQ2hhckNvZGUoY2hhci5pZCldID0gY2hhcjtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBmb250Lmtlcm5pbmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGZpcnN0U3RyaW5nID0gU3RyaW5nLmZyb21DaGFyQ29kZShmb250Lmtlcm5pbmdzW2ldLmZpcnN0KTtcbiAgICAgICAga2VybmluZ3NbZmlyc3RTdHJpbmddID0ga2VybmluZ3NbZmlyc3RTdHJpbmddIHx8IHt9O1xuICAgICAgICBrZXJuaW5nc1tmaXJzdFN0cmluZ11bU3RyaW5nLmZyb21DaGFyQ29kZShmb250Lmtlcm5pbmdzW2ldLnNlY29uZCldID1cbiAgICAgICAgICAgIGZvbnQua2VybmluZ3NbaV0uYW1vdW50O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAuLi5mb250LFxuICAgICAgICBjaGFycyxcbiAgICAgICAga2VybmluZ3MsXG4gICAgICAgIHBhZ2VzOiBhd2FpdCBQcm9taXNlLmFsbChmb250LnBhZ2VzLm1hcChhc3luYyAocGFnZSkgPT4gQ2hhcmFjdGVySmltcC5yZWFkKHBhdGhfMS5kZWZhdWx0LmpvaW4ocGF0aF8xLmRlZmF1bHQuZGlybmFtZShmaWxlKSwgcGFnZSkpKSksXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvYWQtYml0bWFwLWZvbnQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/load-bitmap-font.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/load-font.js":
/*!********************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/load-font.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.loadFont = loadFont;\nconst load_bitmap_font_js_1 = __webpack_require__(/*! ./load-bitmap-font.js */ \"(ssr)/../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/load-bitmap-font.js\");\n/**\n * Loads a Bitmap Font from a file.\n * @param file A path or URL to a font file\n * @returns A collection of Jimp images that can be used to print text\n * @example\n * ```ts\n * import { Jimp, loadFont } from \"jimp\";\n * import { SANS_10_BLACK } from \"jimp/fonts\";\n *\n * const font = await loadFont(SANS_10_BLACK);\n * const image = new Jimp({ width: 200, height: 100, color: 0xffffffff });\n *\n * image.print(font, 10, 10, \"Hello world!\");\n * ```\n */\nasync function loadFont(file) {\n    let fileOrBuffer = file;\n    if (typeof window === \"undefined\" && !load_bitmap_font_js_1.isWebWorker) {\n        const { existsSync, promises: fs } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! fs */ \"fs\", 23));\n        if (existsSync(file)) {\n            fileOrBuffer = await fs.readFile(file);\n        }\n    }\n    const data = await (0, load_bitmap_font_js_1.loadBitmapFontData)(fileOrBuffer);\n    return (0, load_bitmap_font_js_1.processBitmapFont)(file, data);\n}\n//# sourceMappingURL=load-font.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BqaW1wK3BsdWdpbi1wcmludEAxLjYuMC9ub2RlX21vZHVsZXMvQGppbXAvcGx1Z2luLXByaW50L2Rpc3QvY29tbW9uanMvbG9hZC1mb250LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQiw4QkFBOEIsbUJBQU8sQ0FBQyx3SkFBdUI7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxpQkFBaUI7QUFDN0IsWUFBWSxnQkFBZ0I7QUFDNUI7QUFDQTtBQUNBLDRCQUE0Qiw0Q0FBNEM7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMkJBQTJCLFFBQVEsMEdBQVk7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL21pa2V3ZXN0aGFkL0Rlc2t0b3AvUmVwb3Mvc3BvcmFkaWMtbGFicy10aWxlLWV4dHJ1ZGVyL25vZGVfbW9kdWxlcy8ucG5wbS9AamltcCtwbHVnaW4tcHJpbnRAMS42LjAvbm9kZV9tb2R1bGVzL0BqaW1wL3BsdWdpbi1wcmludC9kaXN0L2NvbW1vbmpzL2xvYWQtZm9udC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubG9hZEZvbnQgPSBsb2FkRm9udDtcbmNvbnN0IGxvYWRfYml0bWFwX2ZvbnRfanNfMSA9IHJlcXVpcmUoXCIuL2xvYWQtYml0bWFwLWZvbnQuanNcIik7XG4vKipcbiAqIExvYWRzIGEgQml0bWFwIEZvbnQgZnJvbSBhIGZpbGUuXG4gKiBAcGFyYW0gZmlsZSBBIHBhdGggb3IgVVJMIHRvIGEgZm9udCBmaWxlXG4gKiBAcmV0dXJucyBBIGNvbGxlY3Rpb24gb2YgSmltcCBpbWFnZXMgdGhhdCBjYW4gYmUgdXNlZCB0byBwcmludCB0ZXh0XG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IEppbXAsIGxvYWRGb250IH0gZnJvbSBcImppbXBcIjtcbiAqIGltcG9ydCB7IFNBTlNfMTBfQkxBQ0sgfSBmcm9tIFwiamltcC9mb250c1wiO1xuICpcbiAqIGNvbnN0IGZvbnQgPSBhd2FpdCBsb2FkRm9udChTQU5TXzEwX0JMQUNLKTtcbiAqIGNvbnN0IGltYWdlID0gbmV3IEppbXAoeyB3aWR0aDogMjAwLCBoZWlnaHQ6IDEwMCwgY29sb3I6IDB4ZmZmZmZmZmYgfSk7XG4gKlxuICogaW1hZ2UucHJpbnQoZm9udCwgMTAsIDEwLCBcIkhlbGxvIHdvcmxkIVwiKTtcbiAqIGBgYFxuICovXG5hc3luYyBmdW5jdGlvbiBsb2FkRm9udChmaWxlKSB7XG4gICAgbGV0IGZpbGVPckJ1ZmZlciA9IGZpbGU7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgJiYgIWxvYWRfYml0bWFwX2ZvbnRfanNfMS5pc1dlYldvcmtlcikge1xuICAgICAgICBjb25zdCB7IGV4aXN0c1N5bmMsIHByb21pc2VzOiBmcyB9ID0gYXdhaXQgaW1wb3J0KFwiZnNcIik7XG4gICAgICAgIGlmIChleGlzdHNTeW5jKGZpbGUpKSB7XG4gICAgICAgICAgICBmaWxlT3JCdWZmZXIgPSBhd2FpdCBmcy5yZWFkRmlsZShmaWxlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgKDAsIGxvYWRfYml0bWFwX2ZvbnRfanNfMS5sb2FkQml0bWFwRm9udERhdGEpKGZpbGVPckJ1ZmZlcik7XG4gICAgcmV0dXJuICgwLCBsb2FkX2JpdG1hcF9mb250X2pzXzEucHJvY2Vzc0JpdG1hcEZvbnQpKGZpbGUsIGRhdGEpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9hZC1mb250LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/load-font.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/measure-text.js":
/*!***********************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/measure-text.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.measureText = measureText;\nexports.splitLines = splitLines;\nexports.measureTextHeight = measureTextHeight;\nfunction measureText(font, text) {\n    let x = 0;\n    for (let i = 0; i < text.length; i++) {\n        const char = text[i];\n        const fontChar = font.chars[char];\n        if (fontChar) {\n            const fontKerning = font.kernings[char];\n            const nextChar = text[i + 1];\n            const kerning = fontKerning && nextChar && fontKerning[nextChar]\n                ? fontKerning[nextChar] || 0\n                : 0;\n            x += (fontChar.xadvance || 0) + kerning;\n        }\n    }\n    return x;\n}\nfunction splitLines(font, text, maxWidth) {\n    const words = text.replace(/[\\r\\n]+/g, \" \\n\").split(\" \");\n    const lines = [];\n    let currentLine = [];\n    let longestLine = 0;\n    words.forEach((word) => {\n        const wordWidth = measureText(font, word + (words.length > 1 ? \" \" : \"\"));\n        // If a word is longer than the allowable width we need to split it across lines.\n        if (wordWidth > maxWidth) {\n            const characterIterator = word[Symbol.iterator]();\n            let current = \"\";\n            for (const char of characterIterator) {\n                const nextLine = [...currentLine, current + char].join(\" \");\n                const length = measureText(font, nextLine);\n                if (length < maxWidth) {\n                    current += char;\n                }\n                else if (length > maxWidth) {\n                    lines.push([...currentLine, current]);\n                    currentLine = [];\n                    current = char;\n                }\n                else {\n                    lines.push([...currentLine, current + char]);\n                    currentLine = [];\n                    current = \"\";\n                }\n            }\n            return;\n        }\n        const line = [...currentLine, word].join(\" \");\n        const length = measureText(font, line);\n        if (length <= maxWidth && !word.includes(\"\\n\")) {\n            if (length > longestLine) {\n                longestLine = length;\n            }\n            currentLine.push(word);\n        }\n        else {\n            lines.push(currentLine);\n            currentLine = [word.replace(\"\\n\", \"\")];\n        }\n    });\n    lines.push(currentLine);\n    return {\n        lines,\n        longestLine,\n    };\n}\nfunction measureTextHeight(font, text, maxWidth) {\n    const { lines } = splitLines(font, text, maxWidth);\n    return lines.length * font.common.lineHeight;\n}\n//# sourceMappingURL=measure-text.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BqaW1wK3BsdWdpbi1wcmludEAxLjYuMC9ub2RlX21vZHVsZXMvQGppbXAvcGx1Z2luLXByaW50L2Rpc3QvY29tbW9uanMvbWVhc3VyZS10ZXh0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQixrQkFBa0I7QUFDbEIseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL21pa2V3ZXN0aGFkL0Rlc2t0b3AvUmVwb3Mvc3BvcmFkaWMtbGFicy10aWxlLWV4dHJ1ZGVyL25vZGVfbW9kdWxlcy8ucG5wbS9AamltcCtwbHVnaW4tcHJpbnRAMS42LjAvbm9kZV9tb2R1bGVzL0BqaW1wL3BsdWdpbi1wcmludC9kaXN0L2NvbW1vbmpzL21lYXN1cmUtdGV4dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWVhc3VyZVRleHQgPSBtZWFzdXJlVGV4dDtcbmV4cG9ydHMuc3BsaXRMaW5lcyA9IHNwbGl0TGluZXM7XG5leHBvcnRzLm1lYXN1cmVUZXh0SGVpZ2h0ID0gbWVhc3VyZVRleHRIZWlnaHQ7XG5mdW5jdGlvbiBtZWFzdXJlVGV4dChmb250LCB0ZXh0KSB7XG4gICAgbGV0IHggPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGV4dC5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBjaGFyID0gdGV4dFtpXTtcbiAgICAgICAgY29uc3QgZm9udENoYXIgPSBmb250LmNoYXJzW2NoYXJdO1xuICAgICAgICBpZiAoZm9udENoYXIpIHtcbiAgICAgICAgICAgIGNvbnN0IGZvbnRLZXJuaW5nID0gZm9udC5rZXJuaW5nc1tjaGFyXTtcbiAgICAgICAgICAgIGNvbnN0IG5leHRDaGFyID0gdGV4dFtpICsgMV07XG4gICAgICAgICAgICBjb25zdCBrZXJuaW5nID0gZm9udEtlcm5pbmcgJiYgbmV4dENoYXIgJiYgZm9udEtlcm5pbmdbbmV4dENoYXJdXG4gICAgICAgICAgICAgICAgPyBmb250S2VybmluZ1tuZXh0Q2hhcl0gfHwgMFxuICAgICAgICAgICAgICAgIDogMDtcbiAgICAgICAgICAgIHggKz0gKGZvbnRDaGFyLnhhZHZhbmNlIHx8IDApICsga2VybmluZztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geDtcbn1cbmZ1bmN0aW9uIHNwbGl0TGluZXMoZm9udCwgdGV4dCwgbWF4V2lkdGgpIHtcbiAgICBjb25zdCB3b3JkcyA9IHRleHQucmVwbGFjZSgvW1xcclxcbl0rL2csIFwiIFxcblwiKS5zcGxpdChcIiBcIik7XG4gICAgY29uc3QgbGluZXMgPSBbXTtcbiAgICBsZXQgY3VycmVudExpbmUgPSBbXTtcbiAgICBsZXQgbG9uZ2VzdExpbmUgPSAwO1xuICAgIHdvcmRzLmZvckVhY2goKHdvcmQpID0+IHtcbiAgICAgICAgY29uc3Qgd29yZFdpZHRoID0gbWVhc3VyZVRleHQoZm9udCwgd29yZCArICh3b3Jkcy5sZW5ndGggPiAxID8gXCIgXCIgOiBcIlwiKSk7XG4gICAgICAgIC8vIElmIGEgd29yZCBpcyBsb25nZXIgdGhhbiB0aGUgYWxsb3dhYmxlIHdpZHRoIHdlIG5lZWQgdG8gc3BsaXQgaXQgYWNyb3NzIGxpbmVzLlxuICAgICAgICBpZiAod29yZFdpZHRoID4gbWF4V2lkdGgpIHtcbiAgICAgICAgICAgIGNvbnN0IGNoYXJhY3Rlckl0ZXJhdG9yID0gd29yZFtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgICAgICAgICBsZXQgY3VycmVudCA9IFwiXCI7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNoYXIgb2YgY2hhcmFjdGVySXRlcmF0b3IpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXh0TGluZSA9IFsuLi5jdXJyZW50TGluZSwgY3VycmVudCArIGNoYXJdLmpvaW4oXCIgXCIpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGxlbmd0aCA9IG1lYXN1cmVUZXh0KGZvbnQsIG5leHRMaW5lKTtcbiAgICAgICAgICAgICAgICBpZiAobGVuZ3RoIDwgbWF4V2lkdGgpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudCArPSBjaGFyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChsZW5ndGggPiBtYXhXaWR0aCkge1xuICAgICAgICAgICAgICAgICAgICBsaW5lcy5wdXNoKFsuLi5jdXJyZW50TGluZSwgY3VycmVudF0pO1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50TGluZSA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gY2hhcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGxpbmVzLnB1c2goWy4uLmN1cnJlbnRMaW5lLCBjdXJyZW50ICsgY2hhcl0pO1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50TGluZSA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gXCJcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbGluZSA9IFsuLi5jdXJyZW50TGluZSwgd29yZF0uam9pbihcIiBcIik7XG4gICAgICAgIGNvbnN0IGxlbmd0aCA9IG1lYXN1cmVUZXh0KGZvbnQsIGxpbmUpO1xuICAgICAgICBpZiAobGVuZ3RoIDw9IG1heFdpZHRoICYmICF3b3JkLmluY2x1ZGVzKFwiXFxuXCIpKSB7XG4gICAgICAgICAgICBpZiAobGVuZ3RoID4gbG9uZ2VzdExpbmUpIHtcbiAgICAgICAgICAgICAgICBsb25nZXN0TGluZSA9IGxlbmd0aDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGN1cnJlbnRMaW5lLnB1c2god29yZCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBsaW5lcy5wdXNoKGN1cnJlbnRMaW5lKTtcbiAgICAgICAgICAgIGN1cnJlbnRMaW5lID0gW3dvcmQucmVwbGFjZShcIlxcblwiLCBcIlwiKV07XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBsaW5lcy5wdXNoKGN1cnJlbnRMaW5lKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBsaW5lcyxcbiAgICAgICAgbG9uZ2VzdExpbmUsXG4gICAgfTtcbn1cbmZ1bmN0aW9uIG1lYXN1cmVUZXh0SGVpZ2h0KGZvbnQsIHRleHQsIG1heFdpZHRoKSB7XG4gICAgY29uc3QgeyBsaW5lcyB9ID0gc3BsaXRMaW5lcyhmb250LCB0ZXh0LCBtYXhXaWR0aCk7XG4gICAgcmV0dXJuIGxpbmVzLmxlbmd0aCAqIGZvbnQuY29tbW9uLmxpbmVIZWlnaHQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZWFzdXJlLXRleHQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/measure-text.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/types.js":
/*!****************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/types.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BqaW1wK3BsdWdpbi1wcmludEAxLjYuMC9ub2RlX21vZHVsZXMvQGppbXAvcGx1Z2luLXByaW50L2Rpc3QvY29tbW9uanMvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIi9Vc2Vycy9taWtld2VzdGhhZC9EZXNrdG9wL1JlcG9zL3Nwb3JhZGljLWxhYnMtdGlsZS1leHRydWRlci9ub2RlX21vZHVsZXMvLnBucG0vQGppbXArcGx1Z2luLXByaW50QDEuNi4wL25vZGVfbW9kdWxlcy9AamltcC9wbHVnaW4tcHJpbnQvZGlzdC9jb21tb25qcy90eXBlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@jimp+plugin-print@1.6.0/node_modules/@jimp/plugin-print/dist/commonjs/types.js\n");

/***/ })

};
;