/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/utif2@4.1.0";
exports.ids = ["vendor-chunks/utif2@4.1.0"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/utif2@4.1.0/node_modules/utif2/UTIF.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/.pnpm/utif2@4.1.0/node_modules/utif2/UTIF.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\r\n\r\n\r\n\r\n;(function(){\r\n\tvar UTIF = {};\r\n\t\r\n\t// Make available for import by `require()`\r\n\tif (true) {module.exports = UTIF;}\r\n\telse {}\r\n\t\r\n\tvar pako = ( true) ? __webpack_require__(/*! pako */ \"(ssr)/../../node_modules/.pnpm/pako@1.0.11/node_modules/pako/index.js\") : 0;\r\n\t\r\n\tfunction log() { if (typeof process==\"undefined\" || \"development\"==\"development\") console.log.apply(console, arguments);  }\r\n\t\r\n\t(function(UTIF, pako){\r\n\t\t\r\n\t// Following lines add a JPEG decoder  to UTIF.JpegDecoder\r\n\t(function(){\"use strict\";var W=function a1(){function W(p){this.message=\"JPEG error: \"+p}W.prototype=new Error;W.prototype.name=\"JpegError\";W.constructor=W;return W}(),ak=function ag(){var p=new Uint8Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]),t=4017,ac=799,ah=3406,ao=2276,ar=1567,ai=3784,s=5793,ad=2896;function ak(Q){if(Q==null)Q={};if(Q.w==null)Q.w=-1;this.V=Q.n;this.N=Q.w}function a5(Q,h){var f=0,G=[],n,E,a=16,F;while(a>0&&!Q[a-1]){a--}G.push({children:[],index:0});var C=G[0];for(n=0;n<a;n++)\r\n\t{for(E=0;E<Q[n];E++){C=G.pop();C.children[C.index]=h[f];while(C.index>0){C=G.pop()}C.index++;G.push(C);while(G.length<=n){G.push(F={children:[],index:0});C.children[C.index]=F.children;C=F}f++}if(n+1<a){G.push(F={children:[],index:0});C.children[C.index]=F.children;C=F}}return G[0].children}function a2(Q,h,f){return 64*((Q.P+1)*h+f)}function a7(Q,h,f,G,n,E,a,C,F,d){if(d==null)d=!1;var T=f.m,U=f.Z,z=h,J=0,V=0,r=0,D=0,a8,q=0,X,O,_,N,e,K,x=0,k,g,R,c;function Y(){if(V>0){V--;return J>>V&1}J=Q[h++];if(J===255){var I=Q[h++];if(I){if(I===220&&d){h+=2;var l=Z(Q,h);h+=2;if(l>0&&l!==f.s){throw new DNLMarkerError(\"Found DNL marker (0xFFDC) while parsing scan data\",l)}}else if(I===217){if(d){var M=q*8;\r\n\tif(M>0&&M<f.s/10){throw new DNLMarkerError(\"Found EOI marker (0xFFD9) while parsing scan data, \"+\"possibly caused by incorrect `scanLines` parameter\",M)}}throw new EOIMarkerError(\"Found EOI marker (0xFFD9) while parsing scan data\")}throw new W(\"unexpected marker\")}}V=7;return J>>>7}function u(I){var l=I;while(!0){l=l[Y()];switch(typeof l){case\"number\":return l;case\"object\":continue}throw new W(\"invalid huffman sequence\")}}function m(I){var e=0;while(I>0){e=e<<1|Y();I--}return e}function j(I){if(I===1){return Y()===1?1:-1}var e=m(I);if(e>=1<<I-1){return e}return e+(-1<<I)+1}function v(X,I){var l=u(X.J),M=l===0?0:j(l),N=1;\r\n\tX.D[I]=X.Q+=M;while(N<64){var S=u(X.i),i=S&15,A=S>>4;if(i===0){if(A<15){break}N+=16;continue}N+=A;var o=p[N];X.D[I+o]=j(i);N++}}function $(X,I){var l=u(X.J),M=l===0?0:j(l)<<F;X.D[I]=X.Q+=M}function b(X,I){X.D[I]|=Y()<<F}function P(X,I){if(r>0){r--;return}var N=E,l=a;while(N<=l){var M=u(X.i),S=M&15,i=M>>4;if(S===0){if(i<15){r=m(i)+(1<<i)-1;break}N+=16;continue}N+=i;var A=p[N];X.D[I+A]=j(S)*(1<<F);N++}}function a4(X,I){var N=E,l=a,M=0,S,i;while(N<=l){var A=I+p[N],o=X.D[A]<0?-1:1;switch(D){case 0:i=u(X.i);S=i&15;M=i>>4;if(S===0){if(M<15){r=m(M)+(1<<M);D=4}else{M=16;D=1}}else{if(S!==1){throw new W(\"invalid ACn encoding\")}a8=j(S);D=M?2:3}continue;case 1:case 2:if(X.D[A]){X.D[A]+=o*(Y()<<F)}else{M--;if(M===0){D=D===2?3:0}}break;case 3:if(X.D[A]){X.D[A]+=o*(Y()<<F)}else{X.D[A]=a8<<F;\r\n\tD=0}break;case 4:if(X.D[A]){X.D[A]+=o*(Y()<<F)}break}N++}if(D===4){r--;if(r===0){D=0}}}function H(X,I,x,l,M){var S=x/T|0,i=x%T;q=S*X.A+l;var A=i*X.h+M,o=a2(X,q,A);I(X,o)}function w(X,I,x){q=x/X.P|0;var l=x%X.P,M=a2(X,q,l);I(X,M)}var y=G.length;if(U){if(E===0){K=C===0?$:b}else{K=C===0?P:a4}}else{K=v}if(y===1){g=G[0].P*G[0].c}else{g=T*f.R}while(x<=g){var L=n?Math.min(g-x,n):g;if(L>0){for(O=0;O<y;O++){G[O].Q=0}r=0;if(y===1){X=G[0];for(e=0;e<L;e++){w(X,K,x);x++}}else{for(e=0;e<L;\r\n\te++){for(O=0;O<y;O++){X=G[O];R=X.h;c=X.A;for(_=0;_<c;_++){for(N=0;N<R;N++){H(X,K,x,_,N)}}}x++}}}V=0;k=an(Q,h);if(!k){break}if(k.u){var a6=L>0?\"unexpected\":\"excessive\";h=k.offset}if(k.M>=65488&&k.M<=65495){h+=2}else{break}}return h-z}function al(Q,h,f){var G=Q.$,n=Q.D,E,a,C,F,d,T,U,z,J,V,Y,u,m,j,v,$,b;if(!G){throw new W(\"missing required Quantization Table.\")}for(var r=0;r<64;r+=8){J=n[h+r];V=n[h+r+1];Y=n[h+r+2];u=n[h+r+3];m=n[h+r+4];j=n[h+r+5];v=n[h+r+6];$=n[h+r+7];J*=G[r];if((V|Y|u|m|j|v|$)===0){b=s*J+512>>10;f[r]=b;f[r+1]=b;f[r+2]=b;f[r+3]=b;f[r+4]=b;f[r+5]=b;f[r+6]=b;f[r+7]=b;continue}V*=G[r+1];Y*=G[r+2];u*=G[r+3];m*=G[r+4];j*=G[r+5];v*=G[r+6];$*=G[r+7];E=s*J+128>>8;a=s*m+128>>8;C=Y;F=v;d=ad*(V-$)+128>>8;z=ad*(V+$)+128>>8;\r\n\tT=u<<4;U=j<<4;E=E+a+1>>1;a=E-a;b=C*ai+F*ar+128>>8;C=C*ar-F*ai+128>>8;F=b;d=d+U+1>>1;U=d-U;z=z+T+1>>1;T=z-T;E=E+F+1>>1;F=E-F;a=a+C+1>>1;C=a-C;b=d*ao+z*ah+2048>>12;d=d*ah-z*ao+2048>>12;z=b;b=T*ac+U*t+2048>>12;T=T*t-U*ac+2048>>12;U=b;f[r]=E+z;f[r+7]=E-z;f[r+1]=a+U;f[r+6]=a-U;f[r+2]=C+T;f[r+5]=C-T;f[r+3]=F+d;f[r+4]=F-d}for(var P=0;P<8;++P){J=f[P];V=f[P+8];Y=f[P+16];u=f[P+24];m=f[P+32];j=f[P+40];v=f[P+48];$=f[P+56];if((V|Y|u|m|j|v|$)===0){b=s*J+8192>>14;if(b<-2040){b=0}else if(b>=2024){b=255}else{b=b+2056>>4}n[h+P]=b;n[h+P+8]=b;n[h+P+16]=b;n[h+P+24]=b;n[h+P+32]=b;n[h+P+40]=b;n[h+P+48]=b;n[h+P+56]=b;continue}E=s*J+2048>>12;a=s*m+2048>>12;C=Y;F=v;d=ad*(V-$)+2048>>12;z=ad*(V+$)+2048>>12;T=u;U=j;E=(E+a+1>>1)+4112;a=E-a;b=C*ai+F*ar+2048>>12;C=C*ar-F*ai+2048>>12;F=b;d=d+U+1>>1;U=d-U;z=z+T+1>>1;T=z-T;E=E+F+1>>1;F=E-F;a=a+C+1>>1;C=a-C;b=d*ao+z*ah+2048>>12;d=d*ah-z*ao+2048>>12;z=b;\r\n\tb=T*ac+U*t+2048>>12;T=T*t-U*ac+2048>>12;U=b;J=E+z;$=E-z;V=a+U;v=a-U;Y=C+T;j=C-T;u=F+d;m=F-d;if(J<16){J=0}else if(J>=4080){J=255}else{J>>=4}if(V<16){V=0}else if(V>=4080){V=255}else{V>>=4}if(Y<16){Y=0}else if(Y>=4080){Y=255}else{Y>>=4}if(u<16){u=0}else if(u>=4080){u=255}else{u>>=4}if(m<16){m=0}else if(m>=4080){m=255}else{m>>=4}if(j<16){j=0}else if(j>=4080){j=255}else{j>>=4}if(v<16){v=0}else if(v>=4080){v=255}else{v>>=4}if($<16){$=0}else if($>=4080){$=255}else{$>>=4}n[h+P]=J;\r\n\tn[h+P+8]=V;n[h+P+16]=Y;n[h+P+24]=u;n[h+P+32]=m;n[h+P+40]=j;n[h+P+48]=v;n[h+P+56]=$}}function a0(Q,h){var f=h.P,G=h.c,n=new Int16Array(64);for(var E=0;E<G;E++){for(var a=0;a<f;a++){var C=a2(h,E,a);al(h,C,n)}}return h.D}function an(Q,h,f){if(f==null)f=h;var G=Q.length-1,n=f<h?f:h;if(h>=G){return null}var E=Z(Q,h);if(E>=65472&&E<=65534){return{u:null,M:E,offset:h}}var a=Z(Q,n);while(!(a>=65472&&a<=65534)){if(++n>=G){return null}a=Z(Q,n)}return{u:E.toString(16),M:a,offset:n}}ak.prototype={parse(Q,h){if(h==null)h={};\r\n\tvar f=h.F,E=0,a=null,C=null,F,d,T=0;function G(){var o=Z(Q,E);E+=2;var B=E+o-2,V=an(Q,B,E);if(V&&V.u){B=V.offset}var ab=Q.subarray(E,B);E+=ab.length;return ab}function n(F){var o=Math.ceil(F.o/8/F.X),B=Math.ceil(F.s/8/F.B);for(var Y=0;Y<F.W.length;Y++){R=F.W[Y];var ab=Math.ceil(Math.ceil(F.o/8)*R.h/F.X),af=Math.ceil(Math.ceil(F.s/8)*R.A/F.B),ap=o*R.h,aq=B*R.A,ae=64*aq*(ap+1);R.D=new Int16Array(ae);R.P=ab;R.c=af}F.m=o;F.R=B}var U=[],z=[],J=[],V=Z(Q,E);E+=2;if(V!==65496){throw new W(\"SOI not found\")}V=Z(Q,E);\r\n\tE+=2;markerLoop:while(V!==65497){var Y,u,m;switch(V){case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:var j=G();if(V===65504){if(j[0]===74&&j[1]===70&&j[2]===73&&j[3]===70&&j[4]===0){a={version:{d:j[5],T:j[6]},K:j[7],j:j[8]<<8|j[9],H:j[10]<<8|j[11],S:j[12],I:j[13],C:j.subarray(14,14+3*j[12]*j[13])}}}if(V===65518){if(j[0]===65&&j[1]===100&&j[2]===111&&j[3]===98&&j[4]===101){C={version:j[5]<<8|j[6],k:j[7]<<8|j[8],q:j[9]<<8|j[10],a:j[11]}}}break;\r\n\tcase 65499:var v=Z(Q,E),b;E+=2;var $=v+E-2;while(E<$){var r=Q[E++],P=new Uint16Array(64);if(r>>4===0){for(u=0;u<64;u++){b=p[u];P[b]=Q[E++]}}else if(r>>4===1){for(u=0;u<64;u++){b=p[u];P[b]=Z(Q,E);E+=2}}else{throw new W(\"DQT - invalid table spec\")}U[r&15]=P}break;case 65472:case 65473:case 65474:if(F){throw new W(\"Only single frame JPEGs supported\")}E+=2;F={};F.G=V===65473;F.Z=V===65474;F.precision=Q[E++];var D=Z(Q,E),a4,q=0,H=0;E+=2;F.s=f||D;F.o=Z(Q,E);E+=2;F.W=[];F._={};var a8=Q[E++];for(Y=0;Y<a8;Y++){a4=Q[E];var w=Q[E+1]>>4,y=Q[E+1]&15;if(q<w){q=w}if(H<y){H=y}var X=Q[E+2];m=F.W.push({h:w,A:y,L:X,$:null});F._[a4]=m-1;E+=3}F.X=q;F.B=H;n(F);break;case 65476:var O=Z(Q,E);E+=2;\r\n\tfor(Y=2;Y<O;){var _=Q[E++],N=new Uint8Array(16),e=0;for(u=0;u<16;u++,E++){e+=N[u]=Q[E]}var K=new Uint8Array(e);for(u=0;u<e;u++,E++){K[u]=Q[E]}Y+=17+e;(_>>4===0?J:z)[_&15]=a5(N,K)}break;case 65501:E+=2;d=Z(Q,E);E+=2;break;case 65498:var x=++T===1&&!f,R;E+=2;var k=Q[E++],g=[];for(Y=0;Y<k;Y++){var c=Q[E++],L=F._[c];R=F.W[L];R.index=c;var a6=Q[E++];R.J=J[a6>>4];R.i=z[a6&15];g.push(R)}var I=Q[E++],l=Q[E++],M=Q[E++];try{var S=a7(Q,E,F,g,d,I,l,M>>4,M&15,x);E+=S}catch(ex){if(ex instanceof DNLMarkerError){return this.parse(Q,{F:ex.s})}else if(ex instanceof EOIMarkerError){break markerLoop}throw ex}break;case 65500:E+=4;break;case 65535:if(Q[E]!==255){E--}break;default:var i=an(Q,E-2,E-3);if(i&&i.u){E=i.offset;break}if(E>=Q.length-1){break markerLoop}throw new W(\"JpegImage.parse - unknown marker: \"+V.toString(16))}V=Z(Q,E);E+=2}this.width=F.o;this.height=F.s;this.g=a;this.b=C;this.W=[];for(Y=0;Y<F.W.length;Y++){R=F.W[Y];\r\n\tvar A=U[R.L];if(A){R.$=A}this.W.push({index:R.index,e:a0(F,R),l:R.h/F.X,t:R.A/F.B,P:R.P,c:R.c})}this.p=this.W.length;return undefined},Y(Q,h,f){if(f==null)f=!1;var G=this.width/Q,n=this.height/h,E,a,C,F,d,T,U,z,J,V,Y=0,u,m=this.W.length,j=Q*h*m,v=new Uint8ClampedArray(j),$=new Uint32Array(Q),b=4294967288,r;for(U=0;U<m;U++){E=this.W[U];a=E.l*G;C=E.t*n;Y=U;u=E.e;F=E.P+1<<3;if(a!==r){for(d=0;d<Q;d++){z=0|d*a;$[d]=(z&b)<<3|z&7}r=a}for(T=0;T<h;T++){z=0|T*C;V=F*(z&b)|(z&7)<<3;for(d=0;d<Q;d++){v[Y]=u[V+$[d]];Y+=m}}}var P=this.V;if(!f&&m===4&&!P){P=new Int32Array([-256,255,-256,255,-256,255,-256,255])}if(P){for(U=0;U<j;){for(z=0,J=0;z<m;z++,U++,J+=2){v[U]=(v[U]*P[J]>>8)+P[J+1]}}}return v},get f(){if(this.b){return!!this.b.a}if(this.p===3){if(this.N===0){return!1}else if(this.W[0].index===82&&this.W[1].index===71&&this.W[2].index===66){return!1}return!0}if(this.N===1){return!0}return!1},z:function aj(Q){var h,f,G;\r\n\tfor(var n=0,E=Q.length;n<E;n+=3){h=Q[n];f=Q[n+1];G=Q[n+2];Q[n]=h-179.456+1.402*G;Q[n+1]=h+135.459-.344*f-.714*G;Q[n+2]=h-226.816+1.772*f}return Q},O:function aa(Q){var h,f,G,n,E=0;for(var a=0,C=Q.length;a<C;a+=4){h=Q[a];f=Q[a+1];G=Q[a+2];n=Q[a+3];Q[E++]=-122.67195406894+f*(-660635669420364e-19*f+.000437130475926232*G-54080610064599e-18*h+.00048449797120281*n-.154362151871126)+G*(-.000957964378445773*G+.000817076911346625*h-.00477271405408747*n+1.53380253221734)+h*(.000961250184130688*h-.00266257332283933*n+.48357088451265)+n*(-.000336197177618394*n+.484791561490776);\r\n\tQ[E++]=107.268039397724+f*(219927104525741e-19*f-.000640992018297945*G+.000659397001245577*h+.000426105652938837*n-.176491792462875)+G*(-.000778269941513683*G+.00130872261408275*h+.000770482631801132*n-.151051492775562)+h*(.00126935368114843*h-.00265090189010898*n+.25802910206845)+n*(-.000318913117588328*n-.213742400323665);Q[E++]=-20.810012546947+f*(-.000570115196973677*f-263409051004589e-19*G+.0020741088115012*h-.00288260236853442*n+.814272968359295)+G*(-153496057440975e-19*G-.000132689043961446*h+.000560833691242812*n-.195152027534049)+h*(.00174418132927582*h-.00255243321439347*n+.116935020465145)+n*(-.000343531996510555*n+.24165260232407)}return Q.subarray(0,E)},r:function a3(Q){var h,f,G;\r\n\tfor(var n=0,E=Q.length;n<E;n+=4){h=Q[n];f=Q[n+1];G=Q[n+2];Q[n]=434.456-h-1.402*G;Q[n+1]=119.541-h+.344*f+.714*G;Q[n+2]=481.816-h-1.772*f}return Q},U:function as(Q){var h,f,G,n,E=0;for(var a=0,C=Q.length;a<C;a+=4){h=Q[a];f=Q[a+1];G=Q[a+2];n=Q[a+3];Q[E++]=255+h*(-6747147073602441e-20*h+.0008379262121013727*f+.0002894718188643294*G+.003264231057537806*n-1.1185611867203937)+f*(26374107616089404e-21*f-8626949158638572e-20*G-.0002748769067499491*n-.02155688794978967)+G*(-3878099212869363e-20*G-.0003267808279485286*n+.0686742238595345)-n*(.0003361971776183937*n+.7430659151342254);\r\n\tQ[E++]=255+h*(.00013596372813588848*h+.000924537132573585*f+.00010567359618683593*G+.0004791864687436512*n-.3109689587515875)+f*(-.00023545346108370344*f+.0002702845253534714*G+.0020200308977307156*n-.7488052167015494)+G*(6834815998235662e-20*G+.00015168452363460973*n-.09751927774728933)-n*(.0003189131175883281*n+.7364883807733168);Q[E++]=255+h*(13598650411385308e-21*h+.00012423956175490851*f+.0004751985097583589*G-36729317476630424e-22*n-.05562186980264034)+f*(.00016141380598724676*f+.0009692239130725186*G+.0007782692450036253*n-.44015232367526463)+G*(5.068882914068769e-7*G+.0017778369011375071*n-.7591454649749609)-n*(.0003435319965105553*n+.7063770186160144)}return Q.subarray(0,E)},getData:function(Q){var h=Q.width,f=Q.height,G=Q.forceRGB,n=Q.isSourcePDF;\r\n\tif(this.p>4){throw new W(\"Unsupported color mode\")}var E=this.Y(h,f,n);if(this.p===1&&G){var a=E.length,C=new Uint8ClampedArray(a*3),F=0;for(var d=0;d<a;d++){var T=E[d];C[F++]=T;C[F++]=T;C[F++]=T}return C}else if(this.p===3&&this.f){return this.z(E)}else if(this.p===4){if(this.f){if(G){return this.O(E)}return this.r(E)}else if(G){return this.U(E)}}return E}};return ak}();function a9(p,t){return p[t]<<24>>24}function Z(p,t){return p[t]<<8|p[t+1]}function am(p,t){return(p[t]<<24|p[t+1]<<16|p[t+2]<<8|p[t+3])>>>0}UTIF.JpegDecoder=ak}());\r\n\t\r\n\t//UTIF.JpegDecoder = PDFJS.JpegImage;\r\n\t\r\n\t\r\n\tUTIF.encodeImage = function(rgba, w, h, metadata)\r\n\t{\r\n\t\tvar idf = { \"t256\":[w], \"t257\":[h], \"t258\":[8,8,8,8], \"t259\":[1], \"t262\":[2], \"t273\":[1000], // strips offset\r\n\t\t\t\t\t\"t277\":[4], \"t278\":[h], /* rows per strip */          \"t279\":[w*h*4], // strip byte counts\r\n\t\t\t\t\t\"t282\":[[72,1]], \"t283\":[[72,1]], \"t284\":[1], \"t286\":[[0,1]], \"t287\":[[0,1]], \"t296\":[1], \"t305\": [\"Photopea (UTIF.js)\"], \"t338\":[1]\r\n\t\t\t};\r\n\t\tif (metadata) for (var i in metadata) idf[i] = metadata[i];\r\n\t\t\r\n\t\tvar prfx = new Uint8Array(UTIF.encode([idf]));\r\n\t\tvar img = new Uint8Array(rgba);\r\n\t\tvar data = new Uint8Array(1000+w*h*4);\r\n\t\tfor(var i=0; i<prfx.length; i++) data[i] = prfx[i];\r\n\t\tfor(var i=0; i<img .length; i++) data[1000+i] = img[i];\r\n\t\treturn data.buffer;\r\n\t}\r\n\t\r\n\tUTIF.encode = function(ifds)\r\n\t{\r\n\t\tvar LE = false;\r\n\t\tvar data = new Uint8Array(20000), offset = 4, bin = LE ? UTIF._binLE : UTIF._binBE;\r\n\t\tdata[0]=data[1]=LE?73:77;  bin.writeUshort(data,2,42);\r\n\t\r\n\t\tvar ifdo = 8;\r\n\t\tbin.writeUint(data, offset, ifdo);  offset+=4;\r\n\t\tfor(var i=0; i<ifds.length; i++)\r\n\t\t{\r\n\t\t\tvar noffs = UTIF._writeIFD(bin, UTIF._types.basic, data, ifdo, ifds[i]);\r\n\t\t\tifdo = noffs[1];\r\n\t\t\tif(i<ifds.length-1) {\r\n\t\t\t\tif((ifdo&3)!=0) ifdo+=(4-(ifdo&3));  // make each IFD start at multiple of 4\r\n\t\t\t\tbin.writeUint(data, noffs[0], ifdo);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn data.slice(0, ifdo).buffer;\r\n\t}\r\n\t\r\n\tUTIF.decode = function(buff, prm)\r\n\t{\r\n\t\tif(prm==null) prm = {parseMN:true, debug:false};  // read MakerNote, debug\r\n\t\tvar data = new Uint8Array(buff), offset = 0;\r\n\t\r\n\t\tvar id = UTIF._binBE.readASCII(data, offset, 2);  offset+=2;\r\n\t\tvar bin = id==\"II\" ? UTIF._binLE : UTIF._binBE;\r\n\t\tvar num = bin.readUshort(data, offset);  offset+=2;\r\n\t\r\n\t\tvar ifdo = bin.readUint(data, offset);  offset+=4;\r\n\t\tvar ifds = [];\r\n\t\twhile(true) {\r\n\t\t\tvar cnt = bin.readUshort(data,ifdo), typ = bin.readUshort(data,ifdo+4);  if(cnt!=0) if(typ<1 || 13<typ) {  log(\"error in TIFF\");  break  };\r\n\t\t\tUTIF._readIFD(bin, data, ifdo, ifds, 0, prm);\r\n\t\t\t\r\n\t\t\tifdo = bin.readUint(data, ifdo+2+cnt*12);\r\n\t\t\tif(ifdo==0) break;\r\n\t\t}\r\n\t\treturn ifds;\r\n\t}\r\n\t\r\n\tUTIF.decodeImage = function(buff, img, ifds)\r\n\t{\r\n\t\tif(img.data) return;\r\n\t\tvar data = new Uint8Array(buff);\r\n\t\tvar id = UTIF._binBE.readASCII(data, 0, 2);\r\n\t\r\n\t\tif(img[\"t256\"]==null) return;\t// No width => probably not an image\r\n\t\timg.isLE = id==\"II\";\r\n\t\timg.width  = img[\"t256\"][0];  //delete img[\"t256\"];\r\n\t\timg.height = img[\"t257\"][0];  //delete img[\"t257\"];\r\n\t\r\n\t\tvar cmpr = img[\"t259\"] ? img[\"t259\"][0] : 1;  //delete img[\"t259\"];\r\n\t\tvar fo   = img[\"t266\"] ? img[\"t266\"][0] : 1;  //delete img[\"t266\"];\r\n\t\tif(img[\"t284\"] && img[\"t284\"][0]==2) log(\"PlanarConfiguration 2 should not be used!\");\r\n\t\tif(cmpr==7 && img[\"t258\"] && img[\"t258\"].length>3)  img[\"t258\"]=img[\"t258\"].slice(0,3);\r\n\t\r\n\t\tvar spp = img[\"t277\"]?img[\"t277\"][0]:1;\r\n\t\tvar bps = img[\"t258\"]?img[\"t258\"][0]:1;\r\n\t\tvar bipp = bps*spp;  // bits per pixel\r\n\t\t/*\r\n\t\tvar bipp;  // bits per pixel\r\n\t\tif(img[\"t258\"]) bipp = Math.min(32,img[\"t258\"][0])*img[\"t258\"].length;\r\n\t\telse            bipp = (img[\"t277\"]?img[\"t277\"][0]:1);  \r\n\t\t*/\r\n\t\t// Some .NEF files have t258==14, even though they use 16 bits per pixel\r\n\t\tif(cmpr==1 && img[\"t279\"]!=null && img[\"t278\"] && img[\"t262\"][0]==32803)  {\r\n\t\t\tbipp = Math.round((img[\"t279\"][0]*8)/(img.width*img[\"t278\"][0]));\r\n\t\t}\r\n\t\tif(img[\"t50885\"] && img[\"t50885\"][0]==4) bipp = img[\"t258\"][0]*3;  // RAW_CANON_40D_SRAW_V103.CR2\r\n\t\tvar bipl = Math.ceil(img.width*bipp/8)*8;\r\n\t\tvar soff = img[\"t273\"];  if(soff==null || img[\"t322\"]) soff = img[\"t324\"];\r\n\t\tvar bcnt = img[\"t279\"];  if(cmpr==1 && soff.length==1) bcnt = [img.height*(bipl>>>3)];  if(bcnt==null || img[\"t322\"]) bcnt = img[\"t325\"];\r\n\t\t//bcnt[0] = Math.min(bcnt[0], data.length);  // Hasselblad, \"RAW_HASSELBLAD_H3D39II.3FR\"\r\n\t\tvar bytes = new Uint8Array(img.height*(bipl>>>3)), bilen = 0;\r\n\t\r\n\t\tif(img[\"t322\"]!=null) // tiled\r\n\t\t{\r\n\t\t\tvar tw = img[\"t322\"][0], th = img[\"t323\"][0];\r\n\t\t\tvar tx = Math.floor((img.width  + tw - 1) / tw);\r\n\t\t\tvar ty = Math.floor((img.height + th - 1) / th);\r\n\t\t\tvar tbuff = new Uint8Array(Math.ceil(tw*th*bipp/8)|0);\r\n\t\t\tconsole.log(\"====\", tx,ty);\r\n\t\t\tfor(var y=0; y<ty; y++)\r\n\t\t\t\tfor(var x=0; x<tx; x++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar i = y*tx+x;  tbuff.fill(0);\r\n\t\t\t\t\tUTIF.decode._decompress(img,ifds, data, soff[i], bcnt[i], cmpr, tbuff, 0, fo,tw,th);\r\n\t\t\t\t\t// Might be required for 7 too. Need to check\r\n\t\t\t\t\tif (cmpr==6) bytes = tbuff;\r\n\t\t\t\t\telse UTIF._copyTile(tbuff, Math.ceil(tw*bipp/8)|0, th, bytes, Math.ceil(img.width*bipp/8)|0, img.height, Math.ceil(x*tw*bipp/8)|0, y*th);\r\n\t\t\t\t}\r\n\t\t\tbilen = bytes.length*8;\r\n\t\t}\r\n\t\telse\t// stripped\r\n\t\t{\r\n\t\t\tif(soff==null) return;\r\n\t\t\tvar rps = img[\"t278\"] ? img[\"t278\"][0] : img.height;   rps = Math.min(rps, img.height);\r\n\t\t\t//console.log(\"====\", img.width, rps);\r\n\t\t\tfor(var i=0; i<soff.length; i++)\r\n\t\t\t{\r\n\t\t\t\tUTIF.decode._decompress(img,ifds, data, soff[i], bcnt[i], cmpr, bytes, Math.ceil(bilen/8)|0, fo,img.width,rps);\r\n\t\t\t\tbilen += bipl * rps;\r\n\t\t\t}\r\n\t\t\tbilen = Math.min(bilen, bytes.length*8);\r\n\t\t}\r\n\t\timg.data = new Uint8Array(bytes.buffer, 0, Math.ceil(bilen/8)|0);\r\n\t}\r\n\t\r\n\tUTIF.decode._decompress = function(img,ifds, data, off, len, cmpr, tgt, toff, fo, w, h)  // fill order\r\n\t{\r\n\t\tif(img[\"t271\"] && img[\"t271\"][0]==\"Panasonic\" && img[\"t45\"] && img[\"t45\"][0]==6) cmpr = 34316;\r\n\t\t//console.log(\"compression\", cmpr);\r\n\t\t//var time = Date.now();\r\n\t\tif(false) {}\r\n\t\telse if(cmpr==1/* || (len==tgt.length && cmpr!=32767)*/) for(var j=0; j<len; j++) tgt[toff+j] = data[off+j];\r\n\t\telse if(cmpr==2) UTIF.decode._decodeG2 (data, off, len, tgt, toff, w, fo);\r\n\t\telse if(cmpr==3) UTIF.decode._decodeG3 (data, off, len, tgt, toff, w, fo, img[\"t292\"]?((img[\"t292\"][0]&1)==1):false);\r\n\t\telse if(cmpr==4) UTIF.decode._decodeG4 (data, off, len, tgt, toff, w, fo);\r\n\t\telse if(cmpr==5) UTIF.decode._decodeLZW(data, off, len, tgt, toff,8);\r\n\t\telse if(cmpr==6) UTIF.decode._decodeOldJPEG(img, data, off, len, tgt, toff);\r\n\t\telse if(cmpr==7 || cmpr==34892) UTIF.decode._decodeNewJPEG(img, data, off, len, tgt, toff);\r\n\t\telse if(cmpr==8 || cmpr==32946) {  var src = new Uint8Array(data.buffer,off+2,len-6);  var bin = pako[\"inflateRaw\"](src);  if(toff+bin.length<=tgt.length) tgt.set(bin,toff);  }\r\n\t\telse if(cmpr==9) UTIF.decode._decodeVC5(data,off,len,tgt,toff,img[\"t33422\"]);\r\n\t\telse if(cmpr==32767) UTIF.decode._decodeARW(img, data, off, len, tgt, toff);\r\n\t\telse if(cmpr==32773) UTIF.decode._decodePackBits(data, off, len, tgt, toff);\r\n\t\telse if(cmpr==32809) UTIF.decode._decodeThunder (data, off, len, tgt, toff);\r\n\t\telse if(cmpr==34316) UTIF.decode._decodePanasonic(img,data,off, len, tgt, toff);\r\n\t\telse if(cmpr==34713) //for(var j=0; j<len; j++) tgt[toff+j] = data[off+j];\r\n\t\t\tUTIF.decode._decodeNikon   (img,ifds, data, off, len, tgt, toff);\r\n\t\telse if(cmpr==34676) UTIF.decode._decodeLogLuv32(img,data, off, len, tgt, toff);  \r\n\t\telse log(\"Unknown compression\", cmpr);\r\n\t\t\r\n\t\t//console.log(Date.now()-time);\r\n\t\t\r\n\t\tvar bps = (img[\"t258\"]?Math.min(32,img[\"t258\"][0]):1);\r\n\t\tvar noc = (img[\"t277\"]?img[\"t277\"][0]:1), bpp=(bps*noc)>>>3, bpl = Math.ceil(bps*noc*w/8);\r\n\t\t\r\n\t\t// convert to Little Endian  /*\r\n\t\tif(bps==16 && !img.isLE && img[\"t33422\"]==null)  // not DNG\r\n\t\t\tfor(var y=0; y<h; y++) {\r\n\t\t\t\t//console.log(\"fixing endianity\");\r\n\t\t\t\tvar roff = toff+y*bpl;\r\n\t\t\t\tfor(var x=1; x<bpl; x+=2) {  var t=tgt[roff+x];  tgt[roff+x]=tgt[roff+x-1];  tgt[roff+x-1]=t;  }\r\n\t\t\t}  //*/\r\n\t\r\n\t\tif(img[\"t317\"] && img[\"t317\"][0]==2)\r\n\t\t{\r\n\t\t\tfor(var y=0; y<h; y++)\r\n\t\t\t{\r\n\t\t\t\tvar ntoff = toff+y*bpl;\r\n\t\t\t\tif(bps==16) for(var j=bpp; j<bpl; j+=2) {\r\n\t\t\t\t\tvar nv = ((tgt[ntoff+j+1]<<8)|tgt[ntoff+j])  +  ((tgt[ntoff+j-bpp+1]<<8)|tgt[ntoff+j-bpp]);\r\n\t\t\t\t\ttgt[ntoff+j] = nv&255;  tgt[ntoff+j+1] = (nv>>>8)&255;  \r\n\t\t\t\t}\r\n\t\t\t\telse if(noc==3) for(var j=  3; j<bpl; j+=3)\r\n\t\t\t\t{\r\n\t\t\t\t\ttgt[ntoff+j  ] = (tgt[ntoff+j  ] + tgt[ntoff+j-3])&255;\r\n\t\t\t\t\ttgt[ntoff+j+1] = (tgt[ntoff+j+1] + tgt[ntoff+j-2])&255;\r\n\t\t\t\t\ttgt[ntoff+j+2] = (tgt[ntoff+j+2] + tgt[ntoff+j-1])&255;\r\n\t\t\t\t}\r\n\t\t\t\telse for(var j=bpp; j<bpl; j++) tgt[ntoff+j] = (tgt[ntoff+j] + tgt[ntoff+j-bpp])&255;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\t\tUTIF.decode._decodePanasonic = function(img, data, off, len, tgt, toff) {\r\n\t\r\n\t\t\t\t\tvar img_buffer = data.buffer;\r\n\t\t\r\n\t\t\t\t\tvar rawWidth = img[\"t2\"][0];\r\n\t\t\t\t\tvar rawHeight = img[\"t3\"][0];\r\n\t\t\t\t\tvar bitsPerSample = img[\"t10\"][0];\r\n\t\t\t\t\tvar RW2_Format =  img[\"t45\"][0];\r\n\t\t\r\n\t\t\t\t\tvar bidx = 0;\r\n\t\t\t\t\tvar imageIndex = 0;\r\n\t\t\t\t\tvar vpos = 0;\r\n\t\t\t\t\tvar byte = 0;\r\n\t\t\t\t\tvar arr_a, arr_b;\r\n\t\t\t\t\tvar bytes = (RW2_Format == 6 ? new Uint32Array(18) : new Uint8Array(16));\r\n\t\t\t\t\tvar i, j, sh, pred=[0,0], nonz=[0,0], isOdd, idx = 0, pixel_base;\r\n\t\t\t\t\tvar row, col, crow;\r\n\t\t\t\t\tvar buffer = new Uint8Array(0x4000);\r\n\t\t\t\t\tvar result = new Uint16Array(tgt.buffer);\r\n\t\r\n\t\t\t\t\tfunction getDataRaw(bits){\r\n\t\t\t\t\t\tif (vpos == 0) {\r\n\t\t\t\t\t\t\tvar arr_a = new Uint8Array(img_buffer, off+imageIndex + 0x1ff8, 0x4000-0x1ff8);\r\n\t\t\t\t\t\t\tvar arr_b = new Uint8Array(img_buffer, off+imageIndex, 0x1ff8);\r\n\t\t\t\t\t\t\tbuffer.set(arr_a);  \r\n\t\t\t\t\t\t\tbuffer.set(arr_b, arr_a.length);\r\n\t\t\t\t\t\t\timageIndex += 0x4000;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(RW2_Format == 5) {\r\n\t\t\t\t\t\t\tfor (i = 0; i < 16; i++){\r\n\t\t\t\t\t\t\t\tbytes[i] = buffer[vpos++];\r\n\t\t\t\t\t\t\t\tvpos &= 0x3FFF;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvpos = (vpos - bits) & 0x1ffff;\r\n\t\t\t\t\t\t\tbyte = vpos >> 3 ^ 0x3ff0;\r\n\t\t\t\t\t\t\treturn (buffer[byte] | buffer[byte + 1] << 8) >> (vpos & 7) & ~((-1) << bits);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Raw Format 6\r\n\t\t\t\t\tfunction getBufferDataRW6(i) {\r\n\t\t\t\t\t\treturn buffer[vpos + 15 - i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfunction readPageRW6() {\r\n\t\t\t\t\t\tbytes[0] = (getBufferDataRW6(0) << 6) | (getBufferDataRW6(1) >> 2); // 14 bit\r\n\t\t\t\t\t\tbytes[1] = (((getBufferDataRW6(1) & 0x3) << 12) | (getBufferDataRW6(2) << 4) | (getBufferDataRW6(3) >> 4)) & 0x3fff;\r\n\t\t\t\t\t\tbytes[2] = (getBufferDataRW6(3) >> 2) & 0x3;\r\n\t\t\t\t\t\tbytes[3] = ((getBufferDataRW6(3) & 0x3) << 8) | getBufferDataRW6(4);\r\n\t\t\t\t\t\tbytes[4] = (getBufferDataRW6(5) << 2) | (getBufferDataRW6(6) >> 6);\r\n\t\t\t\t\t\tbytes[5] = ((getBufferDataRW6(6) & 0x3f) << 4) | (getBufferDataRW6(7) >> 4);\r\n\t\t\t\t\t\tbytes[6] = (getBufferDataRW6(7) >> 2) & 0x3;\r\n\t\t\t\t\t\tbytes[7] = ((getBufferDataRW6(7) & 0x3) << 8) | getBufferDataRW6(8);\r\n\t\t\t\t\t\tbytes[8] = ((getBufferDataRW6(9) << 2) & 0x3fc) | (getBufferDataRW6(10) >> 6);\r\n\t\t\t\t\t\tbytes[9] = ((getBufferDataRW6(10) << 4) | (getBufferDataRW6(11) >> 4)) & 0x3ff;\r\n\t\t\t\t\t\tbytes[10] = (getBufferDataRW6(11) >> 2) & 0x3;\r\n\t\t\t\t\t\tbytes[11] = ((getBufferDataRW6(11) & 0x3) << 8) | getBufferDataRW6(12);\r\n\t\t\t\t\t\tbytes[12] = (((getBufferDataRW6(13) << 2) & 0x3fc) | getBufferDataRW6(14) >> 6) & 0x3ff;\r\n\t\t\t\t\t\tbytes[13] = ((getBufferDataRW6(14) << 4) | (getBufferDataRW6(15) >> 4)) & 0x3ff;\r\n\t\t\t\t\t\tvpos += 16;\r\n\t\t\t\t\t\tbyte = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfunction readPageRw6_bps12() {\r\n\t\t\t\t\t\tbytes[0] = (getBufferDataRW6(0) << 4) | (getBufferDataRW6(1) >> 4);\r\n\t\t\t\t\t\tbytes[1] = (((getBufferDataRW6(1) & 0xf) << 8) | (getBufferDataRW6(2))) & 0xfff;\r\n\t\t\t\t\t\tbytes[2] = (getBufferDataRW6(3) >> 6) & 0x3;\r\n\t\t\t\t\t\tbytes[3] = ((getBufferDataRW6(3) & 0x3f) << 2) | (getBufferDataRW6(4) >> 6);\r\n\t\t\t\t\t\tbytes[4] = ((getBufferDataRW6(4) & 0x3f) << 2) | (getBufferDataRW6(5) >> 6);\r\n\t\t\t\t\t\tbytes[5] = ((getBufferDataRW6(5) & 0x3f) << 2) | (getBufferDataRW6(6) >> 6);\r\n\t\t\t\t\t\tbytes[6] = (getBufferDataRW6(6) >> 4) & 0x3;\r\n\t\t\t\t\t\tbytes[7] = ((getBufferDataRW6(6) & 0xf) << 4) | (getBufferDataRW6(7) >> 4);\r\n\t\t\t\t\t\tbytes[8] = ((getBufferDataRW6(7) & 0xf) << 4) | (getBufferDataRW6(8) >> 4);\r\n\t\t\t\t\t\tbytes[9] = ((getBufferDataRW6(8) & 0xf) << 4) | (getBufferDataRW6(9) >> 4);\r\n\t\t\t\t\t\tbytes[10] = (getBufferDataRW6(9) >> 2) & 0x3;\r\n\t\t\t\t\t\tbytes[11] = ((getBufferDataRW6(9) & 0x3) << 6) | (getBufferDataRW6(10) >> 2);\r\n\t\t\t\t\t\tbytes[12] = ((getBufferDataRW6(10) & 0x3) << 6) | (getBufferDataRW6(11) >> 2);\r\n\t\t\t\t\t\tbytes[13] = ((getBufferDataRW6(11) & 0x3) << 6) | (getBufferDataRW6(12) >> 2);\r\n\t\t\t\t\t\tbytes[14] = getBufferDataRW6(12) & 0x3;\r\n\t\t\t\t\t\tbytes[15] = getBufferDataRW6(13);\r\n\t\t\t\t\t\tbytes[16] = getBufferDataRW6(14);\r\n\t\t\t\t\t\tbytes[17] = getBufferDataRW6(15);\r\n\t\r\n\t\t\t\t\t\tvpos += 16;\r\n\t\t\t\t\t\tbyte = 0;                    \r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Main loop\r\n\t\t\t\t\tfunction resetPredNonzeros(){\r\n\t\t\t\t\t\tpred[0]=0; pred[1]=0;\r\n\t\t\t\t\t\tnonz[0]=0; nonz[1]=0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (RW2_Format == 7) {\r\n\t\t\t\t\t\tthrow RW2_Format;\r\n\t\r\n\t\t\t\t\t\t// Skatch of version 7 \r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\tvar pixels_per_block = bitsPerSample == 14 ? 9 : 10;\r\n\t\t\t\t\t\t\trowbytes = 0|(rawWidth / pixels_per_block * 16);\r\n\t\t\t\t\t\tfor (row = 0; row < rawHeight - 15; row += 16) {\r\n\t\t\t\t\t\t\tvar rowstoread = Math.min(16, rawHeight - row);\r\n\t\t\t\t\t\t\tvar readlen = rowbytes*rowstoread;\r\n\t\t\t\t\t\t\tbuffer = new Uint8Array(image.slice(bidx, bidx+readlen));\r\n\t\t\t\t\t\t\tvpos = 0;\r\n\t\t\t\t\t\t\tbidx += readlen; \r\n\t\t\t\t\t\t\ti = 0;\r\n\t\t\t\t\t\t\tfor (crow = 0; crow < rowstoread; crow++) {\r\n\t\t\t\t\t\t\t\tidx = (row + crow) * rawWidth;\r\n\t\t\t\t\t\t\t\tfor (col = 0; col <= rawWidth - pixels_per_block; col += pixels_per_block) {\r\n\t\t\t\t\t\t\t\t\tfor(j=0; j < pixels_per_block; j++) bytes[j] = buffer[i++];\r\n\t\t\t\t\t\t\t\t\tif (bitsPerSample == 12) {\r\n\t\t\t\t\t\t\t\t\t\tresult[idx ] = ((bytes[1] & 0xF) << 8) + bytes[0];\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 1] = 16 * bytes[2] + (bytes[1] >> 4);\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 2] = ((bytes[4] & 0xF) << 8) + bytes[3];\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 3] = 16 * bytes[5] + (bytes[4] >> 4);\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 4] = ((bytes[7] & 0xF) << 8) + bytes[6];\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 5] = 16 * bytes[8] + (bytes[7] >> 4);\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 6] = ((bytes[10] & 0xF) << 8) + bytes[9];\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 7] = 16 * bytes[11] + (bytes[10] >> 4);\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 8] = ((bytes[13] & 0xF) << 8) + bytes[12];\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 9] = 16 * bytes[14] + (bytes[13] >> 4);\r\n\t\t\t\t\t\t\t\t\t} else if (bitsPerSample == 14) {\r\n\t\t\t\t\t\t\t\t\t\tresult[idx] = bytes[0] + ((bytes[1] & 0x3F) << 8);\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 1] = (bytes[1] >> 6) + 4 * (bytes[2]) + ((bytes[3] & 0xF) << 10);\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 2] = (bytes[3] >> 4) + 16 * (bytes[4]) + ((bytes[5] & 3) << 12);\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 3] = ((bytes[5] & 0xFC) >> 2) + (bytes[6] << 6);\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 4] = bytes[7] + ((bytes[8] & 0x3F) << 8);\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 5] = (bytes[8] >> 6) + 4 * bytes[9] + ((bytes[10] & 0xF) << 10);\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 6] = (bytes[10] >> 4) + 16 * bytes[11] + ((bytes[12] & 3) << 12);\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 7] = ((bytes[12] & 0xFC) >> 2) + (bytes[13] << 6);\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + 8] = bytes[14] + ((bytes[15] & 0x3F) << 8);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t} \r\n\t\t\t\t\telse if(RW2_Format == 6) {\r\n\t\t\t\t\t\tvar is12bit = bitsPerSample == 12,\r\n\t\t\t\t\t\t\treadPageRw6Fn = is12bit ? readPageRw6_bps12 : readPageRW6,\r\n\t\t\t\t\t\t\tpixelsPerBlock = is12bit ? 14 : 11,\r\n\t\t\t\t\t\t\tpixelbase0 = is12bit ? 0x80 : 0x200,\r\n\t\t\t\t\t\t\tpixelbase_compare = is12bit ? 0x800 : 0x2000,\r\n\t\t\t\t\t\t\tspix_compare = is12bit ? 0x3fff : 0xffff,\r\n\t\t\t\t\t\t\tpixel_mask = is12bit ? 0xfff : 0x3fff,\r\n\t\t\t\t\t\t\tblocksperrow = rawWidth / pixelsPerBlock, \r\n\t\t\t\t\t\t\trowbytes = blocksperrow * 16,\r\n\t\t\t\t\t\t\tbufferSize = is12bit ? 18 : 14;\r\n\t\r\n\t\t\t\t\t\tfor (row = 0; row < rawHeight - 15; row += 16) {\r\n\t\t\t\t\t\t\tvar rowstoread = Math.min(16, rawHeight - row);\r\n\t\t\t\t\t\t\tvar readlen = rowbytes*rowstoread;\r\n\t\t\t\t\t\t\tbuffer = new Uint8Array(img_buffer, off+bidx, readlen);//new Uint8Array(image.slice(bidx, bidx+readlen));\r\n\t\t\t\t\t\t\tvpos = 0;\r\n\t\t\t\t\t\t\tbidx += readlen; \r\n\t\t\t\t\t\t\tfor (crow = 0, col = 0; crow < rowstoread; crow++, col = 0) {\r\n\t\t\t\t\t\t\t\tidx = (row + crow) * rawWidth;\r\n\t\t\t\t\t\t\t\tfor (var rblock = 0; rblock < blocksperrow; rblock++) {\r\n\t\t\t\t\t\t\t\t\treadPageRw6Fn();\r\n\t\t\t\t\t\t\t\t\tresetPredNonzeros();\r\n\t\t\t\t\t\t\t\t\tsh=0; pixel_base=0;\r\n\t\t\t\t\t\t\t\t\tfor (i = 0; i < pixelsPerBlock; i++){\r\n\t\t\t\t\t\t\t\t\t\tisOdd = i & 1;\r\n\t\t\t\t\t\t\t\t\t\tif (i % 3 == 2) {\r\n\t\t\t\t\t\t\t\t\t\t\tvar base = byte < bufferSize ? bytes[byte++] : 0;\r\n\t\t\t\t\t\t\t\t\t\t\tif (base == 3) base = 4;\r\n\t\t\t\t\t\t\t\t\t\t\tpixel_base = pixelbase0 << base;\r\n\t\t\t\t\t\t\t\t\t\t\tsh = 1 << base;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tvar epixel = byte < bufferSize ? bytes[byte++] : 0;\r\n\t\t\t\t\t\t\t\t\t\tif (pred[isOdd]) {\r\n\t\t\t\t\t\t\t\t\t\t\tepixel *= sh;\r\n\t\t\t\t\t\t\t\t\t\t\tif (pixel_base < pixelbase_compare && nonz[isOdd] > pixel_base)\r\n\t\t\t\t\t\t\t\t\t\t\t\tepixel += nonz[isOdd] - pixel_base;\r\n\t\t\t\t\t\t\t\t\t\t\tnonz[isOdd] = epixel;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tpred[isOdd] = epixel;\r\n\t\t\t\t\t\t\t\t\t\t\tif (epixel)\r\n\t\t\t\t\t\t\t\t\t\t\t\tnonz[isOdd] = epixel;\r\n\t\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\t\tepixel = nonz[isOdd];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tresult[idx + col++] = (epixel - 0xf) <= spix_compare ? (epixel - 0xf) & spix_compare : ((epixel + 0x7ffffff1) >> 0x1f) & pixel_mask;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} \r\n\t\t\t\t\telse if (RW2_Format == 5) { \r\n\t\t\t\t\t\tvar blockSize = bitsPerSample == 12 ? 10 : 9;\r\n\t\t\t\t\t\tfor (row = 0; row < rawHeight; row++) {\r\n\t\t\t\t\t\t\tfor (col = 0; col < rawWidth; col+=blockSize) {\r\n\t\t\t\t\t\t\t\tgetDataRaw(0);\r\n\t\t\t\t\t\t\t\t// Tuhle podminku pouziva i RW2_Format 7 \r\n\t\t\t\t\t\t\t\tif (bitsPerSample == 12) {\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = ((bytes[1] & 0xF) << 8) + bytes[0];\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = 16 * bytes[2] + (bytes[1] >> 4);\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = ((bytes[4] & 0xF) << 8) + bytes[3];\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = 16 * bytes[5] + (bytes[4] >> 4);\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = ((bytes[7] & 0xF) << 8) + bytes[6];\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = 16 * bytes[8] + (bytes[7] >> 4);\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = ((bytes[10] & 0xF) << 8) + bytes[9];\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = 16 * bytes[11] + (bytes[10] >> 4);\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = ((bytes[13] & 0xF) << 8) + bytes[12];\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = 16 * bytes[14] + (bytes[13] >> 4);\r\n\t\t\t\t\t\t\t\t} else if (bitsPerSample == 14) {\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = bytes[0] + ((bytes[1] & 0x3F) << 8);\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = (bytes[1] >> 6) + 4 * (bytes[2]) + ((bytes[3] & 0xF) << 10);\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = (bytes[3] >> 4) + 16 * (bytes[4]) + ((bytes[5] & 3) << 12);\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = ((bytes[5] & 0xFC) >> 2) + (bytes[6] << 6);\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = bytes[7] + ((bytes[8] & 0x3F) << 8);\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = (bytes[8] >> 6) + 4 * bytes[9] + ((bytes[10] & 0xF) << 10);\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = (bytes[10] >> 4) + 16 * bytes[11] + ((bytes[12] & 3) << 12);\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = ((bytes[12] & 0xFC) >> 2) + (bytes[13] << 6);\r\n\t\t\t\t\t\t\t\t\tresult[idx++] = bytes[14] + ((bytes[15] & 0x3F) << 8);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//console.log(result[1000000 - 1])\r\n\t\t\t\t\t} else if(RW2_Format == 4) {\r\n\t\t\t\t\t\tfor (row = 0; row < rawHeight; row++){\r\n\t\t\t\t\t\t\tfor(col = 0; col < rawWidth; col++){\r\n\t\t\t\t\t\t\t\ti = col % 14;\r\n\t\t\t\t\t\t\t\tisOdd = i & 1;\r\n\t\t\t\t\t\t\t\tif (i==0) resetPredNonzeros();\r\n\t\t\t\t\t\t\t\tif (i%3 == 2) \r\n\t\t\t\t\t\t\t\t\tsh = 4 >> (3 - getDataRaw(2));\r\n\t\t\t\t\t\t\t\tif (nonz[isOdd]) {\r\n\t\t\t\t\t\t\t\t\tj = getDataRaw(8);\r\n\t\t\t\t\t\t\t\t\tif(j != 0){\r\n\t\t\t\t\t\t\t\t\t\tpred[isOdd] -= 0x80 << sh;\r\n\t\t\t\t\t\t\t\t\t\tif (pred[isOdd] < 0 || sh == 4) \r\n\t\t\t\t\t\t\t\t\t\t\tpred[isOdd] &= ~((-1) << sh);\r\n\t\t\t\t\t\t\t\t\t\tpred[isOdd] += j << sh;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tnonz[isOdd] = getDataRaw(8);\r\n\t\t\t\t\t\t\t\t\tif(nonz[isOdd] || i > 11)\r\n\t\t\t\t\t\t\t\t\t\tpred[isOdd] = nonz[isOdd] << 4 | getDataRaw(4);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tresult[idx++] = pred[col & 1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} \r\n\t\t\t\t\telse throw RW2_Format;\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\tUTIF.decode._decodeVC5 = function(){var x=[1,0,1,0,2,2,1,1,3,7,1,2,5,25,1,3,6,48,1,4,6,54,1,5,7,111,1,8,7,99,1,6,7,105,12,0,7,107,1,7,8,209,20,0,8,212,1,9,8,220,1,10,9,393,1,11,9,394,32,0,9,416,1,12,9,427,1,13,10,887,1,18,10,784,1,14,10,790,1,15,10,835,60,0,10,852,1,16,10,885,1,17,11,1571,1,19,11,1668,1,20,11,1669,100,0,11,1707,1,21,11,1772,1,22,12,3547,1,29,12,3164,1,24,12,3166,1,25,12,3140,1,23,12,3413,1,26,12,3537,1,27,12,3539,1,28,13,7093,1,35,13,6283,1,30,13,6331,1,31,13,6335,180,0,13,6824,1,32,13,7072,1,33,13,7077,320,0,13,7076,1,34,14,12565,1,36,14,12661,1,37,14,12669,1,38,14,13651,1,39,14,14184,1,40,15,28295,1,46,15,28371,1,47,15,25320,1,42,15,25336,1,43,15,25128,1,41,15,27300,1,44,15,28293,1,45,16,50259,1,48,16,50643,1,49,16,50675,1,50,16,56740,1,53,16,56584,1,51,16,56588,1,52,17,113483,1,61,17,113482,1,60,17,101285,1,55,17,101349,1,56,17,109205,1,57,17,109207,1,58,17,100516,1,54,17,113171,1,59,18,202568,1,62,18,202696,1,63,18,218408,1,64,18,218412,1,65,18,226340,1,66,18,226356,1,67,18,226358,1,68,19,402068,1,69,19,405138,1,70,19,405394,1,71,19,436818,1,72,19,436826,1,73,19,452714,1,75,19,452718,1,76,19,452682,1,74,20,804138,1,77,20,810279,1,78,20,810790,1,79,20,873638,1,80,20,873654,1,81,20,905366,1,82,20,905430,1,83,20,905438,1,84,21,1608278,1,85,21,1620557,1,86,21,1621582,1,87,21,1621583,1,88,21,1747310,1,89,21,1810734,1,90,21,1810735,1,91,21,1810863,1,92,21,1810879,1,93,22,3621725,1,99,22,3621757,1,100,22,3241112,1,94,22,3494556,1,95,22,3494557,1,96,22,3494622,1,97,22,3494623,1,98,23,6482227,1,102,23,6433117,1,101,23,6989117,1,103,23,6989119,1,105,23,6989118,1,104,23,7243449,1,106,23,7243512,1,107,24,13978233,1,111,24,12964453,1,109,24,12866232,1,108,24,14486897,1,113,24,13978232,1,110,24,14486896,1,112,24,14487026,1,114,24,14487027,1,115,25,25732598,1,225,25,25732597,1,189,25,25732596,1,188,25,25732595,1,203,25,25732594,1,202,25,25732593,1,197,25,25732592,1,207,25,25732591,1,169,25,25732590,1,223,25,25732589,1,159,25,25732522,1,235,25,25732579,1,152,25,25732575,1,192,25,25732489,1,179,25,25732573,1,201,25,25732472,1,172,25,25732576,1,149,25,25732488,1,178,25,25732566,1,120,25,25732571,1,219,25,25732577,1,150,25,25732487,1,127,25,25732506,1,211,25,25732548,1,125,25,25732588,1,158,25,25732486,1,247,25,25732467,1,238,25,25732508,1,163,25,25732552,1,228,25,25732603,1,183,25,25732513,1,217,25,25732587,1,168,25,25732520,1,122,25,25732484,1,128,25,25732562,1,249,25,25732505,1,187,25,25732504,1,186,25,25732483,1,136,25,25928905,1,181,25,25732560,1,255,25,25732500,1,230,25,25732482,1,135,25,25732555,1,233,25,25732568,1,222,25,25732583,1,145,25,25732481,1,134,25,25732586,1,167,25,25732521,1,248,25,25732518,1,209,25,25732480,1,243,25,25732512,1,216,25,25732509,1,164,25,25732547,1,140,25,25732479,1,157,25,25732544,1,239,25,25732574,1,191,25,25732564,1,251,25,25732478,1,156,25,25732546,1,139,25,25732498,1,242,25,25732557,1,133,25,25732477,1,162,25,25732515,1,213,25,25732584,1,165,25,25732514,1,212,25,25732476,1,227,25,25732494,1,198,25,25732531,1,236,25,25732530,1,234,25,25732529,1,117,25,25732528,1,215,25,25732527,1,124,25,25732526,1,123,25,25732525,1,254,25,25732524,1,253,25,25732523,1,148,25,25732570,1,218,25,25732580,1,146,25,25732581,1,147,25,25732569,1,224,25,25732533,1,143,25,25732540,1,184,25,25732541,1,185,25,25732585,1,166,25,25732556,1,132,25,25732485,1,129,25,25732563,1,250,25,25732578,1,151,25,25732501,1,119,25,25732502,1,193,25,25732536,1,176,25,25732496,1,245,25,25732553,1,229,25,25732516,1,206,25,25732582,1,144,25,25732517,1,208,25,25732558,1,137,25,25732543,1,241,25,25732466,1,237,25,25732507,1,190,25,25732542,1,240,25,25732551,1,131,25,25732554,1,232,25,25732565,1,252,25,25732475,1,171,25,25732493,1,205,25,25732492,1,204,25,25732491,1,118,25,25732490,1,214,25,25928904,1,180,25,25732549,1,126,25,25732602,1,182,25,25732539,1,175,25,25732545,1,141,25,25732559,1,138,25,25732537,1,177,25,25732534,1,153,25,25732503,1,194,25,25732606,1,160,25,25732567,1,121,25,25732538,1,174,25,25732497,1,246,25,25732550,1,130,25,25732572,1,200,25,25732474,1,170,25,25732511,1,221,25,25732601,1,196,25,25732532,1,142,25,25732519,1,210,25,25732495,1,199,25,25732605,1,155,25,25732535,1,154,25,25732499,1,244,25,25732510,1,220,25,25732600,1,195,25,25732607,1,161,25,25732604,1,231,25,25732473,1,173,25,25732599,1,226,26,51465122,1,116,26,51465123,0,1],o,C,k,P=[3,3,3,3,2,2,2,1,1,1],V=24576,ar=16384,H=8192,az=ar|H;\r\n\tfunction d(t){var E=t[1],h=t[0][E>>>3]>>>7-(E&7)&1;t[1]++;return h}function ag(t,E){if(o==null){o={};\r\n\tfor(var h=0;h<x.length;h+=4)o[x[h+1]]=x.slice(h,h+4)}var L=d(t),g=o[L];while(g==null){L=L<<1|d(t);g=o[L]}var n=g[3];\r\n\tif(n!=0)n=d(t)==0?n:-n;E[0]=g[2];E[1]=n}function m(t,E){for(var h=0;h<E;h++){if((t&1)==1)t++;t=t>>>1}return t}function A(t,E){return t>>E}function O(t,E,h,L,g,n){E[h]=A(A(11*t[g]-4*t[g+n]+t[g+n+n]+4,3)+t[L],1);\r\n\tE[h+n]=A(A(5*t[g]+4*t[g+n]-t[g+n+n]+4,3)-t[L],1)}function J(t,E,h,L,g,n){var W=t[g-n]-t[g+n],j=t[g],$=t[L];\r\n\tE[h]=A(A(W+4,3)+j+$,1);E[h+n]=A(A(-W+4,3)+j-$,1)}function y(t,E,h,L,g,n){E[h]=A(A(5*t[g]+4*t[g-n]-t[g-n-n]+4,3)+t[L],1);\r\n\tE[h+n]=A(A(11*t[g]-4*t[g-n]+t[g-n-n]+4,3)-t[L],1)}function q(t){t=t<0?0:t>4095?4095:t;t=k[t]>>>2;return t}function av(t,E,h,L,g,n){L=new Uint16Array(L.buffer);\r\n\tvar W=Date.now(),j=UTIF._binBE,$=E+h,r,u,X,I,ax,a3,R,ai,aa,ap,ah,ae,aD,al,i,aE,T,B;E+=4;var a5=n[0]==1;\r\n\twhile(E<$){var S=j.readShort(t,E),s=j.readUshort(t,E+2);E+=4;if(S==12)r=s;else if(S==20)u=s;else if(S==21)X=s;\r\n\telse if(S==48)I=s;else if(S==53)ax=s;else if(S==35)a3=s;else if(S==62)R=s;else if(S==101)ai=s;else if(S==109)aa=s;\r\n\telse if(S==84)ap=s;else if(S==106)ah=s;else if(S==107)ae=s;else if(S==108)aD=s;else if(S==102)al=s;else if(S==104)i=s;\r\n\telse if(S==105)aE=s;else{var F=S<0?-S:S,D=F&65280,_=0;if(F&az){if(F&H){_=s&65535;_+=(F&255)<<16}else{_=s&65535}}if((F&V)==V){if(T==null){T=[];\r\n\tfor(var M=0;M<4;M++)T[M]=new Int16Array((u>>>1)*(X>>>1));B=new Int16Array((u>>>1)*(X>>>1));C=new Int16Array(1024);\r\n\tfor(var M=0;M<1024;M++){var aG=M-512,p=Math.abs(aG),r=Math.floor(768*p*p*p/(255*255*255))+p;C[M]=Math.sign(aG)*r}k=new Uint16Array(4096);\r\n\tvar aA=(1<<16)-1;for(var M=0;M<4096;M++){var at=M,a1=aA*(Math.pow(113,at/4095)-1)/112;k[M]=Math.min(a1,aA)}}var w=T[R],v=m(u,1+P[I]),N=m(X,1+P[I]);\r\n\tif(I==0){for(var b=0;b<N;b++)for(var G=0;G<v;G++){var c=E+(b*v+G)*2;w[b*(u>>>1)+G]=t[c]<<8|t[c+1]}}else{var a7=[t,E*8],a4=[],ay=0,aw=v*N,f=[0,0],Q=0,s=0;\r\n\twhile(ay<aw){ag(a7,f);Q=f[0];s=f[1];while(Q>0){a4[ay++]=s;Q--}}var l=(I-1)%3,aF=l!=1?v:0,a2=l!=0?N:0;\r\n\tfor(var b=0;b<N;b++){var af=(b+a2)*(u>>>1)+aF,au=b*v;for(var G=0;G<v;G++)w[af+G]=C[a4[au+G]+512]*ax}if(l==2){var i=u>>>1,an=v*2,a9=N*2;\r\n\tfor(var b=0;b<N;b++){for(var G=0;G<an;G++){var M=b*2*i+G,a=b*i+G,e=N*i+a;if(b==0)O(w,B,M,e,a,i);else if(b==N-1)y(w,B,M,e,a,i);\r\n\telse J(w,B,M,e,a,i)}}var Z=w;w=B;B=Z;for(var b=0;b<a9;b++){for(var G=0;G<v;G++){var M=b*i+2*G,a=b*i+G,e=v+a;\r\n\tif(G==0)O(w,B,M,e,a,1);else if(G==v-1)y(w,B,M,e,a,1);else J(w,B,M,e,a,1)}}var Z=w;w=B;B=Z;var aC=[],aB=2-~~((I-1)/3);\r\n\tfor(var K=0;K<3;K++)aC[K]=aa>>14-K*2&3;var a6=aC[aB];if(a6!=0)for(var b=0;b<a9;b++)for(var G=0;G<an;\r\n\tG++){var M=b*i+G;w[M]=w[M]<<a6}}}if(I==9&&R==3){var a8=T[0],ab=T[1],aq=T[2],as=T[3];for(var b=0;b<X;\r\n\tb+=2)for(var G=0;G<u;G+=2){var U=b*u+G,c=(b>>>1)*(u>>>1)+(G>>>1),z=a8[c],ao=ab[c]-2048,ak=aq[c]-2048,ad=as[c]-2048,aj=(ao<<1)+z,a0=(ak<<1)+z,aH=z+ad,am=z-ad;\r\n\tif(a5){L[U]=q(aH);L[U+1]=q(a0);L[U+u]=q(aj);L[U+u+1]=q(am)}else{L[U]=q(aj);L[U+1]=q(aH);L[U+u]=q(am);\r\n\tL[U+u+1]=q(a0)}}}E+=_*4}else if(F==16388){E+=_*4}else if(D==8192||D==8448||D==9216){}else throw F.toString(16)}}console.log(Date.now()-W)}return av}()\r\n\t\r\n\t\r\n\t\r\n\tUTIF.decode._decodeLogLuv32 = function(img, data, off, len, tgt, toff) {\r\n\t\tvar w = img.width, qw=w*4;\r\n\t\tvar io = 0, out = new Uint8Array(qw);\r\n\t\t\r\n\t\twhile(io<len) {\r\n\t\t\tvar oo=0;\r\n\t\t\twhile(oo<qw) {\r\n\t\t\t\tvar c = data[off+io]; io++;\r\n\t\t\t\tif(c<128) {       for(var j=0; j<c; j++) out[oo+j] = data[off+io+j];  oo+=c;  io+=c;  }\r\n\t\t\t\telse {  c=c-126;  for(var j=0; j<c; j++) out[oo+j] = data[off+io  ];  oo+=c;  io++ ;  }\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(var x=0; x<w; x++) {\r\n\t\t\t\ttgt[toff+0] = out[x];\r\n\t\t\t\ttgt[toff+1] = out[x+w];\r\n\t\t\t\ttgt[toff+2] = out[x+w*2];\r\n\t\t\t\ttgt[toff+4] = out[x+w*3];\r\n\t\t\t\ttoff+=6;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tUTIF.decode._ljpeg_diff = function(data, prm, huff) {\r\n\t\tvar getbithuff   = UTIF.decode._getbithuff;\r\n\t\tvar len, diff;\r\n\t\tlen  = getbithuff(data, prm, huff[0], huff);\r\n\t\tdiff = getbithuff(data, prm, len, 0);\r\n\t\tif ((diff & (1 << (len-1))) == 0)  diff -= (1 << len) - 1;\r\n\t\treturn diff;\r\n\t}\r\n\tUTIF.decode._decodeARW = function(img, inp, off, src_length, tgt, toff) {\r\n\t\tvar raw_width = img[\"t256\"][0], height=img[\"t257\"][0], tiff_bps=img[\"t258\"][0];\r\n\t\tvar bin=(img.isLE ? UTIF._binLE : UTIF._binBE);\r\n\t\t//console.log(raw_width, height, tiff_bps, raw_width*height, src_length);\r\n\t\tvar arw2 = (raw_width*height == src_length) || (raw_width*height*1.5 == src_length);\r\n\t\t//arw2 = true;\r\n\t\t//console.log(\"ARW2: \", arw2, raw_width*height, src_length, tgt.length);\r\n\t\tif(!arw2) {  //\"sony_arw_load_raw\"; // not arw2\r\n\t\t\theight+=8;\r\n\t\t\tvar prm = [off,0,0,0];\r\n\t\t\tvar huff = new Uint16Array(32770);\r\n\t\t\tvar tab = [ 0xf11,0xf10,0xe0f,0xd0e,0xc0d,0xb0c,0xa0b,0x90a,0x809,\r\n\t\t\t\t0x708,0x607,0x506,0x405,0x304,0x303,0x300,0x202,0x201 ];\r\n\t\t\tvar i, c, n, col, row, sum=0;\r\n\t\t\tvar ljpeg_diff = UTIF.decode._ljpeg_diff;\r\n\t\r\n\t\t\thuff[0] = 15;\r\n\t\t\tfor (n=i=0; i < 18; i++) {\r\n\t\t\t\tvar lim = 32768 >>> (tab[i] >>> 8);\r\n\t\t\t\tfor(var c=0; c<lim; c++) huff[++n] = tab[i];\r\n\t\t\t}\r\n\t\t\tfor (col = raw_width; col--; )\r\n\t\t\t\tfor (row=0; row < height+1; row+=2) {\r\n\t\t\t\t\tif (row == height) row = 1;\r\n\t\t\t\t\tsum += ljpeg_diff(inp, prm, huff);\r\n\t\t\t\t\tif (row < height) {\r\n\t\t\t\t\t\tvar clr =  (sum)&4095;\r\n\t\t\t\t\t\tUTIF.decode._putsF(tgt, (row*raw_width+col)*tiff_bps, clr<<(16-tiff_bps));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(raw_width*height*1.5==src_length) {\r\n\t\t\t//console.log(\"weird compression\");\r\n\t\t\tfor(var i=0; i<src_length; i+=3) {  var b0=inp[off+i+0], b1=inp[off+i+1], b2=inp[off+i+2];  \r\n\t\t\t\ttgt[toff+i]=(b1<<4)|(b0>>>4);  tgt[toff+i+1]=(b0<<4)|(b2>>>4);  tgt[toff+i+2]=(b2<<4)|(b1>>>4);  }\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar pix = new Uint16Array(16);\r\n\t\tvar row, col, val, max, min, imax, imin, sh, bit, i,    dp;\r\n\t\t\r\n\t\tvar data = new Uint8Array(raw_width+1);\r\n\t\tfor (row=0; row < height; row++) {\r\n\t\t\t//fread (data, 1, raw_width, ifp);\r\n\t\t\tfor(var j=0; j<raw_width; j++) data[j]=inp[off++];\r\n\t\t\tfor (dp=0, col=0; col < raw_width-30; dp+=16) {\r\n\t\t\t\tmax  = 0x7ff & (val = bin.readUint(data,dp));\r\n\t\t\t\tmin  = 0x7ff & (val >>> 11);\r\n\t\t\t\timax = 0x0f & (val >>> 22);\r\n\t\t\t\timin = 0x0f & (val >>> 26);\r\n\t\t\t\tfor (sh=0; sh < 4 && 0x80 << sh <= max-min; sh++);\r\n\t\t\t\tfor (bit=30, i=0; i < 16; i++)\r\n\t\t\t\t\tif      (i == imax) pix[i] = max;\r\n\t\t\t\t\telse if (i == imin) pix[i] = min;\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tpix[i] = ((bin.readUshort(data, dp+(bit >> 3)) >>> (bit & 7) & 0x7f) << sh) + min;\r\n\t\t\t\t\t\tif (pix[i] > 0x7ff) pix[i] = 0x7ff;\r\n\t\t\t\t\t\tbit += 7;\r\n\t\t\t\t\t}\r\n\t\t\t\tfor (i=0; i < 16; i++, col+=2) {\r\n\t\t\t\t\t//RAW(row,col) = curve[pix[i] << 1] >> 2;\r\n\t\t\t\t\tvar clr =  pix[i]<<1;   //clr = 0xffff;\r\n\t\t\t\t\tUTIF.decode._putsF(tgt, (row*raw_width+col)*tiff_bps, clr<<(16-tiff_bps));\r\n\t\t\t\t}\r\n\t\t\t\tcol -= col & 1 ? 1:31;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tUTIF.decode._decodeNikon = function(img,imgs, data, off, src_length, tgt, toff)\r\n\t{\r\n\t\tvar nikon_tree = [\r\n\t\t[ 0, 0,1,5,1,1,1,1,1,1,2,0,0,0,0,0,0,\t/* 12-bit lossy */\r\n\t\t  5,4,3,6,2,7,1,0,8,9,11,10,12 ],\r\n\t\t[ 0, 0,1,5,1,1,1,1,1,1,2,0,0,0,0,0,0,\t/* 12-bit lossy after split */\r\n\t\t  0x39,0x5a,0x38,0x27,0x16,5,4,3,2,1,0,11,12,12 ],\r\n\t\t[ 0, 0,1,4,2,3,1,2,0,0,0,0,0,0,0,0,0,  /* 12-bit lossless */\r\n\t\t  5,4,6,3,7,2,8,1,9,0,10,11,12 ],\r\n\t\t[ 0, 0,1,4,3,1,1,1,1,1,2,0,0,0,0,0,0,\t/* 14-bit lossy */\r\n\t\t  5,6,4,7,8,3,9,2,1,0,10,11,12,13,14 ],\r\n\t\t[ 0, 0,1,5,1,1,1,1,1,1,1,2,0,0,0,0,0,\t/* 14-bit lossy after split */\r\n\t\t  8,0x5c,0x4b,0x3a,0x29,7,6,5,4,3,2,1,0,13,14 ],\r\n\t\t[ 0, 0,1,4,2,2,3,1,2,0,0,0,0,0,0,0,0,\t/* 14-bit lossless */\r\n\t\t  7,6,8,5,9,4,10,3,11,12,2,0,1,13,14 ] ];\r\n\t\t  \r\n\t\tvar raw_width = img[\"t256\"][0], height=img[\"t257\"][0], tiff_bps=img[\"t258\"][0];\r\n\t\t\r\n\t\tvar tree = 0, split = 0;\r\n\t\tvar make_decoder = UTIF.decode._make_decoder;\r\n\t\tvar getbithuff   = UTIF.decode._getbithuff;\r\n\t\t\r\n\t\tvar mn = imgs[0].exifIFD.makerNote, md = mn[\"t150\"]?mn[\"t150\"]:mn[\"t140\"], mdo=0;  //console.log(mn,md);\r\n\t\t//console.log(md[0].toString(16), md[1].toString(16), tiff_bps);\r\n\t\tvar ver0 = md[mdo++], ver1 = md[mdo++];\r\n\t\tif (ver0 == 0x49 || ver1 == 0x58)  mdo+=2110;\r\n\t\tif (ver0 == 0x46) tree = 2;\r\n\t\tif (tiff_bps == 14) tree += 3;\r\n\t\t\r\n\t\tvar vpred = [[0,0],[0,0]], bin=(img.isLE ? UTIF._binLE : UTIF._binBE);\r\n\t\tfor(var i=0; i<2; i++) for(var j=0; j<2; j++) {  vpred[i][j] = bin.readShort(md,mdo);  mdo+=2;   }  // not sure here ... [i][j] or [j][i]\r\n\t\t//console.log(vpred);\r\n\t\t\r\n\t\t\r\n\t\tvar max = 1 << tiff_bps & 0x7fff, step=0;\r\n\t\tvar csize = bin.readShort(md,mdo);  mdo+=2;\r\n\t\tif (csize > 1) step = Math.floor(max / (csize-1));\r\n\t\tif (ver0 == 0x44 && ver1 == 0x20 && step > 0)  split = bin.readShort(md,562);\r\n\t\t\r\n\t\t\r\n\t\tvar i;\r\n\t\tvar row, col;\r\n\t\tvar len, shl, diff;\r\n\t\tvar min_v = 0;\r\n\t\tvar hpred = [0,0];\r\n\t\tvar huff = make_decoder(nikon_tree[tree]);\r\n\t\t\r\n\t\t//var g_input_offset=0, bitbuf=0, vbits=0, reset=0;\r\n\t\tvar prm = [off,0,0,0];\r\n\t\t//console.log(split);  split = 170;\r\n\t\t\r\n\t\tfor (min_v=row=0; row < height; row++) {\r\n\t\t\tif (split && row == split) {\r\n\t\t\t\t//free (huff);\r\n\t\t\t\thuff = make_decoder (nikon_tree[tree+1]);\r\n\t\t\t\t//max_v += (min_v = 16) << 1;\r\n\t\t\t}\r\n\t\t\tfor (col=0; col < raw_width; col++) {\r\n\t\t\t\ti = getbithuff(data,prm,huff[0],huff);\r\n\t\t\t\tlen = i  & 15;\r\n\t\t\t\tshl = i >>> 4;\r\n\t\t\t\tdiff = (((getbithuff(data,prm,len-shl,0) << 1) + 1) << shl) >>> 1;\r\n\t\t\t\tif ((diff & (1 << (len-1))) == 0)\r\n\t\t\t\t\tdiff -= (1 << len) - (shl==0?1:0);\r\n\t\t\t\tif (col < 2) hpred[col] = vpred[row & 1][col] += diff;\r\n\t\t\t\telse         hpred[col & 1] += diff;\r\n\t\t\t\t\r\n\t\t\t\tvar clr = Math.min(Math.max(hpred[col & 1],0),(1<<tiff_bps)-1);\r\n\t\t\t\tvar bti = (row*raw_width+col)*tiff_bps;  \r\n\t\t\t\tUTIF.decode._putsF(tgt, bti, clr<<(16-tiff_bps));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// put 16 bits\r\n\tUTIF.decode._putsF= function(dt, pos, val) {  val = val<<(8-(pos&7));  var o=(pos>>>3);  dt[o]|=val>>>16;  dt[o+1]|=val>>>8;  dt[o+2]|=val;  }\r\n\t\r\n\t\r\n\tUTIF.decode._getbithuff = function(data,prm,nbits, huff) {\r\n\t\tvar zero_after_ff = 0;\r\n\t\tvar get_byte = UTIF.decode._get_byte;\r\n\t\tvar c;\r\n\t  \r\n\t\tvar off=prm[0], bitbuf=prm[1], vbits=prm[2], reset=prm[3];\r\n\t\r\n\t\t//if (nbits > 25) return 0;\r\n\t\t//if (nbits <  0) return bitbuf = vbits = reset = 0;\r\n\t\tif (nbits == 0 || vbits < 0) return 0; \r\n\t\twhile (!reset && vbits < nbits && (c = data[off++]) != -1 &&\r\n\t\t\t!(reset = zero_after_ff && c == 0xff && data[off++])) {\r\n\t\t\t//console.log(\"byte read into c\");\r\n\t\t\tbitbuf = (bitbuf << 8) + c;\r\n\t\t\tvbits += 8;\r\n\t\t} \r\n\t\tc = (bitbuf << (32-vbits)) >>> (32-nbits);\r\n\t\tif (huff) {\r\n\t\t\tvbits -= huff[c+1] >>> 8;  //console.log(c, huff[c]>>8);\r\n\t\t\tc =  huff[c+1]&255;\r\n\t\t} else\r\n\t\t\tvbits -= nbits;\r\n\t\tif (vbits < 0) throw \"e\";\r\n\t  \r\n\t\tprm[0]=off;  prm[1]=bitbuf;  prm[2]=vbits;  prm[3]=reset;\r\n\t  \r\n\t\treturn c;\r\n\t}\r\n\t\r\n\tUTIF.decode._make_decoder = function(source) {\r\n\t\tvar max, len, h, i, j;\r\n\t\tvar huff = [];\r\n\t\r\n\t\tfor (max=16; max!=0 && !source[max]; max--);\r\n\t\tvar si=17;\r\n\t\t\r\n\t\thuff[0] = max;\r\n\t\tfor (h=len=1; len <= max; len++)\r\n\t\t\tfor (i=0; i < source[len]; i++, ++si)\r\n\t\t\t\tfor (j=0; j < 1 << (max-len); j++)\r\n\t\t\t\t\tif (h <= 1 << max)\r\n\t\t\t\t\t\thuff[h++] = (len << 8) | source[si];\r\n\t\treturn huff;\r\n\t}\r\n\t\r\n\tUTIF.decode._decodeNewJPEG = function(img, data, off, len, tgt, toff)\r\n\t{\r\n\t\tlen = Math.min(len, data.length-off);\r\n\t\tvar tables = img[\"t347\"], tlen = tables ? tables.length : 0, buff = new Uint8Array(tlen + len);\r\n\t\t\r\n\t\tif (tables) {\r\n\t\t\tvar SOI = 216, EOI = 217, boff = 0;\r\n\t\t\tfor (var i=0; i<(tlen-1); i++)\r\n\t\t\t{\r\n\t\t\t\t// Skip EOI marker from JPEGTables\r\n\t\t\t\tif (tables[i]==255 && tables[i+1]==EOI) break;\r\n\t\t\t\tbuff[boff++] = tables[i];\r\n\t\t\t}\r\n\t\r\n\t\t\t// Skip SOI marker from data\r\n\t\t\tvar byte1 = data[off], byte2 = data[off + 1];\r\n\t\t\tif (byte1!=255 || byte2!=SOI)\r\n\t\t\t{\r\n\t\t\t\tbuff[boff++] = byte1;\r\n\t\t\t\tbuff[boff++] = byte2;\r\n\t\t\t}\r\n\t\t\tfor (var i=2; i<len; i++) buff[boff++] = data[off+i];\r\n\t\t}\r\n\t\telse for (var i=0; i<len; i++) buff[i] = data[off+i];\r\n\t\r\n\t\tif(img[\"t262\"][0]==32803 || (img[\"t259\"][0]==7 && img[\"t262\"][0]==34892)) // lossless JPEG (used in DNG files)\r\n\t\t{\r\n\t\t\tvar bps = img[\"t258\"][0];//, dcdr = new LosslessJpegDecoder();\r\n\t\t\t//var time = Date.now();\r\n\t\t\tvar out = UTIF.LosslessJpegDecode(buff), olen=out.length;  //console.log(olen);\r\n\t\t\t//var out = ULLJPG(buff), olen=out.length;  //console.log(olen);\r\n\t\t\t//console.log(Date.now()-time);\r\n\t\t\t\r\n\t\t\tif(false) {}\r\n\t\t\telse if(bps==16) {\r\n\t\t\t\tif(img.isLE) for(var i=0; i<olen; i++ ) {  tgt[toff+(i<<1)] = (out[i]&255);  tgt[toff+(i<<1)+1] = (out[i]>>>8);  }\r\n\t\t\t\telse         for(var i=0; i<olen; i++ ) {  tgt[toff+(i<<1)] = (out[i]>>>8);  tgt[toff+(i<<1)+1] = (out[i]&255);  }\r\n\t\t\t}\r\n\t\t\telse if(bps==14 || bps==12 || bps==10) {  // 4 * 14 == 56 == 7 * 8\r\n\t\t\t\tvar rst = 16-bps;\r\n\t\t\t\tfor(var i=0; i<olen; i++) UTIF.decode._putsF(tgt, i*bps, out[i]<<rst);\r\n\t\t\t}\r\n\t\t\telse if(bps==8) {\r\n\t\t\t\tfor(var i=0; i<olen; i++) tgt[toff+i]=out[i];\r\n\t\t\t}\r\n\t\t\telse throw new Error(\"unsupported bit depth \"+bps);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar parser = new UTIF.JpegDecoder();  parser.parse(buff);\r\n\t\t\tvar decoded = parser.getData({\"width\":parser.width,\"height\":parser.height,\"forceRGB\":true,\"isSourcePDF\":false});\r\n\t\t\tfor (var i=0; i<decoded.length; i++) tgt[toff + i] = decoded[i];\r\n\t\t}\r\n\t\r\n\t\t// PhotometricInterpretation is 6 (YCbCr) for JPEG, but after decoding we populate data in\r\n\t\t// RGB format, so updating the tag value\r\n\t\tif(img[\"t262\"][0] == 6)  img[\"t262\"][0] = 2;\r\n\t}\r\n\t\r\n\tUTIF.decode._decodeOldJPEGInit = function(img, data, off, len)\r\n\t{\r\n\t\tvar SOI = 216, EOI = 217, DQT = 219, DHT = 196, DRI = 221, SOF0 = 192, SOS = 218;\r\n\t\tvar joff = 0, soff = 0, tables, sosMarker, isTiled = false, i, j, k;\r\n\t\tvar jpgIchgFmt    = img[\"t513\"], jifoff = jpgIchgFmt ? jpgIchgFmt[0] : 0;\r\n\t\tvar jpgIchgFmtLen = img[\"t514\"], jiflen = jpgIchgFmtLen ? jpgIchgFmtLen[0] : 0;\r\n\t\tvar soffTag       = img[\"t324\"] || img[\"t273\"] || jpgIchgFmt;\r\n\t\tvar ycbcrss       = img[\"t530\"], ssx = 0, ssy = 0;\r\n\t\tvar spp           = img[\"t277\"]?img[\"t277\"][0]:1;\r\n\t\tvar jpgresint     = img[\"t515\"];\r\n\t\r\n\t\tif(soffTag)\r\n\t\t{\r\n\t\t\tsoff = soffTag[0];\r\n\t\t\tisTiled = (soffTag.length > 1);\r\n\t\t}\r\n\t\r\n\t\tif(!isTiled)\r\n\t\t{\r\n\t\t\tif(data[off]==255 && data[off+1]==SOI) return { jpegOffset: off };\r\n\t\t\tif(jpgIchgFmt!=null)\r\n\t\t\t{\r\n\t\t\t\tif(data[off+jifoff]==255 && data[off+jifoff+1]==SOI) joff = off+jifoff;\r\n\t\t\t\telse log(\"JPEGInterchangeFormat does not point to SOI\");\r\n\t\r\n\t\t\t\tif(jpgIchgFmtLen==null) log(\"JPEGInterchangeFormatLength field is missing\");\r\n\t\t\t\telse if(jifoff >= soff || (jifoff+jiflen) <= soff) log(\"JPEGInterchangeFormatLength field value is invalid\");\r\n\t\r\n\t\t\t\tif(joff != null) return { jpegOffset: joff };\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tif(ycbcrss!=null) {  ssx = ycbcrss[0];  ssy = ycbcrss[1];  }\r\n\t\r\n\t\tif(jpgIchgFmt!=null)\r\n\t\t\tif(jpgIchgFmtLen!=null)\r\n\t\t\t\tif(jiflen >= 2 && (jifoff+jiflen) <= soff)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(data[off+jifoff+jiflen-2]==255 && data[off+jifoff+jiflen-1]==SOI) tables = new Uint8Array(jiflen-2);\r\n\t\t\t\t\telse tables = new Uint8Array(jiflen);\r\n\t\r\n\t\t\t\t\tfor(i=0; i<tables.length; i++) tables[i] = data[off+jifoff+i];\r\n\t\t\t\t\tlog(\"Incorrect JPEG interchange format: using JPEGInterchangeFormat offset to derive tables\");\r\n\t\t\t\t}\r\n\t\t\t\telse log(\"JPEGInterchangeFormat+JPEGInterchangeFormatLength > offset to first strip or tile\");\r\n\t\r\n\t\tif(tables == null)\r\n\t\t{\r\n\t\t\tvar ooff = 0, out = [];\r\n\t\t\tout[ooff++] = 255; out[ooff++] = SOI;\r\n\t\r\n\t\t\tvar qtables = img[\"t519\"];\r\n\t\t\tif(qtables==null) throw new Error(\"JPEGQTables tag is missing\");\r\n\t\t\tfor(i=0; i<qtables.length; i++)\r\n\t\t\t{\r\n\t\t\t\tout[ooff++] = 255; out[ooff++] = DQT; out[ooff++] = 0; out[ooff++] = 67; out[ooff++] = i;\r\n\t\t\t\tfor(j=0; j<64; j++) out[ooff++] = data[off+qtables[i]+j];\r\n\t\t\t}\r\n\t\r\n\t\t\tfor(k=0; k<2; k++)\r\n\t\t\t{\r\n\t\t\t\tvar htables = img[(k == 0) ? \"t520\" : \"t521\"];\r\n\t\t\t\tif(htables==null) throw new Error(((k == 0) ? \"JPEGDCTables\" : \"JPEGACTables\") + \" tag is missing\");\r\n\t\t\t\tfor(i=0; i<htables.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tout[ooff++] = 255; out[ooff++] = DHT;\r\n\t\t\t\t\t//out[ooff++] = 0; out[ooff++] = 67; out[ooff++] = i;\r\n\t\t\t\t\tvar nc = 19;\r\n\t\t\t\t\tfor(j=0; j<16; j++) nc += data[off+htables[i]+j];\r\n\t\r\n\t\t\t\t\tout[ooff++] = (nc >>> 8); out[ooff++] = nc & 255;\r\n\t\t\t\t\tout[ooff++] = (i | (k << 4));\r\n\t\t\t\t\tfor(j=0; j<16; j++) out[ooff++] = data[off+htables[i]+j];\r\n\t\t\t\t\tfor(j=0; j<nc; j++) out[ooff++] = data[off+htables[i]+16+j];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tout[ooff++] = 255; out[ooff++] = SOF0;\r\n\t\t\tout[ooff++] = 0;  out[ooff++] = 8 + 3*spp;  out[ooff++] = 8;\r\n\t\t\tout[ooff++] = (img.height >>> 8) & 255;  out[ooff++] = img.height & 255;\r\n\t\t\tout[ooff++] = (img.width  >>> 8) & 255;  out[ooff++] = img.width  & 255;\r\n\t\t\tout[ooff++] = spp;\r\n\t\t\tif(spp==1) {  out[ooff++] = 1;  out[ooff++] = 17;  out[ooff++] = 0;  }\r\n\t\t\telse for(i=0; i<3; i++)\r\n\t\t\t{\r\n\t\t\t\tout[ooff++] = i + 1;\r\n\t\t\t\tout[ooff++] = (i != 0) ? 17 : (((ssx & 15) << 4) | (ssy & 15));\r\n\t\t\t\tout[ooff++] = i;\r\n\t\t\t}\r\n\t\r\n\t\t\tif(jpgresint!=null && jpgresint[0]!=0)\r\n\t\t\t{\r\n\t\t\t\tout[ooff++] = 255;  out[ooff++] = DRI;  out[ooff++] = 0;  out[ooff++] = 4;\r\n\t\t\t\tout[ooff++] = (jpgresint[0] >>> 8) & 255;\r\n\t\t\t\tout[ooff++] = jpgresint[0] & 255;\r\n\t\t\t}\r\n\t\r\n\t\t\ttables = new Uint8Array(out);\r\n\t\t}\r\n\t\r\n\t\tvar sofpos = -1;\r\n\t\ti = 0;\r\n\t\twhile(i < (tables.length - 1)) {\r\n\t\t\tif(tables[i]==255 && tables[i+1]==SOF0) {  sofpos = i; break;  }\r\n\t\t\ti++;\r\n\t\t}\r\n\t\r\n\t\tif(sofpos == -1)\r\n\t\t{\r\n\t\t\tvar tmptab = new Uint8Array(tables.length + 10 + 3*spp);\r\n\t\t\ttmptab.set(tables);\r\n\t\t\tvar tmpoff = tables.length;\r\n\t\t\tsofpos = tables.length;\r\n\t\t\ttables = tmptab;\r\n\t\r\n\t\t\ttables[tmpoff++] = 255; tables[tmpoff++] = SOF0;\r\n\t\t\ttables[tmpoff++] = 0;  tables[tmpoff++] = 8 + 3*spp;  tables[tmpoff++] = 8;\r\n\t\t\ttables[tmpoff++] = (img.height >>> 8) & 255;  tables[tmpoff++] = img.height & 255;\r\n\t\t\ttables[tmpoff++] = (img.width  >>> 8) & 255;  tables[tmpoff++] = img.width  & 255;\r\n\t\t\ttables[tmpoff++] = spp;\r\n\t\t\tif(spp==1) {  tables[tmpoff++] = 1;  tables[tmpoff++] = 17;  tables[tmpoff++] = 0;  }\r\n\t\t\telse for(i=0; i<3; i++)\r\n\t\t\t{\r\n\t\t\t\ttables[tmpoff++] = i + 1;\r\n\t\t\t\ttables[tmpoff++] = (i != 0) ? 17 : (((ssx & 15) << 4) | (ssy & 15));\r\n\t\t\t\ttables[tmpoff++] = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tif(data[soff]==255 && data[soff+1]==SOS)\r\n\t\t{\r\n\t\t\tvar soslen = (data[soff+2]<<8) | data[soff+3];\r\n\t\t\tsosMarker = new Uint8Array(soslen+2);\r\n\t\t\tsosMarker[0] = data[soff];  sosMarker[1] = data[soff+1]; sosMarker[2] = data[soff+2];  sosMarker[3] = data[soff+3];\r\n\t\t\tfor(i=0; i<(soslen-2); i++) sosMarker[i+4] = data[soff+i+4];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsosMarker = new Uint8Array(2 + 6 + 2*spp);\r\n\t\t\tvar sosoff = 0;\r\n\t\t\tsosMarker[sosoff++] = 255;  sosMarker[sosoff++] = SOS;\r\n\t\t\tsosMarker[sosoff++] = 0;  sosMarker[sosoff++] = 6 + 2*spp;  sosMarker[sosoff++] = spp;\r\n\t\t\tif(spp==1) {  sosMarker[sosoff++] = 1;  sosMarker[sosoff++] = 0;  }\r\n\t\t\telse for(i=0; i<3; i++)\r\n\t\t\t{\r\n\t\t\t\tsosMarker[sosoff++] = i+1;  sosMarker[sosoff++] = (i << 4) | i;\r\n\t\t\t}\r\n\t\t\tsosMarker[sosoff++] = 0;  sosMarker[sosoff++] = 63;  sosMarker[sosoff++] = 0;\r\n\t\t}\r\n\t\r\n\t\treturn { jpegOffset: off, tables: tables, sosMarker: sosMarker, sofPosition: sofpos };\r\n\t}\r\n\t\r\n\tUTIF.decode._decodeOldJPEG = function(img, data, off, len, tgt, toff)\r\n\t{\r\n\t\tvar i, dlen, tlen, buff, buffoff;\r\n\t\tvar jpegData = UTIF.decode._decodeOldJPEGInit(img, data, off, len);\r\n\t\r\n\t\tif(jpegData.jpegOffset!=null)\r\n\t\t{\r\n\t\t\tdlen = off+len-jpegData.jpegOffset;\r\n\t\t\tbuff = new Uint8Array(dlen);\r\n\t\t\tfor(i=0; i<dlen; i++) buff[i] = data[jpegData.jpegOffset+i];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\ttlen = jpegData.tables.length;\r\n\t\t\tbuff = new Uint8Array(tlen + jpegData.sosMarker.length + len + 2);\r\n\t\t\tbuff.set(jpegData.tables);\r\n\t\t\tbuffoff = tlen;\r\n\t\r\n\t\t\tbuff[jpegData.sofPosition+5] = (img.height >>> 8) & 255;  buff[jpegData.sofPosition+6] = img.height & 255;\r\n\t\t\tbuff[jpegData.sofPosition+7] = (img.width  >>> 8) & 255;  buff[jpegData.sofPosition+8] = img.width  & 255;\r\n\t\r\n\t\t\tif(data[off]!=255 || data[off+1]!=SOS)\r\n\t\t\t{\r\n\t\t\t\tbuff.set(jpegData.sosMarker, buffoff);\r\n\t\t\t\tbuffoff += sosMarker.length;\r\n\t\t\t}\r\n\t\t\tfor(i=0; i<len; i++) buff[buffoff++] = data[off+i];\r\n\t\t\tbuff[buffoff++] = 255;  buff[buffoff++] = EOI;\r\n\t\t}\r\n\t\r\n\t\tvar parser = new UTIF.JpegDecoder();  parser.parse(buff);\r\n\t\tvar decoded = parser.getData({\"width\":parser.width,\"height\":parser.height,\"forceRGB\":true,\"isSourcePDF\":false});\r\n\t\tfor (var i=0; i<decoded.length; i++) tgt[toff + i] = decoded[i];\r\n\t\r\n\t\t// PhotometricInterpretation is 6 (YCbCr) for JPEG, but after decoding we populate data in\r\n\t\t// RGB format, so updating the tag value\r\n\t\tif(img[\"t262\"] && img[\"t262\"][0] == 6)  img[\"t262\"][0] = 2;\r\n\t}\r\n\t\r\n\tUTIF.decode._decodePackBits = function(data, off, len, tgt, toff)\r\n\t{\r\n\t\tvar sa = new Int8Array(data.buffer), ta = new Int8Array(tgt.buffer), lim = off+len;\r\n\t\twhile(off<lim)\r\n\t\t{\r\n\t\t\tvar n = sa[off];  off++;\r\n\t\t\tif(n>=0  && n<128)    for(var i=0; i< n+1; i++) {  ta[toff]=sa[off];  toff++;  off++;   }\r\n\t\t\tif(n>=-127 && n<0) {  for(var i=0; i<-n+1; i++) {  ta[toff]=sa[off];  toff++;           }  off++;  }\r\n\t\t}\r\n\t\treturn toff;\r\n\t}\r\n\t\r\n\tUTIF.decode._decodeThunder = function(data, off, len, tgt, toff)\r\n\t{\r\n\t\tvar d2 = [ 0, 1, 0, -1 ],  d3 = [ 0, 1, 2, 3, 0, -3, -2, -1 ];\r\n\t\tvar lim = off+len, qoff = toff*2, px = 0;\r\n\t\twhile(off<lim)\r\n\t\t{\r\n\t\t\tvar b = data[off], msk = (b>>>6), n = (b&63);  off++;\r\n\t\t\tif(msk==3) { px=(n&15);  tgt[qoff>>>1] |= (px<<(4*(1-qoff&1)));  qoff++;   }\r\n\t\t\tif(msk==0) for(var i=0; i<n; i++) {  tgt[qoff>>>1] |= (px<<(4*(1-qoff&1)));  qoff++;   }\r\n\t\t\tif(msk==2) for(var i=0; i<2; i++) {  var d=(n>>>(3*(1-i)))&7;  if(d!=4) { px+=d3[d];  tgt[qoff>>>1] |= (px<<(4*(1-qoff&1)));  qoff++; }  }\r\n\t\t\tif(msk==1) for(var i=0; i<3; i++) {  var d=(n>>>(2*(2-i)))&3;  if(d!=2) { px+=d2[d];  tgt[qoff>>>1] |= (px<<(4*(1-qoff&1)));  qoff++; }  }\r\n\t\t}\r\n\t}\r\n\t\r\n\tUTIF.decode._dmap = { \"1\":0,\"011\":1,\"000011\":2,\"0000011\":3, \"010\":-1,\"000010\":-2,\"0000010\":-3  };\r\n\tUTIF.decode._lens = ( function()\r\n\t{\r\n\t\tvar addKeys = function(lens, arr, i0, inc) {  for(var i=0; i<arr.length; i++) lens[arr[i]] = i0 + i*inc;  }\r\n\t\r\n\t\tvar termW = \"00110101,000111,0111,1000,1011,1100,1110,1111,10011,10100,00111,01000,001000,000011,110100,110101,\" // 15\r\n\t\t+ \"101010,101011,0100111,0001100,0001000,0010111,0000011,0000100,0101000,0101011,0010011,0100100,0011000,00000010,00000011,00011010,\" // 31\r\n\t\t+ \"00011011,00010010,00010011,00010100,00010101,00010110,00010111,00101000,00101001,00101010,00101011,00101100,00101101,00000100,00000101,00001010,\" // 47\r\n\t\t+ \"00001011,01010010,01010011,01010100,01010101,00100100,00100101,01011000,01011001,01011010,01011011,01001010,01001011,00110010,00110011,00110100\";\r\n\t\r\n\t\tvar termB = \"0000110111,010,11,10,011,0011,0010,00011,000101,000100,0000100,0000101,0000111,00000100,00000111,000011000,\" // 15\r\n\t\t+ \"0000010111,0000011000,0000001000,00001100111,00001101000,00001101100,00000110111,00000101000,00000010111,00000011000,000011001010,000011001011,000011001100,000011001101,000001101000,000001101001,\" // 31\r\n\t\t+ \"000001101010,000001101011,000011010010,000011010011,000011010100,000011010101,000011010110,000011010111,000001101100,000001101101,000011011010,000011011011,000001010100,000001010101,000001010110,000001010111,\" // 47\r\n\t\t+ \"000001100100,000001100101,000001010010,000001010011,000000100100,000000110111,000000111000,000000100111,000000101000,000001011000,000001011001,000000101011,000000101100,000001011010,000001100110,000001100111\";\r\n\t\r\n\t\tvar makeW = \"11011,10010,010111,0110111,00110110,00110111,01100100,01100101,01101000,01100111,011001100,011001101,011010010,011010011,011010100,011010101,011010110,\"\r\n\t\t+ \"011010111,011011000,011011001,011011010,011011011,010011000,010011001,010011010,011000,010011011\";\r\n\t\r\n\t\tvar makeB = \"0000001111,000011001000,000011001001,000001011011,000000110011,000000110100,000000110101,0000001101100,0000001101101,0000001001010,0000001001011,0000001001100,\"\r\n\t\t+ \"0000001001101,0000001110010,0000001110011,0000001110100,0000001110101,0000001110110,0000001110111,0000001010010,0000001010011,0000001010100,0000001010101,0000001011010,\"\r\n\t\t+ \"0000001011011,0000001100100,0000001100101\";\r\n\t\r\n\t\tvar makeA = \"00000001000,00000001100,00000001101,000000010010,000000010011,000000010100,000000010101,000000010110,000000010111,000000011100,000000011101,000000011110,000000011111\";\r\n\t\r\n\t\ttermW = termW.split(\",\");  termB = termB.split(\",\");  makeW = makeW.split(\",\");  makeB = makeB.split(\",\");  makeA = makeA.split(\",\");\r\n\t\r\n\t\tvar lensW = {}, lensB = {};\r\n\t\taddKeys(lensW, termW, 0, 1);  addKeys(lensW, makeW, 64,64);  addKeys(lensW, makeA, 1792,64);\r\n\t\taddKeys(lensB, termB, 0, 1);  addKeys(lensB, makeB, 64,64);  addKeys(lensB, makeA, 1792,64);\r\n\t\treturn [lensW, lensB];\r\n\t} )();\r\n\t\r\n\tUTIF.decode._decodeG4 = function(data, off, slen, tgt, toff, w, fo)\r\n\t{\r\n\t\tvar U = UTIF.decode, boff=off<<3, len=0, wrd=\"\";\t// previous starts with 1\r\n\t\tvar line=[], pline=[];  for(var i=0; i<w; i++) pline.push(0);  pline=U._makeDiff(pline);\r\n\t\tvar a0=0, a1=0, a2=0, b1=0, b2=0, clr=0;\r\n\t\tvar y=0, mode=\"\", toRead=0;\r\n\t\tvar bipl = Math.ceil(w/8)*8;\r\n\t\r\n\t\twhile((boff>>>3)<off+slen)\r\n\t\t{\r\n\t\t\tb1 = U._findDiff(pline, a0+(a0==0?0:1), 1-clr), b2 = U._findDiff(pline, b1, clr);\t// could be precomputed\r\n\t\t\tvar bit =0;\r\n\t\t\tif(fo==1) bit = (data[boff>>>3]>>>(7-(boff&7)))&1;\r\n\t\t\tif(fo==2) bit = (data[boff>>>3]>>>(  (boff&7)))&1;\r\n\t\t\tboff++;  wrd+=bit;\r\n\t\t\tif(mode==\"H\")\r\n\t\t\t{\r\n\t\t\t\tif(U._lens[clr][wrd]!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar dl=U._lens[clr][wrd];  wrd=\"\";  len+=dl;\r\n\t\t\t\t\tif(dl<64) {  U._addNtimes(line,len,clr);  a0+=len;  clr=1-clr;  len=0;  toRead--;  if(toRead==0) mode=\"\";  }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(wrd==\"0001\")  {  wrd=\"\";  U._addNtimes(line,b2-a0,clr);  a0=b2;   }\r\n\t\t\t\tif(wrd==\"001\" )  {  wrd=\"\";  mode=\"H\";  toRead=2;  }\r\n\t\t\t\tif(U._dmap[wrd]!=null) {  a1 = b1+U._dmap[wrd];  U._addNtimes(line, a1-a0, clr);  a0=a1;  wrd=\"\";  clr=1-clr;  }\r\n\t\t\t}\r\n\t\t\tif(line.length==w && mode==\"\")\r\n\t\t\t{\r\n\t\t\t\tU._writeBits(line, tgt, toff*8+y*bipl);\r\n\t\t\t\tclr=0;  y++;  a0=0;\r\n\t\t\t\tpline=U._makeDiff(line);  line=[];\r\n\t\t\t}\r\n\t\t\t//if(wrd.length>150) {  log(wrd);  break;  throw \"e\";  }\r\n\t\t}\r\n\t}\r\n\t\r\n\tUTIF.decode._findDiff = function(line, x, clr) {  for(var i=0; i<line.length; i+=2) if(line[i]>=x && line[i+1]==clr)  return line[i];  }\r\n\t\r\n\tUTIF.decode._makeDiff = function(line)\r\n\t{\r\n\t\tvar out = [];  if(line[0]==1) out.push(0,1);\r\n\t\tfor(var i=1; i<line.length; i++) if(line[i-1]!=line[i]) out.push(i, line[i]);\r\n\t\tout.push(line.length,0,line.length,1);  return out;\r\n\t}\r\n\t\r\n\tUTIF.decode._decodeG2 = function(data, off, slen, tgt, toff, w, fo)\r\n\t{\r\n\t\tvar U = UTIF.decode, boff=off<<3, len=0, wrd=\"\";\r\n\t\tvar line=[];\r\n\t\tvar clr = 0;\r\n\t\tvar y=0;\r\n\t\tvar bipl = Math.ceil(w/8)*8;\r\n\t\t\r\n\t\twhile((boff>>>3)<off+slen) {\r\n\t\t\tvar bit =0;\r\n\t\t\tif(fo==1) bit = (data[boff>>>3]>>>(7-(boff&7)))&1;\r\n\t\t\tif(fo==2) bit = (data[boff>>>3]>>>(  (boff&7)))&1;\r\n\t\t\tboff++;  wrd+=bit;\r\n\t\t\t\r\n\t\t\tlen = U._lens[clr][wrd];\r\n\t\t\tif(len!=null) {\r\n\t\t\t\tU._addNtimes(line,len,clr);  wrd=\"\";\r\n\t\t\t\tif(len<64) clr = 1-clr;  \r\n\t\t\t\tif(line.length==w) {  U._writeBits(line, tgt, toff*8+y*bipl);  line=[];  y++;  clr=0;  if((boff&7)!=0) boff+=8-(boff&7);  if(len>=64) boff+=8;   }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tUTIF.decode._decodeG3 = function(data, off, slen, tgt, toff, w, fo, twoDim)\r\n\t{\r\n\t\tvar U = UTIF.decode, boff=off<<3, len=0, wrd=\"\";\r\n\t\tvar line=[], pline=[];  for(var i=0; i<w; i++) line.push(0);\r\n\t\tvar a0=0, a1=0, a2=0, b1=0, b2=0, clr=0;\r\n\t\tvar y=-1, mode=\"\", toRead=0, is1D=true;\r\n\t\tvar bipl = Math.ceil(w/8)*8;\r\n\t\twhile((boff>>>3)<off+slen)\r\n\t\t{\r\n\t\t\tb1 = U._findDiff(pline, a0+(a0==0?0:1), 1-clr), b2 = U._findDiff(pline, b1, clr);\t// could be precomputed\r\n\t\t\tvar bit =0;\r\n\t\t\tif(fo==1) bit = (data[boff>>>3]>>>(7-(boff&7)))&1;\r\n\t\t\tif(fo==2) bit = (data[boff>>>3]>>>(  (boff&7)))&1;\r\n\t\t\tboff++;  wrd+=bit;\r\n\t\r\n\t\t\tif(is1D)\r\n\t\t\t{\r\n\t\t\t\tif(U._lens[clr][wrd]!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar dl=U._lens[clr][wrd];  wrd=\"\";  len+=dl;\r\n\t\t\t\t\tif(dl<64) {  U._addNtimes(line,len,clr);  clr=1-clr;  len=0;  }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(mode==\"H\")\r\n\t\t\t\t{\r\n\t\t\t\t\tif(U._lens[clr][wrd]!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar dl=U._lens[clr][wrd];  wrd=\"\";  len+=dl;\r\n\t\t\t\t\t\tif(dl<64) {  U._addNtimes(line,len,clr);  a0+=len;  clr=1-clr;  len=0;  toRead--;  if(toRead==0) mode=\"\";  }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(wrd==\"0001\")  {  wrd=\"\";  U._addNtimes(line,b2-a0,clr);  a0=b2;   }\r\n\t\t\t\t\tif(wrd==\"001\" )  {  wrd=\"\";  mode=\"H\";  toRead=2;  }\r\n\t\t\t\t\tif(U._dmap[wrd]!=null) {  a1 = b1+U._dmap[wrd];  U._addNtimes(line, a1-a0, clr);  a0=a1;  wrd=\"\";  clr=1-clr;  }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(wrd.endsWith(\"000000000001\")) // needed for some files\r\n\t\t\t{\r\n\t\t\t\tif(y>=0) U._writeBits(line, tgt, toff*8+y*bipl);\r\n\t\t\t\tif(twoDim) {\r\n\t\t\t\t\tif(fo==1) is1D = ((data[boff>>>3]>>>(7-(boff&7)))&1)==1;\r\n\t\t\t\t\tif(fo==2) is1D = ((data[boff>>>3]>>>(  (boff&7)))&1)==1;\r\n\t\t\t\t\tboff++;\r\n\t\t\t\t}\r\n\t\t\t\t//log(\"EOL\",y, \"next 1D:\", is1D);\r\n\t\t\t\twrd=\"\";  clr=0;  y++;  a0=0;\r\n\t\t\t\tpline=U._makeDiff(line);  line=[];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(line.length==w) U._writeBits(line, tgt, toff*8+y*bipl);\r\n\t}\r\n\t\r\n\tUTIF.decode._addNtimes = function(arr, n, val) {  for(var i=0; i<n; i++) arr.push(val);  }\r\n\t\r\n\tUTIF.decode._writeBits = function(bits, tgt, boff)\r\n\t{\r\n\t\tfor(var i=0; i<bits.length; i++) tgt[(boff+i)>>>3] |= (bits[i]<<(7-((boff+i)&7)));\r\n\t}\r\n\t\r\n\tUTIF.decode._decodeLZW=UTIF.decode._decodeLZW=function(){var e,U,Z,u,K=0,V=0,g=0,N=0,O=function(){var S=e>>>3,A=U[S]<<16|U[S+1]<<8|U[S+2],j=A>>>24-(e&7)-V&(1<<V)-1;\r\n\te+=V;return j},h=new Uint32Array(4096*4),w=0,m=function(S){if(S==w)return;w=S;g=1<<S;N=g+1;for(var A=0;\r\n\tA<N+1;A++){h[4*A]=h[4*A+3]=A;h[4*A+1]=65535;h[4*A+2]=1}},i=function(S){V=S+1;K=N+1},D=function(S){var A=S<<2,j=h[A+2],a=u+j-1;\r\n\twhile(A!=65535){Z[a--]=h[A];A=h[A+1]}u+=j},L=function(S,A){var j=K<<2,a=S<<2;h[j]=h[(A<<2)+3];h[j+1]=a;\r\n\th[j+2]=h[a+2]+1;h[j+3]=h[a+3];K++;if(K+1==1<<V&&V!=12)V++},T=function(S,A,j,a,n,q){e=A<<3;U=S;Z=a;u=n;\r\n\tvar B=A+j<<3,_=0,t=0;m(q);i(q);while(e<B&&(_=O())!=N){if(_==g){i(q);_=O();if(_==N)break;D(_)}else{if(_<K){D(_);\r\n\tL(t,_)}else{L(t,t);D(K-1)}}t=_}return u};return T}();\r\n\t\r\n\tUTIF.tags = {};\r\n\t//UTIF.ttypes = {  256:3,257:3,258:3,   259:3, 262:3,  273:4,  274:3, 277:3,278:4,279:4, 282:5, 283:5, 284:3, 286:5,287:5, 296:3, 305:2, 306:2, 338:3, 513:4, 514:4, 34665:4  };\r\n\t// start at tag 250\r\n\tUTIF._types = function() {\r\n\t\tvar main = new Array(250);  main.fill(0);\r\n\t\tmain = main.concat([0,0,0,0,4,3,3,3,3,3,0,0,3,0,0,0,3,0,0,2,2,2,2,4,3,0,0,3,4,4,3,3,5,5,3,2,5,5,0,0,0,0,4,4,0,0,3,3,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,2,2,3,5,5,3,0,3,3,4,4,4,3,4,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);\r\n\t\tvar rest = {33432: 2, 33434: 5, 33437: 5, 34665: 4, 34850: 3, 34853: 4, 34855: 3, 34864: 3, 34866: 4, 36864: 7, 36867: 2, 36868: 2, 37121: 7, 37377: 10, 37378: 5, 37380: 10, 37381: 5, 37383: 3, 37384: 3, 37385: 3, 37386: 5, 37510: 7, 37520: 2, 37521: 2, 37522: 2, 40960: 7, 40961: 3, 40962: 4, 40963: 4, 40965: 4, 41486: 5, 41487: 5, 41488: 3, 41985: 3, 41986: 3, 41987: 3, 41988: 5, 41989: 3, 41990: 3, 41993: 3, 41994: 3, 41995: 7, 41996: 3, 42032: 2, 42033: 2, 42034: 5, 42036: 2, 42037: 2, 59932: 7};\r\n\t\treturn {\r\n\t\t\tbasic: {\r\n\t\t\t\tmain: main,\r\n\t\t\t\trest: rest\r\n\t\t\t},\r\n\t\t\tgps: {\r\n\t\t\t\tmain: [1,2,5,2,5,1,5,5,0,9],\r\n\t\t\t\trest: {18:2,29:2}\r\n\t\t\t}\r\n\t\t}\r\n\t}();\r\n\t\r\n\tUTIF._readIFD = function(bin, data, offset, ifds, depth, prm)\r\n\t{\r\n\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\r\n\t\tvar ifd = {};\r\n\t\r\n\t\tif(prm.debug) log(\"   \".repeat(depth),ifds.length-1,\">>>----------------\");\r\n\t\tfor(var i=0; i<cnt; i++)\r\n\t\t{\r\n\t\t\tvar tag  = bin.readUshort(data, offset);    offset+=2;\r\n\t\t\tvar type = bin.readUshort(data, offset);    offset+=2;\r\n\t\t\tvar num  = bin.readUint  (data, offset);    offset+=4;\r\n\t\t\tvar voff = bin.readUint  (data, offset);    offset+=4;\r\n\t\t\t\r\n\t\t\tvar arr = [];\r\n\t\t\t//ifd[\"t\"+tag+\"-\"+UTIF.tags[tag]] = arr;\r\n\t\t\tif(type== 1 || type==7) {  var no=(num<5 ? offset-4 : voff);  if(no+num>data.buffer.byteLength) num=data.buffer.byteLength-no;  arr = new Uint8Array(data.buffer, no, num);  }\r\n\t\t\tif(type== 2) {  var o0 = (num<5 ? offset-4 : voff), c=data[o0], len=Math.max(0, Math.min(num-1,data.length-o0));\r\n\t\t\t\t\t\t\tif(c<128 || len==0) arr.push( bin.readASCII(data, o0, len) );\r\n\t\t\t\t\t\t\telse      arr = new Uint8Array(data.buffer, o0, len);  }\r\n\t\t\tif(type== 3) {  for(var j=0; j<num; j++) arr.push(bin.readUshort(data, (num<3 ? offset-4 : voff)+2*j));  }\r\n\t\t\tif(type== 4 \r\n\t\t\t|| type==13) {  for(var j=0; j<num; j++) arr.push(bin.readUint  (data, (num<2 ? offset-4 : voff)+4*j));  }\r\n\t\t\tif(type== 5 || type==10) {  \r\n\t\t\t\tvar ri = type==5 ? bin.readUint : bin.readInt;\r\n\t\t\t\tfor(var j=0; j<num; j++) arr.push([ri(data, voff+j*8), ri(data,voff+j*8+4)]);  }\r\n\t\t\tif(type== 8) {  for(var j=0; j<num; j++) arr.push(bin.readShort (data, (num<3 ? offset-4 : voff)+2*j));  }\r\n\t\t\tif(type== 9) {  for(var j=0; j<num; j++) arr.push(bin.readInt   (data, (num<2 ? offset-4 : voff)+4*j));  }\r\n\t\t\tif(type==11) {  for(var j=0; j<num; j++) arr.push(bin.readFloat (data, voff+j*4));  }\r\n\t\t\tif(type==12) {  for(var j=0; j<num; j++) arr.push(bin.readDouble(data, voff+j*8));  }\r\n\t\t\t\r\n\t\t\tif(num!=0 && arr.length==0) {  log(tag, \"unknown TIFF tag type: \", type, \"num:\",num);  if(i==0)return;  continue;  }\r\n\t\t\tif(prm.debug) log(\"   \".repeat(depth), tag, type, UTIF.tags[tag], arr);\r\n\t\t\t\r\n\t\t\tifd[\"t\"+tag] = arr;\r\n\t\t\t\r\n\t\t\tif(tag==330 && ifd[\"t272\"] && ifd[\"t272\"][0]==\"DSLR-A100\") {  } \r\n\t\t\telse if(tag==330 || tag==34665 || tag==34853 || (tag==50740 && bin.readUshort(data,bin.readUint(arr,0))<300  ) ||tag==61440) {\r\n\t\t\t\tvar oarr = tag==50740 ? [bin.readUint(arr,0)] : arr;\r\n\t\t\t\tvar subfd = [];\r\n\t\t\t\tfor(var j=0; j<oarr.length; j++) UTIF._readIFD(bin, data, oarr[j], subfd, depth+1, prm);\r\n\t\t\t\tif(tag==  330) ifd.subIFD = subfd;\r\n\t\t\t\tif(tag==34665) ifd.exifIFD = subfd[0];\r\n\t\t\t\tif(tag==34853) ifd.gpsiIFD = subfd[0];  //console.log(\"gps\", subfd[0]);  }\r\n\t\t\t\tif(tag==50740) ifd.dngPrvt = subfd[0];\r\n\t\t\t\tif(tag==61440) ifd.fujiIFD = subfd[0];\r\n\t\t\t}\r\n\t\t\tif(tag==37500 && prm.parseMN) {\r\n\t\t\t\tvar mn = arr;\r\n\t\t\t\t//console.log(bin.readASCII(mn,0,mn.length), mn);\r\n\t\t\t\tif(bin.readASCII(mn,0,5)==\"Nikon\")  ifd.makerNote = UTIF[\"decode\"](mn.slice(10).buffer)[0];\r\n\t\t\t\telse if(bin.readASCII(mn,0,5)==\"OLYMP\" || bin.readASCII(mn,0,9)==\"OM SYSTEM\") { // ???\r\n\t\t\t\t\tvar inds = [8208,8224,8240,8256,8272];\r\n\t\t\t\t\tvar subsub = [];  UTIF._readIFD(bin, mn, mn[1]==77 ? 16 : (mn[5]==85 ? 12 : 8), subsub, depth+1, prm);\r\n\t\t\t\t\tvar obj = ifd.makerNote = subsub.pop();\r\n\t\t\t\t\tfor(var j=0; j<inds.length; j++) {\r\n\t\t\t\t\t\tvar k=\"t\"+inds[j];  if(obj[k]==null) continue;\r\n\t\t\t\t\t\tUTIF._readIFD(bin, mn, obj[k][0], subsub, depth+1, prm);\r\n\t\t\t\t\t\tobj[k] = subsub.pop();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(obj[\"t12288\"]) {\r\n\t\t\t\t\t\tUTIF._readIFD(bin, obj[\"t12288\"], 0, subsub, depth+1, prm);\r\n\t\t\t\t\t\tobj[\"t12288\"]=subsub.pop();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(bin.readUshort(data,voff)<300 && bin.readUshort(data,voff+4)<=12){\r\n\t\t\t\t\tvar subsub=[];  UTIF._readIFD(bin, data, voff, subsub, depth+1, prm);\r\n\t\t\t\t\tifd.makerNote = subsub[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tifds.push(ifd);\r\n\t\tif(prm.debug) log(\"   \".repeat(depth),\"<<<---------------\");\r\n\t\treturn offset;\r\n\t}\r\n\t\r\n\tUTIF._writeIFD = function(bin, types, data, offset, ifd)\r\n\t{\r\n\t\tvar keys = Object.keys(ifd), knum=keys.length;  if(ifd[\"exifIFD\"]) knum--;  if(ifd[\"gpsiIFD\"]) knum--;\r\n\t\tbin.writeUshort(data, offset, knum);  offset+=2;\r\n\t\r\n\t\tvar eoff = offset + knum*12 + 4;\r\n\t\r\n\t\tfor(var ki=0; ki<keys.length; ki++)\r\n\t\t{\r\n\t\t\tvar key = keys[ki];  if(key==\"t34665\" || key==\"t34853\") continue;  \r\n\t\t\tif(key==\"exifIFD\") key=\"t34665\";  if(key==\"gpsiIFD\") key=\"t34853\";\r\n\t\t\tvar tag = parseInt(key.slice(1)), type = types.main[tag];  if(type==null) type=types.rest[tag];\t\t\r\n\t\t\tif(type==null || type==0) throw new Error(\"unknown type of tag: \"+tag);\r\n\t\t\t//console.log(offset+\":\", tag, type, eoff);\r\n\t\t\tvar val = ifd[key];  \r\n\t\t\tif(tag==34665) {\r\n\t\t\t\tvar outp = UTIF._writeIFD(bin, types, data, eoff, ifd[\"exifIFD\"]);\r\n\t\t\t\tval = [eoff];  eoff = outp[1];\r\n\t\t\t}\r\n\t\t\tif(tag==34853) {\r\n\t\t\t\tvar outp = UTIF._writeIFD(bin, UTIF._types.gps, data, eoff, ifd[\"gpsiIFD\"]);\r\n\t\t\t\tval = [eoff];  eoff = outp[1];\r\n\t\t\t}\r\n\t\t\tif(type==2) val=val[0]+\"\\u0000\";  var num = val.length;\r\n\t\t\tbin.writeUshort(data, offset, tag );  offset+=2;\r\n\t\t\tbin.writeUshort(data, offset, type);  offset+=2;\r\n\t\t\tbin.writeUint  (data, offset, num );  offset+=4;\r\n\t\r\n\t\t\tvar dlen = [-1, 1, 1, 2, 4, 8, 0, 1, 0, 4, 8, 0, 8][type] * num;  //if(dlen<1) throw \"e\";\r\n\t\t\tvar toff = offset;\r\n\t\t\tif(dlen>4) {  bin.writeUint(data, offset, eoff);  toff=eoff;  }\r\n\t\r\n\t\t\tif     (type== 1 || type==7) {  for(var i=0; i<num; i++) data[toff+i] = val[i];  }\r\n\t\t\telse if(type== 2) {  bin.writeASCII(data, toff, val);   }\r\n\t\t\telse if(type== 3) {  for(var i=0; i<num; i++) bin.writeUshort(data, toff+2*i, val[i]);    }\r\n\t\t\telse if(type== 4) {  for(var i=0; i<num; i++) bin.writeUint  (data, toff+4*i, val[i]);    }\r\n\t\t\telse if(type== 5 || type==10) {  \r\n\t\t\t\tvar wr = type==5?bin.writeUint:bin.writeInt;\r\n\t\t\t\tfor(var i=0; i<num; i++) {  \r\n\t\t\t\tvar v=val[i],nu=v[0],de=v[1];  if(nu==null) throw \"e\";  wr(data, toff+8*i, nu);  wr(data, toff+8*i+4, de);  }   }\r\n\t\t\telse if(type== 9) {  for(var i=0; i<num; i++) bin.writeInt   (data, toff+4*i, val[i]);    }\r\n\t\t\telse if(type==12) {  for(var i=0; i<num; i++) bin.writeDouble(data, toff+8*i, val[i]);    }\r\n\t\t\telse throw type;\r\n\t\r\n\t\t\tif(dlen>4) {  dlen += (dlen&1);  eoff += dlen;  }\r\n\t\t\toffset += 4;\r\n\t\t}\r\n\t\treturn [offset, eoff];\r\n\t}\r\n\t\r\n\tUTIF.toRGBA8 = function(out, scl)\r\n\t{\r\n\t\tfunction gamma(x) {  return x < 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1.0 / 2.4) - 0.055;  }\r\n\t\t\r\n\t\t\r\n\t\tvar w = out.width, h = out.height, area = w*h, qarea = area*4, data = out.data;\r\n\t\tvar img = new Uint8Array(area*4);\r\n\t\t//console.log(out);\r\n\t\t// 0: WhiteIsZero, 1: BlackIsZero, 2: RGB, 3: Palette color, 4: Transparency mask, 5: CMYK\r\n\t\tvar intp = (out[\"t262\"] ? out[\"t262\"][0]: 2), bps = (out[\"t258\"]?Math.min(32,out[\"t258\"][0]):1);\r\n\t\tif(out[\"t262\"]==null && bps==1) intp=0;\r\n\t\t\r\n\t\tvar smpls = out[\"t277\"]?out[\"t277\"][0] : (out[\"t258\"]?out[\"t258\"].length : [1,1,3,1,1,4,3][intp]);\r\n\t\tvar sfmt  = out[\"t339\"]?out[\"t339\"][0] : null;  if(intp==1 && bps==32 && sfmt!=3) throw \"e\";  // sample format\r\n\t\tvar bpl = Math.ceil(smpls*bps*w/8);\r\n\t\t\r\n\t\t//log(\"interpretation: \", intp, \"smpls\", smpls, \"bps\", bps, \"sample format\",sfmt, out);\r\n\t\t\r\n\t\tif(false) {}\r\n\t\telse if(intp==0)\r\n\t\t{\r\n\t\t\tscl = 1/256; // \"Photopeatest.tif\"\r\n\t\t\tfor(var y=0; y<h; y++) {\r\n\t\t\t\tvar off = y*bpl, io = y*w;\r\n\t\t\t\tif(bps== 1) for(var i=0; i<w; i++) {  var qi=(io+i)<<2, px=((data[off+(i>>3)])>>(7-  (i&7)))& 1;  img[qi]=img[qi+1]=img[qi+2]=( 1-px)*255;  img[qi+3]=255;    }\r\n\t\t\t\tif(bps== 4) for(var i=0; i<w; i++) {  var qi=(io+i)<<2, px=((data[off+(i>>1)])>>(4-4*(i&1)))&15;  img[qi]=img[qi+1]=img[qi+2]=(15-px)* 17;  img[qi+3]=255;    }\r\n\t\t\t\tif(bps== 8) for(var i=0; i<w; i++) {  var qi=(io+i)<<2, px=data[off+i];  img[qi]=img[qi+1]=img[qi+2]=255-px;  img[qi+3]=255;    }\r\n\t\t\t\tif(bps==16) for(var i=0; i<w; i++) {  var qi=(io+i)<<2, o=off+(2*i), px=(data[o+1]<<8)|data[o];  img[qi]=img[qi+1]=img[qi+2]= Math.min(255,255-(~~(px*scl)));  img[qi+3]=255;    } // ladoga.tif\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(intp==1)\r\n\t\t{\r\n\t\t\tif(scl==null) scl=1/256;\r\n\t\t\tvar f32 = ((data.length&3)==0) ? new Float32Array(data.buffer) : null;\r\n\t\t\t\r\n\t\t\tfor(var y=0; y<h; y++) {\r\n\t\t\t\tvar off = y*bpl, io = y*w;\r\n\t\t\t\tif(bps== 1) for(var i=0; i<w; i++) {  var qi=(io+i)<<2, px=((data[off+(i>>3)])>>(7-  (i&7)))&1;   img[qi]=img[qi+1]=img[qi+2]=(px)*255;  img[qi+3]=255;    }\r\n\t\t\t\tif(bps== 2) for(var i=0; i<w; i++) {  var qi=(io+i)<<2, px=((data[off+(i>>2)])>>(6-2*(i&3)))&3;   img[qi]=img[qi+1]=img[qi+2]=(px)* 85;  img[qi+3]=255;    }\r\n\t\t\t\tif(bps== 8) for(var i=0; i<w; i++) {  var qi=(io+i)<<2, px=data[off+i*smpls];  img[qi]=img[qi+1]=img[qi+2]=    px;  img[qi+3]=255;    }\r\n\t\t\t\tif(bps==16) for(var i=0; i<w; i++) {  var qi=(io+i)<<2, o=off+(2*i), px=(data[o+1]<<8)|data[o];  img[qi]=img[qi+1]=img[qi+2]= Math.min(255,~~(px*scl));  img[qi+3]=255;    } // ladoga.tif\r\n\t\t\t\tif(bps==32) for(var i=0; i<w; i++) {  var qi=(io+i)<<2, o=(off>>>2)+i, px=f32[o];  img[qi]=img[qi+1]=img[qi+2]= ~~(0.5+255*px);  img[qi+3]=255;    }\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(intp==2)\r\n\t\t{\r\n\t\t\tif(bps== 8) \r\n\t\t\t{\r\n\t\t\t\tif(smpls==1) for(var i=0; i<area; i++) {  img[4*i]=img[4*i+1]=img[4*i+2]=data[i];  img[4*i+3]=255;  }\r\n\t\t\t\tif(smpls==3) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*3    ;  img[qi]=data[ti];  img[qi+1]=data[ti+1];  img[qi+2]=data[ti+2];  img[qi+3]=255;    }\r\n\t\t\t\tif(smpls>=4) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*smpls;  img[qi]=data[ti];  img[qi+1]=data[ti+1];  img[qi+2]=data[ti+2];  img[qi+3]=data[ti+3];    }\r\n\t\t\t}\r\n\t\t\telse if(bps==16){  // 3x 16-bit channel\r\n\t\t\t\tif(smpls==4) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*8+1;  img[qi]=data[ti];  img[qi+1]=data[ti+2];  img[qi+2]=data[ti+4];  img[qi+3]=data[ti+6];    }\r\n\t\t\t\tif(smpls==3) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*6+1;  img[qi]=data[ti];  img[qi+1]=data[ti+2];  img[qi+2]=data[ti+4];  img[qi+3]=255;           }\r\n\t\t\t}\r\n\t\t\telse if(bps==32){\r\n\t\t\t\tvar ndt = new Float32Array(data.buffer);  // t339 is [3,3,3]\r\n\t\t\t\t// check the endianity\r\n\t\t\t\tvar min = 0;  for(var i=0; i<ndt.length; i++) min = Math.min(min,ndt[i]);\r\n\t\t\t\tif(min<0) for(var i=0; i<data.length; i+=4) {  var t=data[i];  data[i]=data[i+3];  data[i+3]=t;  t=data[i+1];  data[i+1]=data[i+2];  data[i+2]=t;  }\r\n\t\t\t\t// gamma correction\r\n\t\t\t\tvar pmap = [];  for(var i=0; i<65536; i++) pmap.push(gamma(i/65535));\r\n\t\t\t\tfor(var i=0; i<ndt.length; i++) {  var cv = Math.max(0, Math.min(1, ndt[i]));  ndt[i] = pmap[~~(0.5+cv*65535)];  }\r\n\t\t\t\t\r\n\t\t\t\tif(smpls==3) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*3;  \r\n\t\t\t\t\timg[qi]=~~(0.5+ndt[ti]*255);  img[qi+1]=~~(0.5+ndt[ti+1]*255);  img[qi+2]=~~(0.5+ndt[ti+2]*255);  img[qi+3]=255;           }\r\n\t\t\t\telse if(smpls==4) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*4;  \r\n\t\t\t\t\timg[qi]=~~(0.5+ndt[ti]*255);  img[qi+1]=~~(0.5+ndt[ti+1]*255);  img[qi+2]=~~(0.5+ndt[ti+2]*255);  img[qi+3]=~~(0.5+ndt[ti+3]*255);           }\r\n\t\t\t\telse throw smpls;\r\n\t\t\t}\r\n\t\t\telse throw bps;\r\n\t\t}\r\n\t\telse if(intp==3)\r\n\t\t{\r\n\t\t\tvar map = out[\"t320\"];\r\n\t\t\tvar cn = 1<<bps;\r\n\t\t\t\r\n\t\t\tvar nexta = bps==8 && smpls>1 && out[\"t338\"] && out[\"t338\"][0]!=0;\r\n\t\t\t\r\n\t\t\tfor(var y=0; y<h; y++) \r\n\t\t\t\tfor(var x=0; x<w; x++) {  \r\n\t\t\t\t\tvar i = y*w+x;\r\n\t\t\t\t\tvar qi=i<<2, mi=0;\r\n\t\t\t\t\tvar dof = y*bpl;\r\n\t\t\t\t\tif(false) {}\r\n\t\t\t\t\telse if(bps==1) mi=(data[dof+(x>>>3)]>>>(7-  (x&7)))& 1;\r\n\t\t\t\t\telse if(bps==2) mi=(data[dof+(x>>>2)]>>>(6-2*(x&3)))& 3;\r\n\t\t\t\t\telse if(bps==4) mi=(data[dof+(x>>>1)]>>>(4-4*(x&1)))&15;\r\n\t\t\t\t\telse if(bps==8) mi= data[dof+x*smpls]; \r\n\t\t\t\t\telse throw bps;\r\n\t\t\t\t\timg[qi]=(map[mi]>>8);  img[qi+1]=(map[cn+mi]>>8);  img[qi+2]=(map[cn+cn+mi]>>8);  img[qi+3]=nexta ? data[dof+x*smpls+1] : 255;   \r\n\t\t\t\t}\r\n\t\t}\r\n\t\telse if(intp==5) \r\n\t\t{\r\n\t\t\tvar gotAlpha = smpls>4 ? 1 : 0;\r\n\t\t\tfor(var i=0; i<area; i++) {\r\n\t\t\t\tvar qi=i<<2, si=i*smpls;  \r\n\t\t\t\t\r\n\t\t\t\tif(window.UDOC) {\r\n\t\t\t\t\tvar C=data[si], M=data[si+1], Y=data[si+2], K=data[si+3];\r\n\t\t\t\t\tvar c = UDOC.C.cmykToRgb([C*(1/255), M*(1/255), Y*(1/255), K*(1/255)]);\r\n\t\t\t\t\timg[qi] = ~~(0.5+255*c[0]);  img[qi+1] = ~~(0.5+255*c[1]);  img[qi+2] = ~~(0.5+255*c[2]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar C=255-data[si], M=255-data[si+1], Y=255-data[si+2], K=(255-data[si+3])*(1/255);\r\n\t\t\t\t\timg[qi]=~~(C*K+0.5);  img[qi+1]=~~(M*K+0.5);  img[qi+2]=~~(Y*K+0.5);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\timg[qi+3]=255*(1-gotAlpha)+data[si+4]*gotAlpha;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(intp==6 && out[\"t278\"]) {  // only for DSC_1538.TIF\r\n\t\t\tvar rps = out[\"t278\"][0];\r\n\t\t\tfor(var y=0; y<h; y+=rps) {\r\n\t\t\t\tvar i=(y*w), len = rps*w;\r\n\t\t\t\t\r\n\t\t\t\tfor(var j=0; j<len; j++) {\r\n\t\t\t\t\tvar qi = 4*(i+j), si = 3*i+4*(j>>>1);\r\n\t\t\t\t\tvar Y = data[si+(j&1)], Cb=data[si+2]-128, Cr=data[si+3]-128;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar r = Y + ( (Cr >> 2) + (Cr >> 3) + (Cr >> 5) ) ;\r\n\t\t\t\t\tvar g = Y - ( (Cb >> 2) + (Cb >> 4) + (Cb >> 5)) - ( (Cr >> 1) + (Cr >> 3) + (Cr >> 4) + (Cr >> 5)) ;\r\n\t\t\t\t\tvar b = Y + ( Cb + (Cb >> 1) + (Cb >> 2) + (Cb >> 6)) ;\r\n\t\t\t\t\t\r\n\t\t\t\t\timg[qi  ]=Math.max(0,Math.min(255,r));\r\n\t\t\t\t\timg[qi+1]=Math.max(0,Math.min(255,g));\r\n\t\t\t\t\timg[qi+2]=Math.max(0,Math.min(255,b));\r\n\t\t\t\t\timg[qi+3]=255;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(intp==32845) {\r\n\t\t\t\r\n\t\t\tfor(var y=0; y<h; y++)\r\n\t\t\t\tfor(var x=0; x<w; x++) {\r\n\t\t\t\t\tvar si = (y*w+x)*6, qi=(y*w+x)*4;\r\n\t\t\t\t\tvar L =  (data[si+1]<<8) | data[si];\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar L = Math.pow(2, (L + 0.5) / 256 - 64);\r\n\t\t\t\t\tvar u = (data[si+3] + 0.5) / 410;\r\n\t\t\t\t\tvar v = (data[si+5] + 0.5) / 410;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Luv to xyY\r\n\t\t\t\t\tvar sX = (9 * u) / (6 * u - 16 * v + 12);\r\n\t\t\t\t\tvar sY = (4 * v) / (6 * u - 16 * v + 12);\r\n\t\t\t\t\tvar bY = L;  \r\n\t\t\t\t\t\r\n\t\t\t\t\t// xyY to XYZ\r\n\t\t\t\t\tvar X = (sX*bY)/sY, Y = bY, Z = (1-sX-sY)*bY/sY;  \r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar r =  2.690*X -1.276*Y -0.414*Z\r\n\t\t\t\t\tvar g = -1.022*X +1.978*Y +0.044*Z\r\n\t\t\t\t\tvar b =  0.061*X -0.224*Y +1.163*Z\r\n\t\t\t\t\t\r\n\t\t\t\t\timg[qi  ] = gamma(Math.min(r,1))*255;\r\n\t\t\t\t\timg[qi+1] = gamma(Math.min(g,1))*255;\r\n\t\t\t\t\timg[qi+2] = gamma(Math.min(b,1))*255;\r\n\t\t\t\t\timg[qi+3] = 255;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\telse log(\"Unknown Photometric interpretation: \"+intp);\r\n\t\treturn img;\r\n\t}\r\n\t\r\n\tUTIF.replaceIMG = function(imgs)\r\n\t{\r\n\t\tif(imgs==null) imgs = document.getElementsByTagName(\"img\");\r\n\t\tvar sufs = [\"tif\",\"tiff\",\"dng\",\"cr2\",\"nef\"]\r\n\t\tfor (var i=0; i<imgs.length; i++)\r\n\t\t{\r\n\t\t\tvar img=imgs[i], src=img.getAttribute(\"src\");  if(src==null) continue;\r\n\t\t\tvar suff=src.split(\".\").pop().toLowerCase();\r\n\t\t\tif(sufs.indexOf(suff)==-1) continue;\r\n\t\t\tvar xhr = new XMLHttpRequest();  UTIF._xhrs.push(xhr);  UTIF._imgs.push(img);\r\n\t\t\txhr.open(\"GET\", src);  xhr.responseType = \"arraybuffer\";\r\n\t\t\txhr.onload = UTIF._imgLoaded;   xhr.send();\r\n\t\t}\r\n\t}\r\n\t\r\n\tUTIF._xhrs = [];  UTIF._imgs = [];\r\n\tUTIF._imgLoaded = function(e) {\r\n\t\tvar ind = UTIF._xhrs.indexOf(e.target), img = UTIF._imgs[ind];\r\n\t\tUTIF._xhrs.splice(ind,1);  UTIF._imgs.splice(ind,1);\r\n\t\t\r\n\t\timg.setAttribute(\"src\",UTIF.bufferToURI(e.target.response));\r\n\t}\r\n\t\r\n\tUTIF.bufferToURI = function(buff) {\r\n\t\tvar ifds = UTIF.decode(buff);  //console.log(ifds);\r\n\t\tvar vsns = ifds, ma=0, page=vsns[0];  if(ifds[0].subIFD) vsns = vsns.concat(ifds[0].subIFD);\r\n\t\tfor(var i=0; i<vsns.length; i++) {\r\n\t\t\tvar img = vsns[i];\r\n\t\t\tif(img[\"t258\"]==null || img[\"t258\"].length<3) continue;\r\n\t\t\tvar ar = img[\"t256\"]*img[\"t257\"];\r\n\t\t\tif(ar>ma) {  ma=ar;  page=img;  }\r\n\t\t}\r\n\t\tUTIF.decodeImage(buff, page, ifds);\r\n\t\tvar rgba = UTIF.toRGBA8(page), w=page.width, h=page.height;\r\n\t\t\r\n\t\tvar cnv = document.createElement(\"canvas\");  cnv.width=w;  cnv.height=h;\r\n\t\tvar ctx = cnv.getContext(\"2d\");\r\n\t\tvar imgd = new ImageData(new Uint8ClampedArray(rgba.buffer),w,h);\r\n\t\tctx.putImageData(imgd,0,0);\r\n\t\treturn cnv.toDataURL();\r\n\t}\r\n\t\r\n\t\r\n\tUTIF._binBE =\r\n\t{\r\n\t\tnextZero   : function(data, o) {  while(data[o]!=0) o++;  return o;  },\r\n\t\treadUshort : function(buff, p) {  return (buff[p]<< 8) |  buff[p+1];  },\r\n\t\treadShort  : function(buff, p) {  var a=UTIF._binBE.ui8;  a[0]=buff[p+1];  a[1]=buff[p+0];\t\t\t\t\t\t\t        return UTIF._binBE. i16[0];  },\r\n\t\treadInt    : function(buff, p) {  var a=UTIF._binBE.ui8;  a[0]=buff[p+3];  a[1]=buff[p+2];  a[2]=buff[p+1];  a[3]=buff[p+0];  return UTIF._binBE. i32[0];  },\r\n\t\treadUint   : function(buff, p) {  var a=UTIF._binBE.ui8;  a[0]=buff[p+3];  a[1]=buff[p+2];  a[2]=buff[p+1];  a[3]=buff[p+0];  return UTIF._binBE.ui32[0];  },\r\n\t\treadASCII  : function(buff, p, l) {  var s = \"\";   for(var i=0; i<l; i++) s += String.fromCharCode(buff[p+i]);   return s; },\r\n\t\treadFloat  : function(buff, p) {  var a=UTIF._binBE.ui8;  for(var i=0;i<4;i++) a[i]=buff[p+3-i];  return UTIF._binBE.fl32[0];  },\r\n\t\treadDouble : function(buff, p) {  var a=UTIF._binBE.ui8;  for(var i=0;i<8;i++) a[i]=buff[p+7-i];  return UTIF._binBE.fl64[0];  },\r\n\t\r\n\t\twriteUshort: function(buff, p, n) {  buff[p] = (n>> 8)&255;  buff[p+1] =  n&255;  },\r\n\t\twriteInt   : function(buff, p, n) {  var a=UTIF._binBE.ui8;  UTIF._binBE.i32[0]=n;  buff[p+3]=a[0];  buff[p+2]=a[1];  buff[p+1]=a[2];  buff[p+0]=a[3];  },\r\n\t\twriteUint  : function(buff, p, n) {  buff[p] = (n>>24)&255;  buff[p+1] = (n>>16)&255;  buff[p+2] = (n>>8)&255;  buff[p+3] = (n>>0)&255;  },\r\n\t\twriteASCII : function(buff, p, s) {  for(var i = 0; i < s.length; i++)  buff[p+i] = s.charCodeAt(i);  },\r\n\t\twriteDouble: function(buff, p, n)\r\n\t\t{\r\n\t\t\tUTIF._binBE.fl64[0] = n;\r\n\t\t\tfor (var i = 0; i < 8; i++) buff[p + i] = UTIF._binBE.ui8[7 - i];\r\n\t\t}\r\n\t}\r\n\tUTIF._binBE.ui8  = new Uint8Array  (8);\r\n\tUTIF._binBE.i16  = new Int16Array  (UTIF._binBE.ui8.buffer);\r\n\tUTIF._binBE.i32  = new Int32Array  (UTIF._binBE.ui8.buffer);\r\n\tUTIF._binBE.ui32 = new Uint32Array (UTIF._binBE.ui8.buffer);\r\n\tUTIF._binBE.fl32 = new Float32Array(UTIF._binBE.ui8.buffer);\r\n\tUTIF._binBE.fl64 = new Float64Array(UTIF._binBE.ui8.buffer);\r\n\t\r\n\tUTIF._binLE =\r\n\t{\r\n\t\tnextZero   : UTIF._binBE.nextZero,\r\n\t\treadUshort : function(buff, p) {  return (buff[p+1]<< 8) |  buff[p];  },\r\n\t\treadShort  : function(buff, p) {  var a=UTIF._binBE.ui8;  a[0]=buff[p+0];  a[1]=buff[p+1];\t\t\t\t\t\t\t        return UTIF._binBE. i16[0];  },\r\n\t\treadInt    : function(buff, p) {  var a=UTIF._binBE.ui8;  a[0]=buff[p+0];  a[1]=buff[p+1];  a[2]=buff[p+2];  a[3]=buff[p+3];  return UTIF._binBE. i32[0];  },\r\n\t\treadUint   : function(buff, p) {  var a=UTIF._binBE.ui8;  a[0]=buff[p+0];  a[1]=buff[p+1];  a[2]=buff[p+2];  a[3]=buff[p+3];  return UTIF._binBE.ui32[0];  },\r\n\t\treadASCII  : UTIF._binBE.readASCII,\r\n\t\treadFloat  : function(buff, p) {  var a=UTIF._binBE.ui8;  for(var i=0;i<4;i++) a[i]=buff[p+  i];  return UTIF._binBE.fl32[0];  },\r\n\t\treadDouble : function(buff, p) {  var a=UTIF._binBE.ui8;  for(var i=0;i<8;i++) a[i]=buff[p+  i];  return UTIF._binBE.fl64[0];  },\r\n\t\t\r\n\t\twriteUshort: function(buff, p, n) {  buff[p] = (n)&255;  buff[p+1] =  (n>>8)&255;  },\r\n\t\twriteInt   : function(buff, p, n) {  var a=UTIF._binBE.ui8;  UTIF._binBE.i32[0]=n;  buff[p+0]=a[0];  buff[p+1]=a[1];  buff[p+2]=a[2];  buff[p+3]=a[3];  },\r\n\t\twriteUint  : function(buff, p, n) {  buff[p] = (n>>>0)&255;  buff[p+1] = (n>>>8)&255;  buff[p+2] = (n>>>16)&255;  buff[p+3] = (n>>>24)&255;  },\r\n\t\twriteASCII : UTIF._binBE.writeASCII\r\n\t}\r\n\tUTIF._copyTile = function(tb, tw, th, b, w, h, xoff, yoff)\r\n\t{\r\n\t\t//log(\"copyTile\", tw, th,  w, h, xoff, yoff);\r\n\t\tvar xlim = Math.min(tw, w-xoff);\r\n\t\tvar ylim = Math.min(th, h-yoff);\r\n\t\tfor(var y=0; y<ylim; y++)\r\n\t\t{\r\n\t\t\tvar tof = (yoff+y)*w+xoff;\r\n\t\t\tvar sof = y*tw;\r\n\t\t\tfor(var x=0; x<xlim; x++) b[tof+x] = tb[sof+x];\r\n\t\t}\r\n\t}\r\n\t\r\n\tUTIF.LosslessJpegDecode =function(){var b,O;function l(){return b[O++]}function m(){return b[O++]<<8|b[O++]}function a0(h){var V=l(),I=[0,0,0,255],f=[],G=8;\r\n\tfor(var w=0;w<16;w++)f[w]=l();for(var w=0;w<16;w++){for(var x=0;x<f[w];x++){var T=z(I,0,w+1,1);I[T+3]=l()}}var E=new Uint8Array(1<<G);\r\n\th[V]=[new Uint8Array(I),E];for(var w=0;w<1<<G;w++){var s=G,_=w,Y=0,F=0;while(I[Y+3]==255&&s!=0){F=_>>--s&1;\r\n\tY=I[Y+F]}E[w]=Y}}function z(h,V,I,f){if(h[V+3]!=255)return 0;if(I==0)return V;for(var w=0;w<2;w++){if(h[V+w]==0){h[V+w]=h.length;\r\n\th.push(0,0,f,255)}var x=z(h,h[V+w],I-1,f+1);if(x!=0)return x}return 0}function i(h){var V=h.b,I=h.f;\r\n\twhile(V<25&&h.a<h.d){var f=h.data[h.a++];if(f==255&&!h.c)h.a++;I=I<<8|f;V+=8}if(V<0)throw\"e\";h.b=V;h.f=I}function H(h,V){if(V.b<h)i(V);\r\n\treturn V.f>>(V.b-=h)&65535>>16-h}function g(h,V){var I=h[0],f=0,w=255,x=0;if(V.b<16)i(V);var T=V.f>>V.b-8&255;\r\n\tf=h[1][T];w=I[f+3];V.b-=I[f+2];while(w==255){x=V.f>>--V.b&1;f=I[f+x];w=I[f+3]}return w}function P(h,V){if(h<32768>>16-V)h+=-(1<<V)+1;\r\n\treturn h}function a2(h,V){var I=g(h,V);if(I==0)return 0;if(I==16)return-32768;var f=H(I,V);return P(f,I)}function X(h,V,I,f,w,x){var T=0;\r\n\tfor(var G=0;G<x;G++){var s=G*V;for(var _=0;_<V;_+=w){T++;for(var Y=0;Y<w;Y++)h[s+_+Y]=a2(f[Y],I)}if(I.e!=0&&T%I.e==0&&G!=0){var F=I.a,t=I.data;\r\n\twhile(t[F]!=255||!(208<=t[F+1]&&t[F+1]<=215))F--;I.a=F+2;I.f=0;I.b=0}}}function o(h,V){return P(H(h,V),h)}function a1(h,V,I,f,w){var x=b.length-O;\r\n\tfor(var T=0;T<x;T+=4){var G=b[O+T];b[O+T]=b[O+T+3];b[O+T+3]=G;var G=b[O+T+1];b[O+T+1]=b[O+T+2];b[O+T+2]=G}for(var E=0;\r\n\tE<w;E++){var s=32768,_=32768;for(var Y=0;Y<V;Y+=2){var F=g(f,I),t=g(f,I);if(F!=0)s+=o(F,I);if(t!=0)_+=o(t,I);\r\n\th[E*V+Y]=s&65535;h[E*V+Y+1]=_&65535}}}function C(h){b=h;O=0;if(m()!=65496)throw\"e\";var V=[],I=0,f=0,w=0,x=[],T=[],G=[],E=0,s=0,_=0;\r\n\twhile(!0){var Y=m();if(Y==65535){O--;continue}var F=m();if(Y==65475){f=l();s=m();_=m();E=l();for(var t=0;\r\n\tt<E;t++){var a=l(),J=l(),r=l();if(r!=0)throw\"e\";V[a]=[t,J>>4,J&15]}}else if(Y==65476){var a3=O+F-2;while(O<a3)a0(T)}else if(Y==65498){O++;\r\n\tfor(var t=0;t<E;t++){var a5=l(),v=V[a5];G[v[0]]=T[l()>>>4];x[v[0]]=v.slice(1)}I=l();O+=2;break}else if(Y==65501){w=m()}else{O+=F-2}}var a4=f>8?Uint16Array:Uint8Array,$=new a4(s*_*E),M={b:0,f:0,c:I==8,a:O,data:b,d:b.length,e:w};\r\n\tif(M.c)a1($,_*E,M,G[0],s);else{var c=[],p=0,D=0;for(var t=0;t<E;t++){var N=x[t],S=N[0],K=N[1];if(S>p)p=S;\r\n\tif(K>D)D=K;c.push(S*K)}if(p!=1||D!=1){if(E!=3||c[1]!=1||c[2]!=1)throw\"e\";if(p!=2||D!=1&&D!=2)throw\"e\";\r\n\tvar u=[],Z=0;for(var t=0;t<E;t++){for(var R=0;R<c[t];R++)u.push(G[t]);Z+=c[t]}var B=_/p,e=s/D,d=B*e;\r\n\tX($,B*Z,M,u,Z,e);j($,I,B,e,Z-2,Z,Z,f);var A=new Uint16Array(d*c[0]);if(p==2&&D==2){for(var t=0;t<d;t++){A[4*t]=$[6*t];\r\n\tA[4*t+1]=$[6*t+1];A[4*t+2]=$[6*t+2];A[4*t+3]=$[6*t+3]}j(A,I,B*4,e,0,1,1,f);for(var t=0;t<d;t++){$[6*t]=A[4*t];\r\n\t$[6*t+1]=A[4*t+1];$[6*t+2]=A[4*t+2];$[6*t+3]=A[4*t+3]}}if(p==2&&D==1){for(var t=0;t<d;t++){A[2*t]=$[4*t];\r\n\tA[2*t+1]=$[4*t+1]}j(A,I,B*2,e,0,1,1,f);for(var t=0;t<d;t++){$[4*t]=A[2*t];$[4*t+1]=A[2*t+1]}}var n=$.slice(0);\r\n\tfor(var K=0;K<s;K++){if(D==2)for(var S=0;S<_;S++){var q=(K*_+S)*E,k=((K>>>1)*B+(S>>>1))*Z,y=(K&1)*2+(S&1);\r\n\t$[q]=n[k+y];$[q+1]=n[k+4];$[q+2]=n[k+5]}else for(var S=0;S<_;S++){var q=(K*_+S)*E,k=(K*B+(S>>>1))*Z,y=S&1;\r\n\t$[q]=n[k+y];$[q+1]=n[k+2];$[q+2]=n[k+3]}}}else{X($,_*E,M,G,E,s);if(w==0)j($,I,_,s,0,E,E,f);else{var U=Math.floor(w/_);\r\n\tfor(var K=0;K<s;K+=U){var L=$.slice(K*_*E,(K+U)*_*E);j(L,I,_,U,0,E,E,f);$.set(L,K*_*E)}}}}return $}function j(h,V,I,f,w,x,G,E){var s=I*G;\r\n\tfor(var _=w;_<x;_++)h[_]+=1<<E-1;for(var Y=G;Y<s;Y+=G)for(var _=w;_<x;_++)h[Y+_]+=h[Y+_-G];for(var F=1;\r\n\tF<f;F++){var t=F*s;for(var _=w;_<x;_++)h[t+_]+=h[t+_-s];for(var Y=G;Y<s;Y+=G){for(var _=w;_<x;_++){var a=t+Y+_,J=a-s,r=h[a-G],Q=0;\r\n\tif(V==0)Q=0;else if(V==1)Q=r;else if(V==2)Q=h[J];else if(V==3)Q=h[J-G];else if(V==4)Q=r+(h[J]-h[J-G]);\r\n\telse if(V==5)Q=r+(h[J]-h[J-G]>>>1);else if(V==6)Q=h[J]+(r-h[J-G]>>>1);else if(V==7)Q=r+h[J]>>>1;else throw V;\r\n\th[a]+=Q}}}}return C}();\r\n\t\r\n\t\r\n\t(function(){var G=0,F=1,i=2,b=3,J=4,N=5,E=6,s=7,c=8,T=9,a3=10,f=11,q=12,M=13,m=14,x=15,L=16,$=17,p=18;\r\n\tfunction a5(t){var Z=UTIF._binBE.readUshort,u={b:Z(t,0),i:t[2],C:t[3],u:t[4],q:Z(t,5),k:Z(t,7),e:Z(t,9),l:Z(t,11),s:t[13],d:Z(t,14)};\r\n\tif(u.b!=18771||u.i>1||u.q<6||u.q%6||u.e<768||u.e%24||u.l!=768||u.k<u.l||u.k%u.l||u.k-u.e>=u.l||u.s>16||u.s!=u.k/u.l||u.s!=Math.ceil(u.e/u.l)||u.d!=u.q/6||u.u!=12&&u.u!=14&&u.u!=16||u.C!=16&&u.C!=0){throw\"Invalid data\"}if(u.i==0){throw\"Not implemented. We need this file!\"}u.h=u.C==16;\r\n\tu.m=(u.h?u.l*2/3:u.l>>>1)|0;u.A=u.m+2;u.f=64;u.g=(1<<u.u)-1;u.n=4*u.u;return u}function a7(t,Z){var u=new Array(Z.s),e=4*Z.s,Q=16+e;\r\n\tif(e&12)Q+=16-(e&12);for(var V=0,O=16;V<Z.s;O+=4){var o=UTIF._binBE.readUint(t,O);u[V]=t.slice(Q,Q+o);u[V].j=0;u[V].a=0;\r\n\tQ+=o;V++}if(Q!=t.length)throw\"Invalid data\";return u}function a6(t,Z){for(var u=-Z[4],e=0;u<=Z[4];e++,u++){t[e]=u<=-Z[3]?-4:u<=-Z[2]?-3:u<=-Z[1]?-2:u<-Z[0]?-1:u<=Z[0]?0:u<Z[1]?1:u<Z[2]?2:u<Z[3]?3:4}}function a1(t,Z,u){var e=[Z,3*Z+18,5*Z+67,7*Z+276,u];\r\n\tt.o=Z;t.w=(e[4]+2*Z)/(2*Z+1)+1|0;t.v=Math.ceil(Math.log2(t.w));t.t=9;a6(t.c,e)}function a2(t){var Z={c:new Int8Array(2<<t.u)};\r\n\ta1(Z,0,t.g);return Z}function D(t){var Z=[[],[],[]],u=Math.max(2,t.w+32>>>6);for(var e=0;e<3;e++){for(var Q=0;\r\n\tQ<41;Q++){Z[e][Q]=[u,1]}}return Z}function a4(t){for(var Z=-1,u=0;!u;Z++){u=t[t.j]>>>7-t.a&1;t.a++;t.a&=7;\r\n\tif(!t.a)t.j++}return Z}function K(t,Z){var u=0,e=8-t.a,Q=t.j,V=t.a;if(Z){if(Z>=e){do{u<<=e;Z-=e;u|=t[t.j]&(1<<e)-1;\r\n\tt.j++;e=8}while(Z>=8)}if(Z){u<<=Z;e-=Z;u|=t[t.j]>>>e&(1<<Z)-1}t.a=8-e}return u}function a0(t,Z){var u=0;\r\n\tif(Z<t){while(u<=14&&Z<<++u<t);}return u}function r(t,Z,u,e,Q,V,O,o){if(o==null)o=0;var X=V+1,k=X%2,j=0,I=0,a=0,l,R,w=e[Q],S=e[Q-1],H=e[Q-2][X],g=S[X-1],Y=S[X],P=S[X+1],A=w[X-1],v=w[X+1],y=Math.abs,d,C,n,h;\r\n\tif(k){d=y(P-Y);C=y(H-Y);n=y(g-Y)}if(k){h=d>n&&C<d?H+g:d<n&&C<n?H+P:P+g;h=h+2*Y>>>2;if(o){w[X]=h;return}l=Z.t*Z.c[t.g+Y-H]+Z.c[t.g+g-Y]}else{h=Y>g&&Y>P||Y<g&&Y<P?v+A+2*Y>>>2:A+v>>>1;\r\n\tl=Z.t*Z.c[t.g+Y-g]+Z.c[t.g+g-A]}R=y(l);var W=a4(u);if(W<t.n-Z.v-1){var z=a0(O[R][0],O[R][1]);a=K(u,z)+(W<<z)}else{a=K(u,Z.v)+1}a=a&1?-1-(a>>>1):a>>>1;\r\n\tO[R][0]+=y(a);if(O[R][1]==t.f){O[R][0]>>>=1;O[R][1]>>>=1}O[R][1]++;h=l<0?h-a:h+a;if(t.i){if(h<0)h+=Z.w;\r\n\telse if(h>t.g)h-=Z.w}w[X]=h>=0?Math.min(h,t.g):0}function U(t,Z,u){var e=t[0].length;for(var Q=Z;Q<=u;\r\n\tQ++){t[Q][0]=t[Q-1][1];t[Q][e-1]=t[Q-1][e-2]}}function B(t){U(t,s,q);U(t,i,J);U(t,x,$)}function _(t,Z,u,e,Q,V,O,o,X,k,j,I,a){var l=0,R=1,w=Q<M&&Q>J;\r\n\twhile(R<t.m){if(l<t.m){r(t,Z,u,e,Q,l,O[X],t.h&&(w&&k||!w&&(j||(l&I)==a)));r(t,Z,u,e,V,l,O[X],t.h&&(!w&&k||w&&(j||(l&I)==a)));\r\n\tl+=2}if(l>8){r(t,Z,u,e,Q,R,o[X]);r(t,Z,u,e,V,R,o[X]);R+=2}}B(e)}function a8(t,Z,u,e,Q,V){_(t,Z,u,e,i,s,Q,V,0,0,1,0,8);\r\n\t_(t,Z,u,e,c,x,Q,V,1,0,1,0,8);_(t,Z,u,e,b,T,Q,V,2,1,0,3,0);_(t,Z,u,e,a3,L,Q,V,0,0,0,3,2);_(t,Z,u,e,J,f,Q,V,1,0,0,3,2);\r\n\t_(t,Z,u,e,q,$,Q,V,2,1,0,3,0)}function a9(t,Z,u,e,Q,V){var O=V.length,o=t.l;if(Q+1==t.s)o=t.e-Q*t.l;var X=6*t.e*e+Q*t.l;\r\n\tfor(var k=0;k<6;k++){for(var j=0;j<o;j++){var I=V[k%O][j%O],a;if(I==0){a=i+(k>>>1)}else if(I==2){a=x+(k>>>1)}else{a=s+k}var l=t.h?(j*2/3&2147483646|j%3&1)+(j%3>>>1):j>>>1;\r\n\tZ[X+j]=u[a][l+1]}X+=t.e}}UTIF._decompressRAF=function(t,Z){var u=a5(t),e=a7(t,u),Q=a2(u),V=new Int16Array(u.e*u.q);\r\n\tif(Z==null){Z=u.h?[[1,1,0,1,1,2],[1,1,2,1,1,0],[2,0,1,0,2,1],[1,1,2,1,1,0],[1,1,0,1,1,2],[0,2,1,2,0,1]]:[[0,1],[3,2]]}var O=[[G,b],[F,J],[N,f],[E,q],[M,L],[m,$]],o=[];\r\n\tfor(var X=0;X<p;X++){o[X]=new Uint16Array(u.A)}for(var k=0;k<u.s;k++){var j=D(Q),I=D(Q);for(var X=0;\r\n\tX<p;X++){for(var a=0;a<u.A;a++){o[X][a]=0}}for(var l=0;l<u.d;l++){a8(u,Q,e[k],o,j,I);for(var X=0;X<6;\r\n\tX++){for(var a=0;a<u.A;a++){o[O[X][0]][a]=o[O[X][1]][a]}}a9(u,V,o,l,k,Z);for(var X=i;X<p;X++){if([N,E,M,m].indexOf(X)==-1){for(var a=0;\r\n\ta<u.A;a++){o[X][a]=0}}}B(o)}}return V}}())\r\n\t\r\n\t\r\n\t\r\n\t})(UTIF, pako);\r\n\t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/utif2@4.1.0/node_modules/utif2/UTIF.js\n");

/***/ })

};
;