/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/any-base@1.1.0";
exports.ids = ["vendor-chunks/any-base@1.1.0"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/any-base@1.1.0/node_modules/any-base/index.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/.pnpm/any-base@1.1.0/node_modules/any-base/index.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Converter = __webpack_require__(/*! ./src/converter */ \"(ssr)/../../node_modules/.pnpm/any-base@1.1.0/node_modules/any-base/src/converter.js\");\n\n/**\n * Function get source and destination alphabet and return convert function\n *\n * @param {string|Array} srcAlphabet\n * @param {string|Array} dstAlphabet\n *\n * @returns {function(number|Array)}\n */\nfunction anyBase(srcAlphabet, dstAlphabet) {\n    var converter = new Converter(srcAlphabet, dstAlphabet);\n    /**\n     * Convert function\n     *\n     * @param {string|Array} number\n     *\n     * @return {string|Array} number\n     */\n    return function (number) {\n        return converter.convert(number);\n    }\n};\n\nanyBase.BIN = '01';\nanyBase.OCT = '01234567';\nanyBase.DEC = '0123456789';\nanyBase.HEX = '0123456789abcdef';\n\nmodule.exports = anyBase;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2FueS1iYXNlQDEuMS4wL25vZGVfbW9kdWxlcy9hbnktYmFzZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyw2R0FBaUI7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsY0FBYztBQUN6QixXQUFXLGNBQWM7QUFDekI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxjQUFjO0FBQzdCO0FBQ0EsZ0JBQWdCLGNBQWM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiL1VzZXJzL21pa2V3ZXN0aGFkL0Rlc2t0b3AvUmVwb3Mvc3BvcmFkaWMtbGFicy10aWxlLWV4dHJ1ZGVyL25vZGVfbW9kdWxlcy8ucG5wbS9hbnktYmFzZUAxLjEuMC9ub2RlX21vZHVsZXMvYW55LWJhc2UvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIENvbnZlcnRlciA9IHJlcXVpcmUoJy4vc3JjL2NvbnZlcnRlcicpO1xuXG4vKipcbiAqIEZ1bmN0aW9uIGdldCBzb3VyY2UgYW5kIGRlc3RpbmF0aW9uIGFscGhhYmV0IGFuZCByZXR1cm4gY29udmVydCBmdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfEFycmF5fSBzcmNBbHBoYWJldFxuICogQHBhcmFtIHtzdHJpbmd8QXJyYXl9IGRzdEFscGhhYmV0XG4gKlxuICogQHJldHVybnMge2Z1bmN0aW9uKG51bWJlcnxBcnJheSl9XG4gKi9cbmZ1bmN0aW9uIGFueUJhc2Uoc3JjQWxwaGFiZXQsIGRzdEFscGhhYmV0KSB7XG4gICAgdmFyIGNvbnZlcnRlciA9IG5ldyBDb252ZXJ0ZXIoc3JjQWxwaGFiZXQsIGRzdEFscGhhYmV0KTtcbiAgICAvKipcbiAgICAgKiBDb252ZXJ0IGZ1bmN0aW9uXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ3xBcnJheX0gbnVtYmVyXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHtzdHJpbmd8QXJyYXl9IG51bWJlclxuICAgICAqL1xuICAgIHJldHVybiBmdW5jdGlvbiAobnVtYmVyKSB7XG4gICAgICAgIHJldHVybiBjb252ZXJ0ZXIuY29udmVydChudW1iZXIpO1xuICAgIH1cbn07XG5cbmFueUJhc2UuQklOID0gJzAxJztcbmFueUJhc2UuT0NUID0gJzAxMjM0NTY3JztcbmFueUJhc2UuREVDID0gJzAxMjM0NTY3ODknO1xuYW55QmFzZS5IRVggPSAnMDEyMzQ1Njc4OWFiY2RlZic7XG5cbm1vZHVsZS5leHBvcnRzID0gYW55QmFzZTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/any-base@1.1.0/node_modules/any-base/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/any-base@1.1.0/node_modules/any-base/src/converter.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/.pnpm/any-base@1.1.0/node_modules/any-base/src/converter.js ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Converter\n *\n * @param {string|Array} srcAlphabet\n * @param {string|Array} dstAlphabet\n * @constructor\n */\nfunction Converter(srcAlphabet, dstAlphabet) {\n    if (!srcAlphabet || !dstAlphabet || !srcAlphabet.length || !dstAlphabet.length) {\n        throw new Error('Bad alphabet');\n    }\n    this.srcAlphabet = srcAlphabet;\n    this.dstAlphabet = dstAlphabet;\n}\n\n/**\n * Convert number from source alphabet to destination alphabet\n *\n * @param {string|Array} number - number represented as a string or array of points\n *\n * @returns {string|Array}\n */\nConverter.prototype.convert = function(number) {\n    var i, divide, newlen,\n    numberMap = {},\n    fromBase = this.srcAlphabet.length,\n    toBase = this.dstAlphabet.length,\n    length = number.length,\n    result = typeof number === 'string' ? '' : [];\n\n    if (!this.isValid(number)) {\n        throw new Error('Number \"' + number + '\" contains of non-alphabetic digits (' + this.srcAlphabet + ')');\n    }\n\n    if (this.srcAlphabet === this.dstAlphabet) {\n        return number;\n    }\n\n    for (i = 0; i < length; i++) {\n        numberMap[i] = this.srcAlphabet.indexOf(number[i]);\n    }\n    do {\n        divide = 0;\n        newlen = 0;\n        for (i = 0; i < length; i++) {\n            divide = divide * fromBase + numberMap[i];\n            if (divide >= toBase) {\n                numberMap[newlen++] = parseInt(divide / toBase, 10);\n                divide = divide % toBase;\n            } else if (newlen > 0) {\n                numberMap[newlen++] = 0;\n            }\n        }\n        length = newlen;\n        result = this.dstAlphabet.slice(divide, divide + 1).concat(result);\n    } while (newlen !== 0);\n\n    return result;\n};\n\n/**\n * Valid number with source alphabet\n *\n * @param {number} number\n *\n * @returns {boolean}\n */\nConverter.prototype.isValid = function(number) {\n    var i = 0;\n    for (; i < number.length; ++i) {\n        if (this.srcAlphabet.indexOf(number[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n};\n\nmodule.exports = Converter;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2FueS1iYXNlQDEuMS4wL25vZGVfbW9kdWxlcy9hbnktYmFzZS9zcmMvY29udmVydGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsY0FBYztBQUN6QixXQUFXLGNBQWM7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsY0FBYztBQUN6QjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxnQkFBZ0IsWUFBWTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFlBQVk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07O0FBRU47QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsV0FBVyxtQkFBbUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvbWlrZXdlc3RoYWQvRGVza3RvcC9SZXBvcy9zcG9yYWRpYy1sYWJzLXRpbGUtZXh0cnVkZXIvbm9kZV9tb2R1bGVzLy5wbnBtL2FueS1iYXNlQDEuMS4wL25vZGVfbW9kdWxlcy9hbnktYmFzZS9zcmMvY29udmVydGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb252ZXJ0ZXJcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ3xBcnJheX0gc3JjQWxwaGFiZXRcbiAqIEBwYXJhbSB7c3RyaW5nfEFycmF5fSBkc3RBbHBoYWJldFxuICogQGNvbnN0cnVjdG9yXG4gKi9cbmZ1bmN0aW9uIENvbnZlcnRlcihzcmNBbHBoYWJldCwgZHN0QWxwaGFiZXQpIHtcbiAgICBpZiAoIXNyY0FscGhhYmV0IHx8ICFkc3RBbHBoYWJldCB8fCAhc3JjQWxwaGFiZXQubGVuZ3RoIHx8ICFkc3RBbHBoYWJldC5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdCYWQgYWxwaGFiZXQnKTtcbiAgICB9XG4gICAgdGhpcy5zcmNBbHBoYWJldCA9IHNyY0FscGhhYmV0O1xuICAgIHRoaXMuZHN0QWxwaGFiZXQgPSBkc3RBbHBoYWJldDtcbn1cblxuLyoqXG4gKiBDb252ZXJ0IG51bWJlciBmcm9tIHNvdXJjZSBhbHBoYWJldCB0byBkZXN0aW5hdGlvbiBhbHBoYWJldFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfEFycmF5fSBudW1iZXIgLSBudW1iZXIgcmVwcmVzZW50ZWQgYXMgYSBzdHJpbmcgb3IgYXJyYXkgb2YgcG9pbnRzXG4gKlxuICogQHJldHVybnMge3N0cmluZ3xBcnJheX1cbiAqL1xuQ29udmVydGVyLnByb3RvdHlwZS5jb252ZXJ0ID0gZnVuY3Rpb24obnVtYmVyKSB7XG4gICAgdmFyIGksIGRpdmlkZSwgbmV3bGVuLFxuICAgIG51bWJlck1hcCA9IHt9LFxuICAgIGZyb21CYXNlID0gdGhpcy5zcmNBbHBoYWJldC5sZW5ndGgsXG4gICAgdG9CYXNlID0gdGhpcy5kc3RBbHBoYWJldC5sZW5ndGgsXG4gICAgbGVuZ3RoID0gbnVtYmVyLmxlbmd0aCxcbiAgICByZXN1bHQgPSB0eXBlb2YgbnVtYmVyID09PSAnc3RyaW5nJyA/ICcnIDogW107XG5cbiAgICBpZiAoIXRoaXMuaXNWYWxpZChudW1iZXIpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTnVtYmVyIFwiJyArIG51bWJlciArICdcIiBjb250YWlucyBvZiBub24tYWxwaGFiZXRpYyBkaWdpdHMgKCcgKyB0aGlzLnNyY0FscGhhYmV0ICsgJyknKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5zcmNBbHBoYWJldCA9PT0gdGhpcy5kc3RBbHBoYWJldCkge1xuICAgICAgICByZXR1cm4gbnVtYmVyO1xuICAgIH1cblxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICBudW1iZXJNYXBbaV0gPSB0aGlzLnNyY0FscGhhYmV0LmluZGV4T2YobnVtYmVyW2ldKTtcbiAgICB9XG4gICAgZG8ge1xuICAgICAgICBkaXZpZGUgPSAwO1xuICAgICAgICBuZXdsZW4gPSAwO1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGRpdmlkZSA9IGRpdmlkZSAqIGZyb21CYXNlICsgbnVtYmVyTWFwW2ldO1xuICAgICAgICAgICAgaWYgKGRpdmlkZSA+PSB0b0Jhc2UpIHtcbiAgICAgICAgICAgICAgICBudW1iZXJNYXBbbmV3bGVuKytdID0gcGFyc2VJbnQoZGl2aWRlIC8gdG9CYXNlLCAxMCk7XG4gICAgICAgICAgICAgICAgZGl2aWRlID0gZGl2aWRlICUgdG9CYXNlO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChuZXdsZW4gPiAwKSB7XG4gICAgICAgICAgICAgICAgbnVtYmVyTWFwW25ld2xlbisrXSA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbGVuZ3RoID0gbmV3bGVuO1xuICAgICAgICByZXN1bHQgPSB0aGlzLmRzdEFscGhhYmV0LnNsaWNlKGRpdmlkZSwgZGl2aWRlICsgMSkuY29uY2F0KHJlc3VsdCk7XG4gICAgfSB3aGlsZSAobmV3bGVuICE9PSAwKTtcblxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuXG4vKipcbiAqIFZhbGlkIG51bWJlciB3aXRoIHNvdXJjZSBhbHBoYWJldFxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSBudW1iZXJcbiAqXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuQ29udmVydGVyLnByb3RvdHlwZS5pc1ZhbGlkID0gZnVuY3Rpb24obnVtYmVyKSB7XG4gICAgdmFyIGkgPSAwO1xuICAgIGZvciAoOyBpIDwgbnVtYmVyLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIGlmICh0aGlzLnNyY0FscGhhYmV0LmluZGV4T2YobnVtYmVyW2ldKSA9PT0gLTEpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ29udmVydGVyOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/any-base@1.1.0/node_modules/any-base/src/converter.js\n");

/***/ })

};
;