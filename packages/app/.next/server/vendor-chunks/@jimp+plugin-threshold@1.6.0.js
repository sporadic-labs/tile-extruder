"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@jimp+plugin-threshold@1.6.0";
exports.ids = ["vendor-chunks/@jimp+plugin-threshold@1.6.0"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/@jimp+plugin-threshold@1.6.0/node_modules/@jimp/plugin-threshold/dist/commonjs/index.js":
/*!************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@jimp+plugin-threshold@1.6.0/node_modules/@jimp/plugin-threshold/dist/commonjs/index.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.methods = void 0;\nconst utils_1 = __webpack_require__(/*! @jimp/utils */ \"(ssr)/../../node_modules/.pnpm/@jimp+utils@1.6.0/node_modules/@jimp/utils/dist/commonjs/index.js\");\nconst plugin_color_1 = __webpack_require__(/*! @jimp/plugin-color */ \"(ssr)/../../node_modules/.pnpm/@jimp+plugin-color@1.6.0/node_modules/@jimp/plugin-color/dist/commonjs/index.js\");\nconst zod_1 = __webpack_require__(/*! zod */ \"(ssr)/../../node_modules/.pnpm/zod@3.24.1/node_modules/zod/lib/index.js\");\nconst ThresholdOptionsSchema = zod_1.z.object({\n    /** A number auto limited between 0 - 255 */\n    max: zod_1.z.number().min(0).max(255),\n    /** A number auto limited between 0 - 255 (default 255)  */\n    replace: zod_1.z.number().min(0).max(255).optional(),\n    /** A boolean whether to apply greyscale beforehand (default true)  */\n    autoGreyscale: zod_1.z.boolean().optional(),\n});\nexports.methods = {\n    /**\n     * Applies a minimum color threshold to a grayscale image.\n     * Converts image to grayscale by default.\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     *\n     * const image = await Jimp.read(\"test/image.png\");\n     *\n     * image.threshold({ max: 150 });\n     * ```\n     */\n    threshold(image, options) {\n        let { max, replace = 255, \n        // eslint-disable-next-line prefer-const\n        autoGreyscale = true, } = ThresholdOptionsSchema.parse(options);\n        max = (0, utils_1.limit255)(max);\n        replace = (0, utils_1.limit255)(replace);\n        if (autoGreyscale) {\n            plugin_color_1.methods.greyscale(image);\n        }\n        image.scan((_, __, idx) => {\n            const grey = image.bitmap.data[idx] < max ? image.bitmap.data[idx] : replace;\n            image.bitmap.data[idx] = grey;\n            image.bitmap.data[idx + 1] = grey;\n            image.bitmap.data[idx + 2] = grey;\n        });\n        return image;\n    },\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BqaW1wK3BsdWdpbi10aHJlc2hvbGRAMS42LjAvbm9kZV9tb2R1bGVzL0BqaW1wL3BsdWdpbi10aHJlc2hvbGQvZGlzdC9jb21tb25qcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2YsZ0JBQWdCLG1CQUFPLENBQUMscUhBQWE7QUFDckMsdUJBQXVCLG1CQUFPLENBQUMsMElBQW9CO0FBQ25ELGNBQWMsbUJBQU8sQ0FBQyxvRkFBSztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixPQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvbWlrZXdlc3RoYWQvRGVza3RvcC9SZXBvcy9zcG9yYWRpYy1sYWJzLXRpbGUtZXh0cnVkZXIvbm9kZV9tb2R1bGVzLy5wbnBtL0BqaW1wK3BsdWdpbi10aHJlc2hvbGRAMS42LjAvbm9kZV9tb2R1bGVzL0BqaW1wL3BsdWdpbi10aHJlc2hvbGQvZGlzdC9jb21tb25qcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWV0aG9kcyA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQGppbXAvdXRpbHNcIik7XG5jb25zdCBwbHVnaW5fY29sb3JfMSA9IHJlcXVpcmUoXCJAamltcC9wbHVnaW4tY29sb3JcIik7XG5jb25zdCB6b2RfMSA9IHJlcXVpcmUoXCJ6b2RcIik7XG5jb25zdCBUaHJlc2hvbGRPcHRpb25zU2NoZW1hID0gem9kXzEuei5vYmplY3Qoe1xuICAgIC8qKiBBIG51bWJlciBhdXRvIGxpbWl0ZWQgYmV0d2VlbiAwIC0gMjU1ICovXG4gICAgbWF4OiB6b2RfMS56Lm51bWJlcigpLm1pbigwKS5tYXgoMjU1KSxcbiAgICAvKiogQSBudW1iZXIgYXV0byBsaW1pdGVkIGJldHdlZW4gMCAtIDI1NSAoZGVmYXVsdCAyNTUpICAqL1xuICAgIHJlcGxhY2U6IHpvZF8xLnoubnVtYmVyKCkubWluKDApLm1heCgyNTUpLm9wdGlvbmFsKCksXG4gICAgLyoqIEEgYm9vbGVhbiB3aGV0aGVyIHRvIGFwcGx5IGdyZXlzY2FsZSBiZWZvcmVoYW5kIChkZWZhdWx0IHRydWUpICAqL1xuICAgIGF1dG9HcmV5c2NhbGU6IHpvZF8xLnouYm9vbGVhbigpLm9wdGlvbmFsKCksXG59KTtcbmV4cG9ydHMubWV0aG9kcyA9IHtcbiAgICAvKipcbiAgICAgKiBBcHBsaWVzIGEgbWluaW11bSBjb2xvciB0aHJlc2hvbGQgdG8gYSBncmF5c2NhbGUgaW1hZ2UuXG4gICAgICogQ29udmVydHMgaW1hZ2UgdG8gZ3JheXNjYWxlIGJ5IGRlZmF1bHQuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGltcG9ydCB7IEppbXAgfSBmcm9tIFwiamltcFwiO1xuICAgICAqXG4gICAgICogY29uc3QgaW1hZ2UgPSBhd2FpdCBKaW1wLnJlYWQoXCJ0ZXN0L2ltYWdlLnBuZ1wiKTtcbiAgICAgKlxuICAgICAqIGltYWdlLnRocmVzaG9sZCh7IG1heDogMTUwIH0pO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHRocmVzaG9sZChpbWFnZSwgb3B0aW9ucykge1xuICAgICAgICBsZXQgeyBtYXgsIHJlcGxhY2UgPSAyNTUsIFxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWNvbnN0XG4gICAgICAgIGF1dG9HcmV5c2NhbGUgPSB0cnVlLCB9ID0gVGhyZXNob2xkT3B0aW9uc1NjaGVtYS5wYXJzZShvcHRpb25zKTtcbiAgICAgICAgbWF4ID0gKDAsIHV0aWxzXzEubGltaXQyNTUpKG1heCk7XG4gICAgICAgIHJlcGxhY2UgPSAoMCwgdXRpbHNfMS5saW1pdDI1NSkocmVwbGFjZSk7XG4gICAgICAgIGlmIChhdXRvR3JleXNjYWxlKSB7XG4gICAgICAgICAgICBwbHVnaW5fY29sb3JfMS5tZXRob2RzLmdyZXlzY2FsZShpbWFnZSk7XG4gICAgICAgIH1cbiAgICAgICAgaW1hZ2Uuc2NhbigoXywgX18sIGlkeCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZ3JleSA9IGltYWdlLmJpdG1hcC5kYXRhW2lkeF0gPCBtYXggPyBpbWFnZS5iaXRtYXAuZGF0YVtpZHhdIDogcmVwbGFjZTtcbiAgICAgICAgICAgIGltYWdlLmJpdG1hcC5kYXRhW2lkeF0gPSBncmV5O1xuICAgICAgICAgICAgaW1hZ2UuYml0bWFwLmRhdGFbaWR4ICsgMV0gPSBncmV5O1xuICAgICAgICAgICAgaW1hZ2UuYml0bWFwLmRhdGFbaWR4ICsgMl0gPSBncmV5O1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGltYWdlO1xuICAgIH0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@jimp+plugin-threshold@1.6.0/node_modules/@jimp/plugin-threshold/dist/commonjs/index.js\n");

/***/ })

};
;